%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: dna.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Jason Schwarz
%%CreationDate: 8/7/14
%%BoundingBox: 0 0 636 432
%%HiResBoundingBox: 0 0 636 432
%%CropBox: 0 0 636 432
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 9710 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFDA0FFA8A8FFA8A8A8FD7BFF52FF7DA852A8%7DFD57A87DA8FD1FFFA87DA87D7DA87DFD0FA87DFD0FA87DFD04A8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87DFD25FFFD25A8FD25FF%A9FD0FFFA8FD25FF7DA8A8FFA9FFA9FD05FF7DFD04A8FD13FF7DFD0BFFA8%FD0FFFA8FD08FFA97FA9FD04FFA8FD09FFA8FD25FFA8A8FFFFFD04A9FFFF%FF7D52527D277DFD13FFA8FD24FFA9FF7FFD0EFFA8FD25FF7DA8A8FD08FF%A87DA8A87D7DFD13FF7DFD0BFFA8FD0FFFA8FD07FF7FA9FFA9A9FFFFFFA8%FD09FFA8FD25FFA8A8FD22FFA8A8FD21FFA9A9FFFFA9A9FD0CFFA8A8FD25%FFA8A8A8FD09FFA8FFA8FD15FFA8FD0BFFA8FD0FFFA8FD06FFA9A9FFFFFF%7FFFFFFFA8FD09FF7DFD25FFA8A8FFFFAEA8AEA8FFFFFF7D52527D52FD14%FFA8A8FD21FFA9FD04FFA9A9FD0BFFA8A8FD1FFFA8A8FFFD06A8FFAEFFA8%FD04FFA87DA8527DFD14FFA8FD21FFA9A9FD05FF7FA9FD0BFFA8FD20FF27%FF7DA852A87DFD22FFA8A8FD09FFA8FD07FFA8FD07FFA8FD06FFA9A9FFFF%FFA8FFA9A9CFFFFFFFA8FD05FFA8A8FD1FFFA87DA8A87D7D7DA8A8FD0BFF%A8FFA8FD13FF7DFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FF7EFFA8FFFFFFA8FF7EA9CFFFFFFFA8FD05FF7DFD%25FFA8A8FFFFFD04CAFFFFFF7D7D5252527D7D7D52FD10FFA8FD21FFA9FD%08FFA9A9FD09FFA8FD25FF7DA8A8FFCAFFCAFFCBFFFF7D277D7D7D52A852%7DA8FD0FFF7DFD0BFFA8FD0FFFA8FD05FFA9FD08FFA954A9FD08FFA8FD25%FFA8A8FD22FFA8A8FD1FFFA9FD09FFA9A9A9FD07FFA8A8FD25FF7DA8A8FD%09FFA8FD09FFA8FD07FFA8FD05FFA8FD0BFFA8FFA8FD0DFFA8FD04FFA9A8%FD09FFA8A9FD08FF7DFD25FFA8A8FFFFFFAFFFAFFFFFFFA8527D7D7DA87D%A8FD097DA87D7D52A87DFD04A8FD0CFFA827A8527D527DA87D7D7D52FD05%FF7FFF7FFD0BFFA9FD07FFA8A8FD25FFA8A8A8FFAFAFA8AFFFFFFF7D5252%27FD05527D7DFD04527D7D527D5252275252A8A8FD0DFF7D52272727F87D%52277D27F87DFFFFFFA97F7FA9FD0CFF7FFD07FF7DFD25FFA8A8FD0DFFA8%FFFFA8A8FD0FFFA8A87DA8A8A8FFA8A8FFA8A8A8FFFFFFA8FD05FFA8FD08%FFA9A9FD0EFFA9A9FD06FFA8FD1FFFFD06A87DA8A8FD13FFA8FD0DFF7DFD%042752F87D275227F852FF7D52275227A8527D7DA87D7DA87D52A955FD0D%FFA8FFA9A9FD06FFA8FD20FF27FF7D7D52A87DFD05FFCBFFFFFFA8A8527D%7DA87DFD05A87D7D7DA8FD09FFA87DA8FD067DA87D52A8FFA8525227277D%522752277D275227277EFD11FF7FA9FD04FFA8A8FD1FFFA87DA8A87DA87D%A8A8FFA8CBCACBCBFFFF7D7D522752527D527D277D7D2752527DFD09FF7D%527DA8522752277DFFFFFFA8FD07FFA8FFFFFFA8FFCFA97EA9FD0EFFA8FF%FFFF7EFD05FF7DFD1DFFA8A8FD06FFA87DA8FFFFAEFFFFFFA8FFA8FF7DFD%04A8FF7DA87DFD06A8FFA8FFFFFFA8FFFFA827277D7D2752277DFD04FFA8%FD0CFFA9A97FA9FD13FFA9FFFFFFA8A8FD1DFF527DA8FD05FF7DA87DA8A8%A87DA8A8A87DFD07A87DFD09A87DA87DA87DA87DA8A8FD0CFF7DA8FD08FF%A97FA3A8FFA8FD0FFFA8FFFFFFA9A9FD04FF7DFD1CFFA85252FD06FFA8A8%FD23FFFD047D527D7DA852FFFFFF7DFD09FFA9A9A9FD17FFA9FFFFFFA8A8%FD1DFF7DA8FD06FF7DFD23FFA827F8525252FD04277DFFFF7DA8FD07FFA9%A9FD19FFA9A9FFFFFF7DFD1DFF7D7DFD06FFA8A8FD23FFA8A8FD08FFA8FF%7DFD09FFA9FD1AFF7FA9FFFFA8FD1DFF527DFD06FF7DFD0FFFA8FD0FFFA8%FFFFFFA8FD0AFF7DA8A8A8FD07FFA9A9FD04FFA8FD0FFFA8FD05FFA97FFF%FFA8FD1DFF5252FD06FFA8FD22FF52522752A8FD07FF7DFF7DFD08FFA9A9%FD1BFFA9FFFFA8FD1DFF7DA8FFA8A8A87DA87DFD1FFFA8FFA8525252F8A8%FD07FF7DA8A8A8FD07FFA9FD05FFA8FD0FFFA8FD07FF7FFFA8FD1DFFA8A8%FF52A85252527DA8FD0DFFA8FD07FFA8FD17FF7DFF7DFD07FFA9A9FFFFA8%FD1AFFA97EA8FD1DFF5252FD04A87DA87DA8FD04FFA8FFFFFFA8FD04FF7D%277D527DA8525252275227A8FFFFA8FFA8FFA87D527D7D7D52A8527DA8FF%A87DA87DA8FFFFFFA8FFFFA97EFFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFA8FFA8FFFFFFA8FFFF7E7DFD1DFF7D7DFD06FFA8A8FD0DFF7D52%275227A8277D525227527DFD07FF27525227FD0452F8FFFFFF7DFF7DFD07%FFA9FD1FFFA8A8FD1DFF527DFD06FF7DFD25FFA8FFFFA8A8FD04FF7DFF7D%A8FD06FFA9A9FD1FFF7DFD1CFFA87D7DFD06FFA8A8FD0DFFA87DA8A8FD04%7D527DA87D7D7D52527D7D527DA8FD05FF7DFD05FF7DFF7DFD07FFA9FD20%FFA8FD1DFF7DFD07FF7DFD0EFFA82752272727522727527D272752275227%F82727A8FD05FF7DA8FD04FF7DA87DA8FFC3FFFFFFA9A9FD06FFA8FD0FFF%A8FD09FFA8FD1CFFA87DA8FD06FFA8FD1AFFA8FFFFFFA8FD09FF7DFD05FF%7DFF527DFFC3FFFFCFC4AFFD20FFA8FD1DFF527DFD06FF7DFD0EFFA87DA8%52FD077DFD05FFA8A8FD05FFCAFFFFA8A8FD04FF7DA8A8A8CAC3C3CACA9A%CA84FD05FFA8FD0FFFA8FD09FFA8FD1EFFA8FD06FFA8A8FD0DFFA82727F8%2752F87D272752FD05FFA8A8FD04FFC3C3CAFF52A8FD04FF7DFFFFFFCAFF%FFCAC3A9A1A1A8FD1DFFA8A8FD1DFF527DA87DA8A87DA87DA8FD04FFA8FF%FFFFA8FFFFFFA8FFA8FFA8A8FFFFA8FFA8FFA8FD04FF7D7DFFA8FFCACAA8%C3FF7D7DFFFFFFA87DA8FFAFCACAFFCACA7FAEA1A784FFA8FFA8FFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFA87DFD1DFF7D7DFF52A8%525252A8A8FD1DFF7DA8FFCACBCACAFFCAFFA8FD05FF27AFCACACAFFFFFF%A9A984FFC3A884FD1BFFA8A8FD1DFF527DFD06A87DFD0FFFA8FD0FFFA8FF%BDFFC3FFFFCACAFD06FF7DA1C3C3CAFFFFFFA9A8AEFFCAC38AFFFFA8FD0F%FFA8FD09FFA8FD1DFF7D52FD06FFA8A8FD20FFC3CACAFFFFCAFD06FFCAC3%C3CAFD05FF7FAEAEFFFFCAA1FD1CFFA8FD1DFF7D7DFD06FF7DFD0FFFA8FD%0FFFA8FFBDCAC3FFFFCACAFFFFCACAFFC3C3A8FD05FF7FA983FFFFFFCABC%7DFFA8FD0FFFA8FD09FFA8FD1DFF7D7DFD06FFA8FD1EFFCAFFFFCACACBFF%FFCACAFFFFC3CACACAFD07FFA9AEAEFD05FFA1AFFD1AFFA8FD1DFF527DFD%06FF7DFD0FFFA8FD0EFFC3A8FFC3CACAFFFFFFC3FFFD04CAFFFFA8FD04FF%A9A9AEA8FD05FFA1AECBFD0FFFA8FD09FFA8FD1DFF7D7DFD06FFA8A8FD1D%FFBCFD05CAFFFFFFCAFFFFCAFD09FFA3FFA8FD06FFCAA1FD19FFA8A8FD1C%FFA827A8FD06FF7DFD0FFFA8FD0BFFCAFFCAC39AC3C3CACAFFFFFFCACABC%FD05FFA8FD04FFA9A8AEFD06FFCAC3A8FD0FFFA8FD09FF7DFD1EFFA8FD06%FFA8A8FD1AFFC3FFFFCABCC3CAC3FD04FFCAC3CAFD0AFFA9AEAFFD07FFA7%C3CAFD17FFA8A8FD1FFFA87DFFA8A8A87DFD1BFFBCFFCACAA1CAC3C3CAFF%FFFFC3C3FD06FFA8FFFFFFA9A983FD09FF7DCAC3FFFFCAFFCAC3FFFFFFA8%A8A8FFA8FD08FFA87DFD1FFFA827A8525252A8527DA8A8A8FFA8FFFF7DA8%FFA8FFA8A8A8FD09FFCAC3C3CAC3FFC3C3C3FD04FFCAC3FD0AFFA984AEFD%09FF84AFFFC3C3C3CAC3C4C3FF838483A8FD04FFA8FD05FFA8A8FD1FFFFD%05A8FFA852275227272752F87DFD04275227F87DFD0AFFC3C3C3CAAFCAC3%C3CAFD0BFFA8FFFFFF7E84FD0AFFA884FFFFCAFFC3FFFFCA9AA1FFFF83A8%CBFD09FFA8FD25FFA8A8FFA8A87DA8A87DA8A87DFFA8A87D7DA8FD09FFCA%CBFFCACAFFC3CAC3FD10FFA984FD0BFFA8FD07FF83FFC3FFFFFF84AEFFAE%A8FD06FFA8FD25FF7DFFA8A8FD08FFA8FFA8FD0CFFCACAFFC3CAAFCACAC3%CAFD0BFFA8FFFFFF5AAEFD0AFFA8FF83FD04FFAE83FFFFFFC3FFFFFF8383%A8FF83AEFD04FFA8FD25FFA852277DFD042752277D27525227F8FD0BFFCA%FFFFCACAFFFFFFC3FD0FFFA984FD0DFFAE83FFFFFF83FD05FFC3FFFFFFAE%FFFFFFA88AFFFFA8A8FD25FF7D7D7DFF52A87DA8FD087DA8FD0AFFCACAFF%C3CBAFFFFFCACAFD0BFFA8FFA95AA8FD0BFFA8FFFFAEA8FF83FD06FFCAC3%FFA8FD05FFA8A884837DFD25FFA8FD1AFFCAFFFFC3CAFD13FF7EFD10FFAE%83FD09FFCACAC3CAFD06FFA8A8FD25FF7DA8FD19FFCACAFFBCCAFD12FF7E%84FD1EFFCAC3CAFD05FF7DFD25FFA87DFD14FFCACAFFFFFFCAFFFFC3CAFD%12FF8584FD05FFCBFD19FFCACAC4CACAFFFFA8FD1FFFA87DA8A87DA87D7D%A8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFAFFFBDCAA8FFFFCAA8FFC3CA%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF77A8A2C5FFCBA2C4A2FFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFAFFFCAC3C3CA7DFD%20FF52A8527D7D7D27FD0DFFAFFD05FFCACAC3C3FFFFC3FFFFFFCAFD11FF%A37EA2CBA2C5A8FFFFCBCAFFFFFFA8FD19FF9AA1FD20FFFD05A87D7DA8FD%0DFFA8FFFFFFC3C3C3CABDCACACAFD04FFA8FD0FFFA8C55AFFFFFFCBFFFF%FFCBCBFD04FFA8FD0FFFA8FD09FFA1FD25FFA8A8FD0BFFC3FFC3FFFFFFCA%CAC3CAC3CAC3C3CAFD14FFCB78AEFD06FF84FFCBFD1DFFA8A8FD25FF7DFD%0BFFCAC3C3C3A1C3FFCACAFD06C3CAFD04FFA8FD0EFFCB9C84A8FFA8AFFF%AF84AF84CBCBFFFFFFA8FD0FFFA8FD09FF7DFD25FFA8A8FFFFFFC3FD06FF%CACAFFFFC3C3FFC3FFC3CACACAC4CACAFD12FFCBCB8560AFFF8B84AF84FF%FFAF84CBFD1CFFA8A8FD25FF7DFFFFFFCAC3FD06FFC4FFFFFFBCCAC3FFFF%FFCAFFFFFFCAFD13FFC4AF5AA884AFAFAF84FD04FFAF7ECBFD1CFF7DFD25%FFA8A8FFFFFFC3FFC4FD04FFCAFFFFFFCACACAFD10FFA2FD09FFC4A98584%AEFD0AFFAFA2FFA2A9FD19FFA8FD25FF7DFFFFFFCAC3CAC3CAFFFFCAC3FF%FFFFA8FD0FFFA8FFCBBEA8FD04FFCBA2CBA2A8AEA359FD0BFFAF857884A2%A9FD0EFFA8FD09FFA8FD25FFA8FFFFFFCBCAFFC3CACAFFC3FD17FFC4CBFF%CBC4FFCBFFA88585A959FD0EFF85AFFFA9A9AFFFFFCBCBFFFD05CBFFCBFD%0AFFA8FD1FFFA87DA8A87DA87DA8A8FFA1CAA1A29ABD9AA9A8FFA8A87DFF%A8FFA8FFA8A9A8FFA8A9A8FFA8A871FFA2A8A2A2A28453845A607EA859A8%A8FFA8FFA8FFA8FFA8FFA8FFA8FFAEA87DFFA27E7EA27EA27EA884845A84%7EA277CBA2A8A2A9A8FFA8A87DFD20FF52A8525252A87DA27DA87DA27DA2%7DA27EA87D7E7D7D7D847DA87DA87DA87DA87DA87DA87D7E7D7E7DA87DA8%7D847D84A8A87DFD0FA87DA8A1A884FD07A884A884A87DA8837E7DA87EA8%7DA87EA87DA8FD1FFFFD04A85252527D527DFD0AFFFD047D52A8FD09FFA8%7D7D7C7D58A8FD09FFA87D7D525252A8FD09FFA87D7D525252A8FD09FFA8%527D7D7D52FD2BFFA8FD057DFD0AFFA8FD057DFD09FFA8A8FD057DFD09FF%A87D7D7D527DA8FD09FFA87D527D527DA8FD09FFFD067DA8FD2AFFA8FD0F%FFA8FFFFFFA8FD0BFFA8FFFFFFA8FD07FFA8FD07FFA8FD0BFFA8FFFFFFA8%FD0FFFA8FD58FF52527D7D7DFD7BFFA8527D52A8FDFCFFFDFCFFFD3DFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2014-08-07T20:49:42-07:00</xap:CreateDate>
         <xap:ModifyDate>2014-08-07T23:23:56-07:00</xap:ModifyDate>
         <xap:MetadataDate>2014-08-07T23:23:56-07:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>176</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqh5&#xA;NS06MXBkuoUFpQ3RaRR6QYVHqVPw1HSuKqyzRNI8aurSR09RAQSvIVFR2riq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxC+/LexuX8xMl9PCP&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:E82C002D0120E4118EC0CEC0D3579FA0</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:CDF2D2641620E4118EC0CEC0D3579FA0</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>282.222222</stDim:w>
            <stDim:h>211.666667</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.062;PS 2.000;hotconv 1.0.57;makeotf.lib2.0.21895</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -432 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 432 li
636 432 li
636 0 li
cp
clp
[1 0 0 1 0 0 ]ct
60 432 mo
636 432 li
636 0 li
60 0 li
60 432 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
132 399.133 mo
578.4 399.133 li
578.4 53.5337 li
132 53.5337 li
132 399.133 li
cp
f
gsave
132 388.8 mo
578.4 388.8 li
578.4 43.2002 li
132 43.2002 li
132 388.8 li
cp
clp
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
132 388.8 mo
135.95 388.8 li
139.901 388.8 li
143.851 388.8 li
147.802 388.8 li
151.752 388.8 li
155.703 388.8 li
159.653 388.8 li
163.604 388.8 li
167.554 388.8 li
171.504 388.8 li
175.455 388.8 li
179.405 388.8 li
183.356 388.8 li
187.306 388.8 li
191.257 388.8 li
195.207 388.8 li
199.158 388.8 li
203.108 388.8 li
207.058 388.8 li
211.009 388.8 li
214.959 388.8 li
218.91 388.8 li
222.86 388.8 li
226.811 388.8 li
230.761 388.8 li
234.712 388.8 li
238.662 388.8 li
242.612 388.8 li
246.563 388.8 li
250.513 388.8 li
254.464 388.8 li
258.414 388.8 li
262.365 388.8 li
266.315 388.8 li
270.265 388.8 li
274.216 388.8 li
278.166 388.8 li
282.117 388.8 li
286.067 388.8 li
290.018 388.8 li
293.968 388.8 li
297.919 388.8 li
301.869 388.8 li
305.819 388.8 li
309.77 388.8 li
313.72 388.8 li
317.671 388.8 li
321.621 388.8 li
325.572 388.8 li
329.522 388.454 li
333.473 387.372 li
337.423 387.975 li
341.373 385.884 li
345.324 384.511 li
349.274 383.312 li
353.225 382.189 li
357.175 380.607 li
361.126 382.317 li
365.076 376.866 li
369.027 367.521 li
372.977 354.455 li
376.927 350.511 li
380.878 332.797 li
384.828 312.305 li
388.779 311.559 li
392.729 285.901 li
396.68 268.773 li
400.63 255.201 li
404.581 255.681 li
408.531 237.162 li
412.481 219.549 li
416.432 201.029 li
420.382 189.065 li
424.333 164.454 li
428.283 154.38 li
432.234 162.597 li
436.184 154.586 li
440.135 153.453 li
444.085 149.724 li
448.035 148.912 li
451.986 153.457 li
455.936 134.675 li
459.887 139.761 li
463.837 120.671 li
467.788 129.141 li
471.738 125.715 li
475.688 122.885 li
479.639 92.3198 li
483.589 84.4102 li
487.54 70.0459 li
491.49 68.1899 li
495.441 57.1572 li
499.391 52.5361 li
503.342 60.3491 li
507.292 71.6118 li
511.242 82.4912 li
515.193 86.9893 li
519.143 97.4219 li
523.094 96.0049 li
527.044 111.317 li
530.995 101.78 li
534.945 121.366 li
538.896 127.188 li
542.846 135.264 li
546.796 143.005 li
550.747 144.543 li
554.697 162.314 li
558.648 173.152 li
562.598 173.273 li
566.549 182.752 li
570.499 189.822 li
574.45 193.83 li
578.4 206.492 li
0 0 1 rgb
@
132 388.8 mo
135.95 388.8 li
139.901 388.8 li
143.851 388.8 li
147.802 388.8 li
151.752 388.8 li
155.703 388.8 li
159.653 388.8 li
163.604 388.8 li
167.554 388.8 li
171.504 388.8 li
175.455 388.8 li
179.405 388.8 li
183.356 388.8 li
187.306 388.8 li
191.257 388.8 li
195.207 388.8 li
199.158 388.8 li
203.108 388.8 li
207.058 388.8 li
211.009 388.8 li
214.959 388.8 li
218.91 388.8 li
222.86 388.8 li
226.811 388.8 li
230.761 388.8 li
234.712 388.8 li
238.662 388.8 li
242.612 388.8 li
246.563 388.8 li
250.513 388.8 li
254.464 388.8 li
258.414 388.8 li
262.365 388.8 li
266.315 388.8 li
270.265 388.8 li
274.216 388.8 li
278.166 388.8 li
282.117 388.8 li
286.067 388.8 li
290.018 388.8 li
293.968 388.8 li
297.919 388.8 li
301.869 388.8 li
305.819 388.8 li
309.77 388.8 li
313.72 388.8 li
317.671 388.8 li
321.621 388.8 li
325.572 388.8 li
329.522 388.8 li
333.473 388.8 li
337.423 388.8 li
341.373 388.27 li
345.324 387.996 li
349.274 388.016 li
353.225 387.478 li
357.175 387.063 li
361.126 385.559 li
365.076 382.355 li
369.027 376.803 li
372.977 371.209 li
376.927 358.571 li
380.878 342.553 li
384.828 320.682 li
388.779 311.992 li
392.729 305.695 li
396.68 290.039 li
400.63 283.959 li
404.581 268.993 li
408.531 259.057 li
412.481 249.663 li
416.432 227.415 li
420.382 227.236 li
424.333 234.767 li
428.283 236.856 li
432.234 238.999 li
436.184 250.087 li
440.135 259.059 li
444.085 274.383 li
448.035 284.569 li
451.986 292.926 li
455.936 297.941 li
459.887 310.41 li
463.837 307.715 li
467.788 318.508 li
471.738 321.879 li
475.688 320.027 li
479.639 315.967 li
483.589 310.019 li
487.54 304.464 li
491.49 302.894 li
495.441 299.385 li
499.391 296.286 li
503.342 294.853 li
507.292 287.894 li
511.242 292.033 li
515.193 286.525 li
519.143 294.822 li
523.094 295.824 li
527.044 301.853 li
530.995 304.102 li
534.945 308.433 li
538.896 302.442 li
542.846 301.705 li
546.796 303.243 li
550.747 303.302 li
554.697 308.998 li
558.648 309.981 li
562.598 315.225 li
566.549 315.365 li
570.499 315.098 li
574.45 315.617 li
578.4 316.318 li
0 0.501961 0 rgb
@
132 388.8 mo
135.95 388.8 li
139.901 388.8 li
143.851 388.8 li
147.802 388.8 li
151.752 388.8 li
155.703 358.805 li
159.653 388.8 li
163.604 388.8 li
167.554 369.379 li
171.504 388.8 li
175.455 379.946 li
179.405 388.8 li
183.356 380.395 li
187.306 379.796 li
191.257 370.566 li
195.207 348.482 li
199.158 358.443 li
203.108 356.748 li
207.058 349.682 li
211.009 370.861 li
214.959 351.964 li
218.91 371.463 li
222.86 364.235 li
226.811 359.47 li
230.761 345.221 li
234.712 340.661 li
238.662 364.13 li
242.612 329.284 li
246.563 361.998 li
250.513 336.046 li
254.464 362.092 li
258.414 345.449 li
262.365 363.507 li
266.315 339.013 li
270.265 276.237 li
274.216 295.409 li
278.166 291.004 li
282.117 339.397 li
286.067 261.255 li
290.018 286.886 li
293.968 271.862 li
297.919 308.053 li
301.869 238.456 li
305.819 316.695 li
309.77 252.54 li
313.72 237.1 li
317.671 227.751 li
321.621 233.999 li
325.572 232.991 li
329.522 269.753 li
333.473 292.265 li
337.423 275.727 li
341.373 278.782 li
345.324 255.834 li
349.274 261.777 li
353.225 265.841 li
357.175 263.429 li
361.126 250.431 li
365.076 257.763 li
369.027 247.548 li
372.977 251.42 li
376.927 240.882 li
380.878 247.348 li
384.828 244.977 li
388.779 213.96 li
392.729 228.064 li
396.68 226.112 li
400.63 229.476 li
404.581 235.065 li
408.531 220.973 li
412.481 229.511 li
416.432 229.824 li
420.382 233.474 li
424.333 240.601 li
428.283 245.913 li
432.234 256.926 li
436.184 252.81 li
440.135 267.685 li
444.085 275.81 li
448.035 279.179 li
451.986 284.645 li
455.936 282.058 li
459.887 286.233 li
463.837 289.806 li
467.788 293.648 li
471.738 289.249 li
475.688 287.542 li
479.639 295.943 li
483.589 292.04 li
487.54 285.505 li
491.49 293.489 li
495.441 292.032 li
499.391 296.637 li
503.342 295.771 li
507.292 303.156 li
511.242 307.586 li
515.193 314.488 li
519.143 317.916 li
523.094 319.39 li
527.044 318.57 li
530.995 318.554 li
534.945 318.29 li
538.896 322.407 li
542.846 323.736 li
546.796 329.653 li
550.747 328.723 li
554.697 330.359 li
558.648 331.813 li
562.598 334.565 li
566.549 334.299 li
570.499 337.952 li
574.45 339.797 li
578.4 344.971 li
1 0 0 rgb
@
132 388.8 mo
135.95 388.8 li
139.901 388.8 li
143.851 388.8 li
147.802 388.8 li
151.752 388.8 li
155.703 388.8 li
159.653 388.8 li
163.604 388.8 li
167.554 388.8 li
171.504 388.8 li
175.455 388.8 li
179.405 388.8 li
183.356 388.8 li
187.306 388.8 li
191.257 388.8 li
195.207 388.8 li
199.158 388.8 li
203.108 388.8 li
207.058 388.8 li
211.009 388.8 li
214.959 388.8 li
218.91 388.8 li
222.86 388.8 li
226.811 388.8 li
230.761 388.8 li
234.712 388.8 li
238.662 388.8 li
242.612 388.8 li
246.563 388.8 li
250.513 388.8 li
254.464 388.8 li
258.414 388.8 li
262.365 388.8 li
266.315 388.8 li
270.265 388.8 li
274.216 388.8 li
278.166 388.8 li
282.117 388.8 li
286.067 388.8 li
290.018 388.8 li
293.968 388.8 li
297.919 388.8 li
301.869 388.8 li
305.819 388.8 li
309.77 388.8 li
313.72 388.8 li
317.671 388.8 li
321.621 388.22 li
325.572 386.974 li
329.522 386.724 li
333.473 387.372 li
337.423 387.149 li
341.373 385.089 li
345.324 383.438 li
349.274 382.789 li
353.225 377.43 li
357.175 376.884 li
361.126 370.85 li
365.076 368.273 li
369.027 364.579 li
372.977 360.528 li
376.927 358.571 li
380.878 364.051 li
384.828 363.828 li
388.779 363.39 li
392.729 355.811 li
396.68 365.316 li
400.63 363.561 li
404.581 359.585 li
408.531 355.724 li
412.481 355.402 li
416.432 349.494 li
420.382 356.551 li
424.333 362.804 li
428.283 365.29 li
432.234 372.75 li
436.184 374.548 li
440.135 381.742 li
444.085 374.865 li
448.035 372.05 li
451.986 372.32 li
455.936 379.69 li
459.887 381.087 li
463.837 384.323 li
467.788 384.779 li
471.738 384.904 li
475.688 384.755 li
479.639 383.536 li
483.589 383.842 li
487.54 384.657 li
491.49 385.017 li
495.441 385.304 li
499.391 385.396 li
503.342 385.512 li
507.292 386.699 li
511.242 385.671 li
515.193 386.405 li
519.143 386.937 li
523.094 387.551 li
527.044 387.835 li
530.995 387.794 li
534.945 387.973 li
538.896 387.312 li
542.846 387.3 li
546.796 387.98 li
550.747 387.432 li
554.697 387.563 li
558.648 387.614 li
562.598 388.184 li
566.549 388.129 li
570.499 388.278 li
574.45 388.278 li
578.4 387.999 li
0 0.74902 0.74902 rgb
@
132 388.8 mo
135.95 388.8 li
139.901 388.8 li
143.851 388.8 li
147.802 388.8 li
151.752 388.8 li
155.703 388.8 li
159.653 388.8 li
163.604 388.8 li
167.554 388.8 li
171.504 388.8 li
175.455 388.8 li
179.405 388.8 li
183.356 388.8 li
187.306 388.8 li
191.257 388.8 li
195.207 388.8 li
199.158 388.8 li
203.108 388.8 li
207.058 388.8 li
211.009 388.8 li
214.959 388.8 li
218.91 388.8 li
222.86 388.8 li
226.811 388.8 li
230.761 388.8 li
234.712 388.8 li
238.662 388.8 li
242.612 388.8 li
246.563 388.8 li
250.513 388.8 li
254.464 388.8 li
258.414 388.8 li
262.365 388.8 li
266.315 388.8 li
270.265 388.8 li
274.216 388.8 li
278.166 388.8 li
282.117 388.8 li
286.067 388.8 li
290.018 382.006 li
293.968 388.8 li
297.919 388.8 li
301.869 388.8 li
305.819 367.169 li
309.77 384.792 li
313.72 382.705 li
317.671 384.011 li
321.621 381.263 li
325.572 379.671 li
329.522 383.955 li
333.473 383.944 li
337.423 374.219 li
341.373 375.015 li
345.324 377.809 li
349.274 378.346 li
353.225 371.612 li
357.175 373.408 li
361.126 362.622 li
365.076 357.294 li
369.027 354.393 li
372.977 349.01 li
376.927 337.814 li
380.878 338.217 li
384.828 336.803 li
388.779 342.455 li
392.729 332.929 li
396.68 342.616 li
400.63 340.99 li
404.581 337.555 li
408.531 336.507 li
412.481 336.949 li
416.432 331.428 li
420.382 340.584 li
424.333 344.995 li
428.283 362.111 li
432.234 364.584 li
436.184 370.825 li
440.135 377.995 li
444.085 370.08 li
448.035 371.138 li
451.986 371.671 li
455.936 380.78 li
459.887 381.458 li
463.837 385.744 li
467.788 385.182 li
471.738 384.777 li
475.688 383.668 li
479.639 382.221 li
483.589 383.024 li
487.54 383.117 li
491.49 383.65 li
495.441 380.83 li
499.391 380.94 li
503.342 381.16 li
507.292 381.099 li
511.242 381.681 li
515.193 381.572 li
519.143 383.384 li
523.094 383.096 li
527.044 384.746 li
530.995 385.895 li
534.945 387.146 li
538.896 386.735 li
542.846 387.3 li
546.796 387.473 li
550.747 387.458 li
554.697 387.438 li
558.648 387.777 li
562.598 387.94 li
566.549 387.946 li
570.499 388.483 li
574.45 388.348 li
578.4 388.244 li
0.74902 0 0.74902 rgb
@
0.5 lw
0 lc
[1 3 ] 0 dsh
132 388.8 mo
132 43.2002 li
0 0 0 rgb
@
grestore
132 388.8 mo
132 384.8 li
0 0 0 rgb
f
0.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
132 388.8 mo
132 384.8 li
@
132 43.2002 mo
132 47.2002 li
f
132 43.2002 mo
132 47.2002 li
@
119.328 400.764 mo
121.26 400.764 li
121.26 394.092 li
119.16 394.512 li
119.16 393.432 li
121.248 393.012 li
122.436 393.012 li
122.436 400.764 li
124.368 400.764 li
124.368 401.76 li
119.328 401.76 li
119.328 400.764 li
119.328 400.764 li
cp
ef
129.192 397.872 mo
129.72 397.872 130.14 397.692 130.452 397.332 cv
130.764 396.972 130.92 396.468 130.92 395.832 cv
130.92 395.208 130.764 394.704 130.452 394.344 cv
130.14 393.984 129.72 393.792 129.192 393.792 cv
128.664 393.792 128.244 393.984 127.932 394.344 cv
127.62 394.704 127.464 395.208 127.464 395.832 cv
127.464 396.468 127.62 396.972 127.932 397.332 cv
128.244 397.692 128.664 397.872 129.192 397.872 cv
129.192 397.872 li
cp
126.84 401.58 mo
126.84 400.5 li
127.128 400.644 127.428 400.752 127.74 400.824 cv
128.04 400.896 128.34 400.932 128.64 400.932 cv
129.408 400.932 130.008 400.68 130.416 400.152 cv
130.824 399.624 131.064 398.832 131.136 397.752 cv
130.896 398.088 130.608 398.352 130.272 398.532 cv
129.924 398.712 129.54 398.796 129.12 398.796 cv
128.232 398.796 127.536 398.532 127.032 398.004 cv
126.528 397.476 126.276 396.756 126.276 395.832 cv
126.276 394.944 126.54 394.224 127.068 393.672 cv
127.596 393.132 128.304 392.856 129.192 392.856 cv
130.2 392.856 130.98 393.252 131.508 394.02 cv
132.036 394.8 132.312 395.928 132.312 397.392 cv
132.312 398.784 131.976 399.876 131.328 400.692 cv
130.668 401.508 129.792 401.916 128.688 401.916 cv
128.388 401.916 128.088 401.88 127.788 401.832 cv
127.476 401.784 127.164 401.7 126.84 401.58 cv
ef
136.776 392.856 mo
137.748 392.856 138.492 393.252 139.02 394.02 cv
139.536 394.8 139.8 395.928 139.8 397.392 cv
139.8 398.868 139.536 399.996 139.02 400.764 cv
138.492 401.532 137.748 401.916 136.776 401.916 cv
135.792 401.916 135.036 401.532 134.52 400.764 cv
134.004 399.996 133.752 398.868 133.752 397.392 cv
133.752 395.928 134.004 394.8 134.52 394.02 cv
135.036 393.252 135.792 392.856 136.776 392.856 cv
136.776 392.856 li
cp
136.776 393.792 mo
136.164 393.792 135.708 394.092 135.396 394.692 cv
135.084 395.292 134.94 396.192 134.94 397.392 cv
134.94 398.592 135.084 399.492 135.396 400.092 cv
135.708 400.692 136.164 400.992 136.776 400.992 cv
137.388 400.992 137.844 400.692 138.156 400.092 cv
138.456 399.492 138.612 398.592 138.612 397.392 cv
138.612 396.192 138.456 395.292 138.156 394.692 cv
137.844 394.092 137.388 393.792 136.776 393.792 cv
ef
144.456 392.856 mo
145.428 392.856 146.172 393.252 146.7 394.02 cv
147.216 394.8 147.48 395.928 147.48 397.392 cv
147.48 398.868 147.216 399.996 146.7 400.764 cv
146.172 401.532 145.428 401.916 144.456 401.916 cv
143.472 401.916 142.716 401.532 142.2 400.764 cv
141.684 399.996 141.432 398.868 141.432 397.392 cv
141.432 395.928 141.684 394.8 142.2 394.02 cv
142.716 393.252 143.472 392.856 144.456 392.856 cv
144.456 392.856 li
cp
144.456 393.792 mo
143.844 393.792 143.388 394.092 143.076 394.692 cv
142.764 395.292 142.62 396.192 142.62 397.392 cv
142.62 398.592 142.764 399.492 143.076 400.092 cv
143.388 400.692 143.844 400.992 144.456 400.992 cv
145.068 400.992 145.524 400.692 145.836 400.092 cv
146.136 399.492 146.292 398.592 146.292 397.392 cv
146.292 396.192 146.136 395.292 145.836 394.692 cv
145.524 394.092 145.068 393.792 144.456 393.792 cv
ef
gsave
132 388.8 mo
578.4 388.8 li
578.4 43.2002 li
132 43.2002 li
132 388.8 li
cp
clp
[1 3 ] 0 dsh
211.009 388.8 mo
211.009 43.2002 li
@
grestore
211.009 388.8 mo
211.009 384.8 li
f
211.009 388.8 mo
211.009 384.8 li
@
211.009 43.2002 mo
211.009 47.2002 li
f
211.009 43.2002 mo
211.009 47.2002 li
@
198.288 400.764 mo
200.22 400.764 li
200.22 394.092 li
198.12 394.512 li
198.12 393.432 li
200.208 393.012 li
201.396 393.012 li
201.396 400.764 li
203.328 400.764 li
203.328 401.76 li
198.288 401.76 li
198.288 400.764 li
198.288 400.764 li
cp
ef
208.152 397.872 mo
208.68 397.872 209.1 397.692 209.412 397.332 cv
209.724 396.972 209.88 396.468 209.88 395.832 cv
209.88 395.208 209.724 394.704 209.412 394.344 cv
209.1 393.984 208.68 393.792 208.152 393.792 cv
207.624 393.792 207.204 393.984 206.892 394.344 cv
206.58 394.704 206.424 395.208 206.424 395.832 cv
206.424 396.468 206.58 396.972 206.892 397.332 cv
207.204 397.692 207.624 397.872 208.152 397.872 cv
208.152 397.872 li
cp
205.8 401.58 mo
205.8 400.5 li
206.088 400.644 206.388 400.752 206.7 400.824 cv
207 400.896 207.3 400.932 207.6 400.932 cv
208.368 400.932 208.968 400.68 209.376 400.152 cv
209.784 399.624 210.024 398.832 210.096 397.752 cv
209.856 398.088 209.568 398.352 209.232 398.532 cv
208.884 398.712 208.5 398.796 208.08 398.796 cv
207.192 398.796 206.496 398.532 205.992 398.004 cv
205.488 397.476 205.236 396.756 205.236 395.832 cv
205.236 394.944 205.5 394.224 206.028 393.672 cv
206.556 393.132 207.264 392.856 208.152 392.856 cv
209.16 392.856 209.94 393.252 210.468 394.02 cv
210.996 394.8 211.272 395.928 211.272 397.392 cv
211.272 398.784 210.936 399.876 210.288 400.692 cv
209.628 401.508 208.752 401.916 207.648 401.916 cv
207.348 401.916 207.048 401.88 206.748 401.832 cv
206.436 401.784 206.124 401.7 205.8 401.58 cv
ef
214.464 400.764 mo
218.592 400.764 li
218.592 401.76 li
213.036 401.76 li
213.036 400.764 li
213.48 400.308 214.092 399.684 214.872 398.892 cv
215.64 398.112 216.132 397.608 216.336 397.38 cv
216.72 396.96 216.984 396.6 217.128 396.3 cv
217.272 396.012 217.356 395.712 217.356 395.424 cv
217.356 394.968 217.188 394.584 216.864 394.296 cv
216.54 394.008 216.12 393.852 215.592 393.852 cv
215.22 393.852 214.824 393.924 214.416 394.044 cv
214.008 394.176 213.564 394.368 213.096 394.632 cv
213.096 393.432 li
213.576 393.24 214.02 393.096 214.428 393 cv
214.836 392.904 215.22 392.856 215.568 392.856 cv
216.468 392.856 217.188 393.084 217.728 393.54 cv
218.268 393.996 218.544 394.596 218.544 395.352 cv
218.544 395.712 218.472 396.06 218.34 396.372 cv
218.208 396.696 217.968 397.08 217.608 397.512 cv
217.512 397.632 217.2 397.956 216.672 398.496 cv
216.144 399.036 215.412 399.792 214.464 400.764 cv
214.464 400.764 li
cp
ef
223.416 392.856 mo
224.388 392.856 225.132 393.252 225.66 394.02 cv
226.176 394.8 226.44 395.928 226.44 397.392 cv
226.44 398.868 226.176 399.996 225.66 400.764 cv
225.132 401.532 224.388 401.916 223.416 401.916 cv
222.432 401.916 221.676 401.532 221.16 400.764 cv
220.644 399.996 220.392 398.868 220.392 397.392 cv
220.392 395.928 220.644 394.8 221.16 394.02 cv
221.676 393.252 222.432 392.856 223.416 392.856 cv
223.416 392.856 li
cp
223.416 393.792 mo
222.804 393.792 222.348 394.092 222.036 394.692 cv
221.724 395.292 221.58 396.192 221.58 397.392 cv
221.58 398.592 221.724 399.492 222.036 400.092 cv
222.348 400.692 222.804 400.992 223.416 400.992 cv
224.028 400.992 224.484 400.692 224.796 400.092 cv
225.096 399.492 225.252 398.592 225.252 397.392 cv
225.252 396.192 225.096 395.292 224.796 394.692 cv
224.484 394.092 224.028 393.792 223.416 393.792 cv
ef
gsave
132 388.8 mo
578.4 388.8 li
578.4 43.2002 li
132 43.2002 li
132 388.8 li
cp
clp
[1 3 ] 0 dsh
290.018 388.8 mo
290.018 43.2002 li
@
grestore
290.018 388.8 mo
290.018 384.8 li
f
290.018 388.8 mo
290.018 384.8 li
@
290.018 43.2002 mo
290.018 47.2002 li
f
290.018 43.2002 mo
290.018 47.2002 li
@
277.248 400.764 mo
279.18 400.764 li
279.18 394.092 li
277.08 394.512 li
277.08 393.432 li
279.168 393.012 li
280.356 393.012 li
280.356 400.764 li
282.288 400.764 li
282.288 401.76 li
277.248 401.76 li
277.248 400.764 li
277.248 400.764 li
cp
ef
287.112 397.872 mo
287.64 397.872 288.06 397.692 288.372 397.332 cv
288.684 396.972 288.84 396.468 288.84 395.832 cv
288.84 395.208 288.684 394.704 288.372 394.344 cv
288.06 393.984 287.64 393.792 287.112 393.792 cv
286.584 393.792 286.164 393.984 285.852 394.344 cv
285.54 394.704 285.384 395.208 285.384 395.832 cv
285.384 396.468 285.54 396.972 285.852 397.332 cv
286.164 397.692 286.584 397.872 287.112 397.872 cv
287.112 397.872 li
cp
284.76 401.58 mo
284.76 400.5 li
285.048 400.644 285.348 400.752 285.66 400.824 cv
285.96 400.896 286.26 400.932 286.56 400.932 cv
287.328 400.932 287.928 400.68 288.336 400.152 cv
288.744 399.624 288.984 398.832 289.056 397.752 cv
288.816 398.088 288.528 398.352 288.192 398.532 cv
287.844 398.712 287.46 398.796 287.04 398.796 cv
286.152 398.796 285.456 398.532 284.952 398.004 cv
284.448 397.476 284.196 396.756 284.196 395.832 cv
284.196 394.944 284.46 394.224 284.988 393.672 cv
285.516 393.132 286.224 392.856 287.112 392.856 cv
288.12 392.856 288.9 393.252 289.428 394.02 cv
289.956 394.8 290.232 395.928 290.232 397.392 cv
290.232 398.784 289.896 399.876 289.248 400.692 cv
288.588 401.508 287.712 401.916 286.608 401.916 cv
286.308 401.916 286.008 401.88 285.708 401.832 cv
285.396 401.784 285.084 401.7 284.76 401.58 cv
ef
295.344 393.012 mo
296.832 393.012 li
296.832 398.712 li
298.08 398.712 li
298.08 399.696 li
296.832 399.696 li
296.832 401.76 li
295.656 401.76 li
295.656 399.696 li
291.708 399.696 li
291.708 398.556 li
295.344 393.012 li
295.344 393.012 li
cp
295.656 394.044 mo
292.668 398.712 li
295.656 398.712 li
295.656 394.044 li
ef
302.616 392.856 mo
303.588 392.856 304.332 393.252 304.86 394.02 cv
305.376 394.8 305.64 395.928 305.64 397.392 cv
305.64 398.868 305.376 399.996 304.86 400.764 cv
304.332 401.532 303.588 401.916 302.616 401.916 cv
301.632 401.916 300.876 401.532 300.36 400.764 cv
299.844 399.996 299.592 398.868 299.592 397.392 cv
299.592 395.928 299.844 394.8 300.36 394.02 cv
300.876 393.252 301.632 392.856 302.616 392.856 cv
302.616 392.856 li
cp
302.616 393.792 mo
302.004 393.792 301.548 394.092 301.236 394.692 cv
300.924 395.292 300.78 396.192 300.78 397.392 cv
300.78 398.592 300.924 399.492 301.236 400.092 cv
301.548 400.692 302.004 400.992 302.616 400.992 cv
303.228 400.992 303.684 400.692 303.996 400.092 cv
304.296 399.492 304.452 398.592 304.452 397.392 cv
304.452 396.192 304.296 395.292 303.996 394.692 cv
303.684 394.092 303.228 393.792 302.616 393.792 cv
ef
gsave
132 388.8 mo
578.4 388.8 li
578.4 43.2002 li
132 43.2002 li
132 388.8 li
cp
clp
[1 3 ] 0 dsh
369.027 388.8 mo
369.027 43.2002 li
@
grestore
369.027 388.8 mo
369.027 384.8 li
f
369.027 388.8 mo
369.027 384.8 li
@
369.027 43.2002 mo
369.027 47.2002 li
f
369.027 43.2002 mo
369.027 47.2002 li
@
356.208 400.764 mo
358.14 400.764 li
358.14 394.092 li
356.04 394.512 li
356.04 393.432 li
358.128 393.012 li
359.316 393.012 li
359.316 400.764 li
361.248 400.764 li
361.248 401.76 li
356.208 401.76 li
356.208 400.764 li
356.208 400.764 li
cp
ef
366.072 397.872 mo
366.6 397.872 367.02 397.692 367.332 397.332 cv
367.644 396.972 367.8 396.468 367.8 395.832 cv
367.8 395.208 367.644 394.704 367.332 394.344 cv
367.02 393.984 366.6 393.792 366.072 393.792 cv
365.544 393.792 365.124 393.984 364.813 394.344 cv
364.5 394.704 364.344 395.208 364.344 395.832 cv
364.344 396.468 364.5 396.972 364.813 397.332 cv
365.124 397.692 365.544 397.872 366.072 397.872 cv
366.072 397.872 li
cp
363.72 401.58 mo
363.72 400.5 li
364.008 400.644 364.308 400.752 364.62 400.824 cv
364.92 400.896 365.22 400.932 365.52 400.932 cv
366.288 400.932 366.888 400.68 367.296 400.152 cv
367.704 399.624 367.944 398.832 368.016 397.752 cv
367.776 398.088 367.488 398.352 367.152 398.532 cv
366.804 398.712 366.42 398.796 366 398.796 cv
365.112 398.796 364.416 398.532 363.912 398.004 cv
363.408 397.476 363.156 396.756 363.156 395.832 cv
363.156 394.944 363.42 394.224 363.948 393.672 cv
364.476 393.132 365.184 392.856 366.072 392.856 cv
367.08 392.856 367.86 393.252 368.388 394.02 cv
368.916 394.8 369.192 395.928 369.192 397.392 cv
369.192 398.784 368.856 399.876 368.208 400.692 cv
367.548 401.508 366.672 401.916 365.568 401.916 cv
365.268 401.916 364.968 401.88 364.668 401.832 cv
364.356 401.784 364.044 401.7 363.72 401.58 cv
ef
376.392 393.204 mo
376.392 394.284 li
376.092 394.14 375.792 394.032 375.492 393.96 cv
375.18 393.888 374.88 393.852 374.592 393.852 cv
373.8 393.852 373.2 394.116 372.792 394.644 cv
372.384 395.172 372.144 395.976 372.096 397.032 cv
372.324 396.696 372.612 396.432 372.96 396.252 cv
373.308 396.072 373.692 395.976 374.112 395.976 cv
374.988 395.976 375.684 396.252 376.188 396.78 cv
376.692 397.308 376.956 398.04 376.956 398.952 cv
376.956 399.852 376.68 400.572 376.152 401.112 cv
375.624 401.652 374.916 401.916 374.04 401.916 cv
373.032 401.916 372.252 401.532 371.724 400.764 cv
371.184 399.996 370.92 398.868 370.92 397.392 cv
370.92 396.012 371.244 394.908 371.904 394.092 cv
372.552 393.276 373.44 392.856 374.544 392.856 cv
374.832 392.856 375.132 392.892 375.444 392.94 cv
375.744 393 376.056 393.084 376.392 393.204 cv
376.392 393.204 li
cp
374.04 396.912 mo
373.512 396.912 373.092 397.104 372.78 397.464 cv
372.468 397.824 372.313 398.328 372.313 398.952 cv
372.313 399.588 372.468 400.092 372.78 400.452 cv
373.092 400.812 373.512 400.992 374.04 400.992 cv
374.568 400.992 374.988 400.812 375.3 400.452 cv
375.612 400.092 375.768 399.588 375.768 398.952 cv
375.768 398.328 375.612 397.824 375.3 397.464 cv
374.988 397.104 374.568 396.912 374.04 396.912 cv
ef
381.576 392.856 mo
382.548 392.856 383.292 393.252 383.82 394.02 cv
384.336 394.8 384.6 395.928 384.6 397.392 cv
384.6 398.868 384.336 399.996 383.82 400.764 cv
383.292 401.532 382.548 401.916 381.576 401.916 cv
380.592 401.916 379.836 401.532 379.32 400.764 cv
378.804 399.996 378.552 398.868 378.552 397.392 cv
378.552 395.928 378.804 394.8 379.32 394.02 cv
379.836 393.252 380.592 392.856 381.576 392.856 cv
381.576 392.856 li
cp
381.576 393.792 mo
380.964 393.792 380.508 394.092 380.196 394.692 cv
379.884 395.292 379.74 396.192 379.74 397.392 cv
379.74 398.592 379.884 399.492 380.196 400.092 cv
380.508 400.692 380.964 400.992 381.576 400.992 cv
382.188 400.992 382.644 400.692 382.956 400.092 cv
383.256 399.492 383.412 398.592 383.412 397.392 cv
383.412 396.192 383.256 395.292 382.956 394.692 cv
382.644 394.092 382.188 393.792 381.576 393.792 cv
ef
gsave
132 388.8 mo
578.4 388.8 li
578.4 43.2002 li
132 43.2002 li
132 388.8 li
cp
clp
[1 3 ] 0 dsh
448.035 388.8 mo
448.035 43.2002 li
@
grestore
448.035 388.8 mo
448.035 384.8 li
f
448.035 388.8 mo
448.035 384.8 li
@
448.035 43.2002 mo
448.035 47.2002 li
f
448.035 43.2002 mo
448.035 47.2002 li
@
435.408 400.764 mo
437.34 400.764 li
437.34 394.092 li
435.24 394.512 li
435.24 393.432 li
437.328 393.012 li
438.516 393.012 li
438.516 400.764 li
440.448 400.764 li
440.448 401.76 li
435.408 401.76 li
435.408 400.764 li
435.408 400.764 li
cp
ef
445.032 397.872 mo
445.56 397.872 445.98 397.692 446.292 397.332 cv
446.604 396.972 446.76 396.468 446.76 395.832 cv
446.76 395.208 446.604 394.704 446.292 394.344 cv
445.98 393.984 445.56 393.792 445.032 393.792 cv
444.504 393.792 444.084 393.984 443.772 394.344 cv
443.46 394.704 443.304 395.208 443.304 395.832 cv
443.304 396.468 443.46 396.972 443.772 397.332 cv
444.084 397.692 444.504 397.872 445.032 397.872 cv
445.032 397.872 li
cp
442.68 401.58 mo
442.68 400.5 li
442.968 400.644 443.268 400.752 443.58 400.824 cv
443.88 400.896 444.18 400.932 444.48 400.932 cv
445.248 400.932 445.848 400.68 446.256 400.152 cv
446.664 399.624 446.904 398.832 446.976 397.752 cv
446.736 398.088 446.448 398.352 446.112 398.532 cv
445.764 398.712 445.38 398.796 444.96 398.796 cv
444.072 398.796 443.376 398.532 442.872 398.004 cv
442.368 397.476 442.116 396.756 442.116 395.832 cv
442.116 394.944 442.38 394.224 442.908 393.672 cv
443.436 393.132 444.144 392.856 445.032 392.856 cv
446.04 392.856 446.82 393.252 447.348 394.02 cv
447.876 394.8 448.152 395.928 448.152 397.392 cv
448.152 398.784 447.816 399.876 447.168 400.692 cv
446.508 401.508 445.632 401.916 444.528 401.916 cv
444.228 401.916 443.928 401.88 443.628 401.832 cv
443.316 401.784 443.004 401.7 442.68 401.58 cv
ef
451.236 395.232 mo
451.236 395.688 451.368 396.048 451.656 396.3 cv
451.944 396.552 452.34 396.672 452.856 396.672 cv
453.36 396.672 453.756 396.552 454.044 396.3 cv
454.332 396.048 454.476 395.688 454.476 395.232 cv
454.476 394.776 454.332 394.428 454.044 394.176 cv
453.756 393.924 453.36 393.792 452.856 393.792 cv
452.34 393.792 451.944 393.924 451.656 394.176 cv
451.368 394.428 451.236 394.776 451.236 395.232 cv
451.236 395.232 li
cp
451.668 397.104 mo
451.164 396.984 450.768 396.744 450.48 396.396 cv
450.192 396.048 450.06 395.628 450.06 395.124 cv
450.06 394.428 450.3 393.876 450.804 393.468 cv
451.296 393.06 451.98 392.856 452.856 392.856 cv
453.72 392.856 454.404 393.06 454.908 393.468 cv
455.4 393.876 455.652 394.428 455.652 395.124 cv
455.652 395.628 455.508 396.048 455.22 396.396 cv
454.932 396.744 454.548 396.984 454.044 397.104 cv
454.608 397.236 455.052 397.5 455.376 397.884 cv
455.688 398.268 455.856 398.748 455.856 399.3 cv
455.856 400.152 455.592 400.8 455.076 401.244 cv
454.548 401.7 453.816 401.916 452.856 401.916 cv
451.884 401.916 451.14 401.7 450.624 401.244 cv
450.108 400.8 449.856 400.152 449.856 399.3 cv
449.856 398.748 450.012 398.268 450.336 397.884 cv
450.648 397.5 451.092 397.236 451.668 397.104 cv
452.856 397.608 mo
452.292 397.608 451.848 397.764 451.524 398.064 cv
451.2 398.364 451.044 398.771 451.044 399.3 cv
451.044 399.828 451.2 400.248 451.524 400.548 cv
451.848 400.848 452.292 400.992 452.856 400.992 cv
453.408 400.992 453.852 400.848 454.176 400.536 cv
454.5 400.236 454.668 399.828 454.668 399.3 cv
454.668 398.771 454.5 398.364 454.188 398.064 cv
453.864 397.764 453.42 397.608 452.856 397.608 cv
ef
460.536 392.856 mo
461.508 392.856 462.252 393.252 462.78 394.02 cv
463.296 394.8 463.56 395.928 463.56 397.392 cv
463.56 398.868 463.296 399.996 462.78 400.764 cv
462.252 401.532 461.508 401.916 460.536 401.916 cv
459.552 401.916 458.796 401.532 458.28 400.764 cv
457.764 399.996 457.512 398.868 457.512 397.392 cv
457.512 395.928 457.764 394.8 458.28 394.02 cv
458.796 393.252 459.552 392.856 460.536 392.856 cv
460.536 392.856 li
cp
460.536 393.792 mo
459.924 393.792 459.468 394.092 459.156 394.692 cv
458.844 395.292 458.7 396.192 458.7 397.392 cv
458.7 398.592 458.844 399.492 459.156 400.092 cv
459.468 400.692 459.924 400.992 460.536 400.992 cv
461.148 400.992 461.604 400.692 461.916 400.092 cv
462.216 399.492 462.372 398.592 462.372 397.392 cv
462.372 396.192 462.216 395.292 461.916 394.692 cv
461.604 394.092 461.148 393.792 460.536 393.792 cv
ef
gsave
132 388.8 mo
578.4 388.8 li
578.4 43.2002 li
132 43.2002 li
132 388.8 li
cp
clp
[1 3 ] 0 dsh
527.044 388.8 mo
527.044 43.2002 li
@
grestore
527.044 388.8 mo
527.044 384.8 li
f
527.044 388.8 mo
527.044 384.8 li
@
527.044 43.2002 mo
527.044 47.2002 li
f
527.044 43.2002 mo
527.044 47.2002 li
@
514.944 400.764 mo
519.072 400.764 li
519.072 401.76 li
513.516 401.76 li
513.516 400.764 li
513.96 400.308 514.572 399.684 515.352 398.892 cv
516.12 398.112 516.612 397.608 516.816 397.38 cv
517.2 396.96 517.464 396.6 517.608 396.3 cv
517.752 396.012 517.836 395.712 517.836 395.424 cv
517.836 394.968 517.668 394.584 517.344 394.296 cv
517.02 394.008 516.6 393.852 516.072 393.852 cv
515.7 393.852 515.304 393.924 514.896 394.044 cv
514.488 394.176 514.044 394.368 513.576 394.632 cv
513.576 393.432 li
514.056 393.24 514.5 393.096 514.908 393 cv
515.316 392.904 515.7 392.856 516.048 392.856 cv
516.948 392.856 517.668 393.084 518.208 393.54 cv
518.748 393.996 519.024 394.596 519.024 395.352 cv
519.024 395.712 518.952 396.06 518.82 396.372 cv
518.688 396.696 518.448 397.08 518.088 397.512 cv
517.992 397.632 517.68 397.956 517.152 398.496 cv
516.624 399.036 515.892 399.792 514.944 400.764 cv
514.944 400.764 li
cp
ef
524.136 392.856 mo
525.108 392.856 525.852 393.252 526.38 394.02 cv
526.896 394.8 527.16 395.928 527.16 397.392 cv
527.16 398.868 526.896 399.996 526.38 400.764 cv
525.852 401.532 525.108 401.916 524.136 401.916 cv
523.152 401.916 522.396 401.532 521.88 400.764 cv
521.364 399.996 521.112 398.868 521.112 397.392 cv
521.112 395.928 521.364 394.8 521.88 394.02 cv
522.396 393.252 523.152 392.856 524.136 392.856 cv
524.136 392.856 li
cp
524.136 393.792 mo
523.524 393.792 523.068 394.092 522.756 394.692 cv
522.444 395.292 522.3 396.192 522.3 397.392 cv
522.3 398.592 522.444 399.492 522.756 400.092 cv
523.068 400.692 523.524 400.992 524.136 400.992 cv
524.748 400.992 525.204 400.692 525.516 400.092 cv
525.816 399.492 525.972 398.592 525.972 397.392 cv
525.972 396.192 525.816 395.292 525.516 394.692 cv
525.204 394.092 524.748 393.792 524.136 393.792 cv
ef
531.576 392.856 mo
532.548 392.856 533.292 393.252 533.82 394.02 cv
534.336 394.8 534.6 395.928 534.6 397.392 cv
534.6 398.868 534.336 399.996 533.82 400.764 cv
533.292 401.532 532.548 401.916 531.576 401.916 cv
530.592 401.916 529.836 401.532 529.32 400.764 cv
528.804 399.996 528.552 398.868 528.552 397.392 cv
528.552 395.928 528.804 394.8 529.32 394.02 cv
529.836 393.252 530.592 392.856 531.576 392.856 cv
531.576 392.856 li
cp
531.576 393.792 mo
530.964 393.792 530.508 394.092 530.196 394.692 cv
529.884 395.292 529.74 396.192 529.74 397.392 cv
529.74 398.592 529.884 399.492 530.196 400.092 cv
530.508 400.692 530.964 400.992 531.576 400.992 cv
532.188 400.992 532.644 400.692 532.956 400.092 cv
533.256 399.492 533.412 398.592 533.412 397.392 cv
533.412 396.192 533.256 395.292 532.956 394.692 cv
532.644 394.092 532.188 393.792 531.576 393.792 cv
ef
539.256 392.856 mo
540.229 392.856 540.972 393.252 541.5 394.02 cv
542.016 394.8 542.28 395.928 542.28 397.392 cv
542.28 398.868 542.016 399.996 541.5 400.764 cv
540.972 401.532 540.229 401.916 539.256 401.916 cv
538.271 401.916 537.516 401.532 537 400.764 cv
536.484 399.996 536.232 398.868 536.232 397.392 cv
536.232 395.928 536.484 394.8 537 394.02 cv
537.516 393.252 538.271 392.856 539.256 392.856 cv
539.256 392.856 li
cp
539.256 393.792 mo
538.644 393.792 538.188 394.092 537.876 394.692 cv
537.564 395.292 537.42 396.192 537.42 397.392 cv
537.42 398.592 537.564 399.492 537.876 400.092 cv
538.188 400.692 538.644 400.992 539.256 400.992 cv
539.868 400.992 540.324 400.692 540.636 400.092 cv
540.936 399.492 541.092 398.592 541.092 397.392 cv
541.092 396.192 540.936 395.292 540.636 394.692 cv
540.324 394.092 539.868 393.792 539.256 393.792 cv
ef
342.468 406.932 mo
343.728 406.932 li
346.152 410.532 li
348.564 406.932 li
349.836 406.932 li
346.74 411.516 li
346.74 415.68 li
345.552 415.68 li
345.552 411.516 li
342.468 406.932 li
342.468 406.932 li
cp
ef
353.904 411.816 mo
353.892 411.228 353.724 410.76 353.412 410.4 cv
353.088 410.052 352.656 409.872 352.128 409.872 cv
351.528 409.872 351.048 410.052 350.688 410.388 cv
350.328 410.724 350.112 411.204 350.064 411.816 cv
353.904 411.816 li
353.904 411.816 li
cp
354.984 412.128 mo
354.984 412.656 li
350.028 412.656 li
350.076 413.4 350.292 413.976 350.7 414.36 cv
351.096 414.744 351.648 414.936 352.368 414.936 cv
352.776 414.936 353.184 414.888 353.568 414.792 cv
353.952 414.696 354.348 414.54 354.732 414.324 cv
354.732 415.344 li
354.348 415.512 353.952 415.644 353.544 415.716 cv
353.136 415.788 352.716 415.836 352.308 415.836 cv
351.252 415.836 350.424 415.536 349.813 414.936 cv
349.2 414.336 348.9 413.508 348.9 412.464 cv
348.9 411.396 349.188 410.544 349.764 409.908 cv
350.34 409.284 351.132 408.96 352.116 408.96 cv
353.004 408.96 353.7 409.248 354.216 409.812 cv
354.72 410.388 354.984 411.156 354.984 412.128 cv
ef
361.944 411.936 mo
361.944 415.68 li
360.864 415.68 li
360.864 414.684 li
360.612 415.092 360.3 415.38 359.94 415.56 cv
359.58 415.74 359.124 415.836 358.596 415.836 cv
357.924 415.836 357.384 415.656 356.988 415.284 cv
356.592 414.912 356.4 414.408 356.4 413.771 cv
356.4 413.04 356.64 412.488 357.144 412.104 cv
357.636 411.732 358.368 411.54 359.352 411.54 cv
360.864 411.54 li
360.864 411.432 li
360.864 410.94 360.696 410.556 360.372 410.28 cv
360.048 410.016 359.592 409.872 359.004 409.872 cv
358.62 409.872 358.26 409.92 357.9 410.016 cv
357.54 410.112 357.204 410.244 356.88 410.412 cv
356.88 409.416 li
357.264 409.271 357.648 409.152 358.02 409.08 cv
358.392 409.008 358.752 408.96 359.112 408.96 cv
360.06 408.96 360.768 409.212 361.236 409.704 cv
361.704 410.196 361.944 410.94 361.944 411.936 cv
361.944 411.936 li
cp
359.796 412.38 mo
358.92 412.38 358.32 412.488 357.984 412.68 cv
357.648 412.884 357.48 413.22 357.48 413.7 cv
357.48 414.084 357.6 414.396 357.852 414.612 cv
358.104 414.84 358.452 414.948 358.884 414.948 cv
359.484 414.948 359.964 414.744 360.324 414.312 cv
360.684 413.892 360.864 413.328 360.864 412.62 cv
360.864 412.38 li
359.796 412.38 li
ef
367.813 410.124 mo
367.692 410.052 367.56 410.004 367.416 409.968 cv
367.272 409.944 367.116 409.92 366.948 409.92 cv
366.336 409.92 365.868 410.124 365.544 410.52 cv
365.208 410.916 365.052 411.48 365.052 412.224 cv
365.052 415.68 li
363.972 415.68 li
363.972 409.116 li
365.052 409.116 li
365.052 410.136 li
365.268 409.74 365.568 409.44 365.928 409.248 cv
366.288 409.056 366.732 408.96 367.26 408.96 cv
367.332 408.96 367.416 408.972 367.512 408.972 cv
367.596 408.984 367.692 408.996 367.813 409.02 cv
367.813 410.124 li
367.813 410.124 li
cp
ef
gsave
132 388.8 mo
578.4 388.8 li
578.4 43.2002 li
132 43.2002 li
132 388.8 li
cp
clp
[1 3 ] 0 dsh
132 388.8 mo
578.4 388.8 li
@
grestore
132 388.8 mo
136 388.8 li
f
132 388.8 mo
136 388.8 li
@
578.4 388.8 mo
574.4 388.8 li
f
578.4 388.8 mo
574.4 388.8 li
@
106.776 384.216 mo
107.748 384.216 108.492 384.612 109.02 385.38 cv
109.536 386.16 109.8 387.288 109.8 388.752 cv
109.8 390.228 109.536 391.356 109.02 392.124 cv
108.492 392.892 107.748 393.276 106.776 393.276 cv
105.792 393.276 105.036 392.892 104.52 392.124 cv
104.004 391.356 103.752 390.228 103.752 388.752 cv
103.752 387.288 104.004 386.16 104.52 385.38 cv
105.036 384.612 105.792 384.216 106.776 384.216 cv
106.776 384.216 li
cp
106.776 385.152 mo
106.164 385.152 105.708 385.452 105.396 386.052 cv
105.084 386.652 104.94 387.552 104.94 388.752 cv
104.94 389.952 105.084 390.852 105.396 391.452 cv
105.708 392.052 106.164 392.352 106.776 392.352 cv
107.388 392.352 107.844 392.052 108.156 391.452 cv
108.456 390.852 108.612 389.952 108.612 388.752 cv
108.612 387.552 108.456 386.652 108.156 386.052 cv
107.844 385.452 107.388 385.152 106.776 385.152 cv
ef
111.684 391.632 mo
112.92 391.632 li
112.92 393.12 li
111.684 393.12 li
111.684 391.632 li
111.684 391.632 li
cp
ef
118.056 384.216 mo
119.028 384.216 119.772 384.612 120.3 385.38 cv
120.816 386.16 121.08 387.288 121.08 388.752 cv
121.08 390.228 120.816 391.356 120.3 392.124 cv
119.772 392.892 119.028 393.276 118.056 393.276 cv
117.072 393.276 116.316 392.892 115.8 392.124 cv
115.284 391.356 115.032 390.228 115.032 388.752 cv
115.032 387.288 115.284 386.16 115.8 385.38 cv
116.316 384.612 117.072 384.216 118.056 384.216 cv
118.056 384.216 li
cp
118.056 385.152 mo
117.444 385.152 116.988 385.452 116.676 386.052 cv
116.364 386.652 116.22 387.552 116.22 388.752 cv
116.22 389.952 116.364 390.852 116.676 391.452 cv
116.988 392.052 117.444 392.352 118.056 392.352 cv
118.668 392.352 119.124 392.052 119.436 391.452 cv
119.736 390.852 119.892 389.952 119.892 388.752 cv
119.892 387.552 119.736 386.652 119.436 386.052 cv
119.124 385.452 118.668 385.152 118.056 385.152 cv
ef
125.736 384.216 mo
126.708 384.216 127.452 384.612 127.98 385.38 cv
128.496 386.16 128.76 387.288 128.76 388.752 cv
128.76 390.228 128.496 391.356 127.98 392.124 cv
127.452 392.892 126.708 393.276 125.736 393.276 cv
124.752 393.276 123.996 392.892 123.48 392.124 cv
122.964 391.356 122.712 390.228 122.712 388.752 cv
122.712 387.288 122.964 386.16 123.48 385.38 cv
123.996 384.612 124.752 384.216 125.736 384.216 cv
125.736 384.216 li
cp
125.736 385.152 mo
125.124 385.152 124.668 385.452 124.356 386.052 cv
124.044 386.652 123.9 387.552 123.9 388.752 cv
123.9 389.952 124.044 390.852 124.356 391.452 cv
124.668 392.052 125.124 392.352 125.736 392.352 cv
126.348 392.352 126.804 392.052 127.116 391.452 cv
127.416 390.852 127.572 389.952 127.572 388.752 cv
127.572 387.552 127.416 386.652 127.116 386.052 cv
126.804 385.452 126.348 385.152 125.736 385.152 cv
ef
gsave
132 388.8 mo
578.4 388.8 li
578.4 43.2002 li
132 43.2002 li
132 388.8 li
cp
clp
[1 3 ] 0 dsh
132 339.429 mo
578.4 339.429 li
@
grestore
132 339.429 mo
136 339.429 li
f
132 339.429 mo
136 339.429 li
@
578.4 339.429 mo
574.4 339.429 li
f
578.4 339.429 mo
574.4 339.429 li
@
107.016 334.776 mo
107.988 334.776 108.732 335.172 109.26 335.94 cv
109.776 336.72 110.04 337.848 110.04 339.312 cv
110.04 340.788 109.776 341.916 109.26 342.684 cv
108.732 343.452 107.988 343.836 107.016 343.836 cv
106.032 343.836 105.276 343.452 104.76 342.684 cv
104.244 341.916 103.992 340.788 103.992 339.312 cv
103.992 337.848 104.244 336.72 104.76 335.94 cv
105.276 335.172 106.032 334.776 107.016 334.776 cv
107.016 334.776 li
cp
107.016 335.712 mo
106.404 335.712 105.948 336.012 105.636 336.612 cv
105.324 337.212 105.18 338.112 105.18 339.312 cv
105.18 340.512 105.324 341.412 105.636 342.012 cv
105.948 342.612 106.404 342.912 107.016 342.912 cv
107.628 342.912 108.084 342.612 108.396 342.012 cv
108.696 341.412 108.852 340.512 108.852 339.312 cv
108.852 338.112 108.696 337.212 108.396 336.612 cv
108.084 336.012 107.628 335.712 107.016 335.712 cv
ef
112.164 342.192 mo
113.4 342.192 li
113.4 343.68 li
112.164 343.68 li
112.164 342.192 li
112.164 342.192 li
cp
ef
118.536 334.776 mo
119.508 334.776 120.252 335.172 120.78 335.94 cv
121.296 336.72 121.56 337.848 121.56 339.312 cv
121.56 340.788 121.296 341.916 120.78 342.684 cv
120.252 343.452 119.508 343.836 118.536 343.836 cv
117.552 343.836 116.796 343.452 116.28 342.684 cv
115.764 341.916 115.512 340.788 115.512 339.312 cv
115.512 337.848 115.764 336.72 116.28 335.94 cv
116.796 335.172 117.552 334.776 118.536 334.776 cv
118.536 334.776 li
cp
118.536 335.712 mo
117.924 335.712 117.468 336.012 117.156 336.612 cv
116.844 337.212 116.7 338.112 116.7 339.312 cv
116.7 340.512 116.844 341.412 117.156 342.012 cv
117.468 342.612 117.924 342.912 118.536 342.912 cv
119.148 342.912 119.604 342.612 119.916 342.012 cv
120.216 341.412 120.372 340.512 120.372 339.312 cv
120.372 338.112 120.216 337.212 119.916 336.612 cv
119.604 336.012 119.148 335.712 118.536 335.712 cv
ef
124.704 342.684 mo
128.832 342.684 li
128.832 343.68 li
123.276 343.68 li
123.276 342.684 li
123.72 342.228 124.332 341.604 125.112 340.812 cv
125.88 340.032 126.372 339.528 126.576 339.3 cv
126.96 338.88 127.224 338.52 127.368 338.22 cv
127.512 337.932 127.596 337.632 127.596 337.344 cv
127.596 336.888 127.428 336.504 127.104 336.216 cv
126.78 335.928 126.36 335.771 125.832 335.771 cv
125.46 335.771 125.064 335.844 124.656 335.964 cv
124.248 336.096 123.804 336.288 123.336 336.552 cv
123.336 335.352 li
123.816 335.16 124.26 335.016 124.668 334.92 cv
125.076 334.824 125.46 334.776 125.808 334.776 cv
126.708 334.776 127.428 335.004 127.968 335.46 cv
128.508 335.916 128.784 336.516 128.784 337.271 cv
128.784 337.632 128.712 337.98 128.58 338.292 cv
128.448 338.616 128.208 339 127.848 339.432 cv
127.752 339.552 127.44 339.876 126.912 340.416 cv
126.384 340.956 125.652 341.712 124.704 342.684 cv
124.704 342.684 li
cp
ef
gsave
132 388.8 mo
578.4 388.8 li
578.4 43.2002 li
132 43.2002 li
132 388.8 li
cp
clp
[1 3 ] 0 dsh
132 290.057 mo
578.4 290.057 li
@
grestore
132 290.057 mo
136 290.057 li
f
132 290.057 mo
136 290.057 li
@
578.4 290.057 mo
574.4 290.057 li
f
578.4 290.057 mo
574.4 290.057 li
@
106.536 285.576 mo
107.508 285.576 108.252 285.972 108.78 286.74 cv
109.296 287.52 109.56 288.648 109.56 290.112 cv
109.56 291.588 109.296 292.716 108.78 293.484 cv
108.252 294.252 107.508 294.636 106.536 294.636 cv
105.552 294.636 104.796 294.252 104.28 293.484 cv
103.764 292.716 103.512 291.588 103.512 290.112 cv
103.512 288.648 103.764 287.52 104.28 286.74 cv
104.796 285.972 105.552 285.576 106.536 285.576 cv
106.536 285.576 li
cp
106.536 286.512 mo
105.924 286.512 105.468 286.812 105.156 287.412 cv
104.844 288.012 104.7 288.912 104.7 290.112 cv
104.7 291.312 104.844 292.212 105.156 292.812 cv
105.468 293.412 105.924 293.712 106.536 293.712 cv
107.148 293.712 107.604 293.412 107.916 292.812 cv
108.216 292.212 108.372 291.312 108.372 290.112 cv
108.372 288.912 108.216 288.012 107.916 287.412 cv
107.604 286.812 107.148 286.512 106.536 286.512 cv
ef
111.684 292.992 mo
112.92 292.992 li
112.92 294.48 li
111.684 294.48 li
111.684 292.992 li
111.684 292.992 li
cp
ef
118.056 285.576 mo
119.028 285.576 119.772 285.972 120.3 286.74 cv
120.816 287.52 121.08 288.648 121.08 290.112 cv
121.08 291.588 120.816 292.716 120.3 293.484 cv
119.772 294.252 119.028 294.636 118.056 294.636 cv
117.072 294.636 116.316 294.252 115.8 293.484 cv
115.284 292.716 115.032 291.588 115.032 290.112 cv
115.032 288.648 115.284 287.52 115.8 286.74 cv
116.316 285.972 117.072 285.576 118.056 285.576 cv
118.056 285.576 li
cp
118.056 286.512 mo
117.444 286.512 116.988 286.812 116.676 287.412 cv
116.364 288.012 116.22 288.912 116.22 290.112 cv
116.22 291.312 116.364 292.212 116.676 292.812 cv
116.988 293.412 117.444 293.712 118.056 293.712 cv
118.668 293.712 119.124 293.412 119.436 292.812 cv
119.736 292.212 119.892 291.312 119.892 290.112 cv
119.892 288.912 119.736 288.012 119.436 287.412 cv
119.124 286.812 118.668 286.512 118.056 286.512 cv
ef
126.144 285.732 mo
127.632 285.732 li
127.632 291.432 li
128.88 291.432 li
128.88 292.416 li
127.632 292.416 li
127.632 294.48 li
126.456 294.48 li
126.456 292.416 li
122.508 292.416 li
122.508 291.276 li
126.144 285.732 li
126.144 285.732 li
cp
126.456 286.764 mo
123.468 291.432 li
126.456 291.432 li
126.456 286.764 li
ef
gsave
132 388.8 mo
578.4 388.8 li
578.4 43.2002 li
132 43.2002 li
132 388.8 li
cp
clp
[1 3 ] 0 dsh
132 240.686 mo
578.4 240.686 li
@
grestore
132 240.686 mo
136 240.686 li
f
132 240.686 mo
136 240.686 li
@
578.4 240.686 mo
574.4 240.686 li
f
578.4 240.686 mo
574.4 240.686 li
@
106.536 236.136 mo
107.508 236.136 108.252 236.532 108.78 237.3 cv
109.296 238.08 109.56 239.208 109.56 240.672 cv
109.56 242.148 109.296 243.276 108.78 244.044 cv
108.252 244.812 107.508 245.196 106.536 245.196 cv
105.552 245.196 104.796 244.812 104.28 244.044 cv
103.764 243.276 103.512 242.148 103.512 240.672 cv
103.512 239.208 103.764 238.08 104.28 237.3 cv
104.796 236.532 105.552 236.136 106.536 236.136 cv
106.536 236.136 li
cp
106.536 237.072 mo
105.924 237.072 105.468 237.372 105.156 237.972 cv
104.844 238.572 104.7 239.472 104.7 240.672 cv
104.7 241.872 104.844 242.771 105.156 243.372 cv
105.468 243.972 105.924 244.271 106.536 244.271 cv
107.148 244.271 107.604 243.972 107.916 243.372 cv
108.216 242.771 108.372 241.872 108.372 240.672 cv
108.372 239.472 108.216 238.572 107.916 237.972 cv
107.604 237.372 107.148 237.072 106.536 237.072 cv
ef
111.684 243.552 mo
112.92 243.552 li
112.92 245.04 li
111.684 245.04 li
111.684 243.552 li
111.684 243.552 li
cp
ef
118.056 236.136 mo
119.028 236.136 119.772 236.532 120.3 237.3 cv
120.816 238.08 121.08 239.208 121.08 240.672 cv
121.08 242.148 120.816 243.276 120.3 244.044 cv
119.772 244.812 119.028 245.196 118.056 245.196 cv
117.072 245.196 116.316 244.812 115.8 244.044 cv
115.284 243.276 115.032 242.148 115.032 240.672 cv
115.032 239.208 115.284 238.08 115.8 237.3 cv
116.316 236.532 117.072 236.136 118.056 236.136 cv
118.056 236.136 li
cp
118.056 237.072 mo
117.444 237.072 116.988 237.372 116.676 237.972 cv
116.364 238.572 116.22 239.472 116.22 240.672 cv
116.22 241.872 116.364 242.771 116.676 243.372 cv
116.988 243.972 117.444 244.271 118.056 244.271 cv
118.668 244.271 119.124 243.972 119.436 243.372 cv
119.736 242.771 119.892 241.872 119.892 240.672 cv
119.892 239.472 119.736 238.572 119.436 237.972 cv
119.124 237.372 118.668 237.072 118.056 237.072 cv
ef
128.232 236.484 mo
128.232 237.564 li
127.932 237.42 127.632 237.312 127.332 237.24 cv
127.02 237.168 126.72 237.132 126.432 237.132 cv
125.64 237.132 125.04 237.396 124.632 237.924 cv
124.224 238.452 123.984 239.256 123.936 240.312 cv
124.164 239.976 124.452 239.712 124.8 239.532 cv
125.148 239.352 125.532 239.256 125.952 239.256 cv
126.828 239.256 127.524 239.532 128.028 240.06 cv
128.532 240.588 128.796 241.32 128.796 242.232 cv
128.796 243.132 128.52 243.852 127.992 244.392 cv
127.464 244.932 126.756 245.196 125.88 245.196 cv
124.872 245.196 124.092 244.812 123.564 244.044 cv
123.024 243.276 122.76 242.148 122.76 240.672 cv
122.76 239.292 123.084 238.188 123.744 237.372 cv
124.392 236.556 125.28 236.136 126.384 236.136 cv
126.672 236.136 126.972 236.172 127.284 236.22 cv
127.584 236.28 127.896 236.364 128.232 236.484 cv
128.232 236.484 li
cp
125.88 240.192 mo
125.352 240.192 124.932 240.384 124.62 240.744 cv
124.308 241.104 124.152 241.608 124.152 242.232 cv
124.152 242.868 124.308 243.372 124.62 243.732 cv
124.932 244.092 125.352 244.271 125.88 244.271 cv
126.408 244.271 126.828 244.092 127.14 243.732 cv
127.452 243.372 127.608 242.868 127.608 242.232 cv
127.608 241.608 127.452 241.104 127.14 240.744 cv
126.828 240.384 126.408 240.192 125.88 240.192 cv
ef
gsave
132 388.8 mo
578.4 388.8 li
578.4 43.2002 li
132 43.2002 li
132 388.8 li
cp
clp
[1 3 ] 0 dsh
132 191.314 mo
578.4 191.314 li
@
grestore
132 191.314 mo
136 191.314 li
f
132 191.314 mo
136 191.314 li
@
578.4 191.314 mo
574.4 191.314 li
f
578.4 191.314 mo
574.4 191.314 li
@
106.776 186.696 mo
107.748 186.696 108.492 187.092 109.02 187.86 cv
109.536 188.64 109.8 189.768 109.8 191.232 cv
109.8 192.708 109.536 193.836 109.02 194.604 cv
108.492 195.372 107.748 195.756 106.776 195.756 cv
105.792 195.756 105.036 195.372 104.52 194.604 cv
104.004 193.836 103.752 192.708 103.752 191.232 cv
103.752 189.768 104.004 188.64 104.52 187.86 cv
105.036 187.092 105.792 186.696 106.776 186.696 cv
106.776 186.696 li
cp
106.776 187.632 mo
106.164 187.632 105.708 187.932 105.396 188.532 cv
105.084 189.132 104.94 190.032 104.94 191.232 cv
104.94 192.432 105.084 193.332 105.396 193.932 cv
105.708 194.532 106.164 194.832 106.776 194.832 cv
107.388 194.832 107.844 194.532 108.156 193.932 cv
108.456 193.332 108.612 192.432 108.612 191.232 cv
108.612 190.032 108.456 189.132 108.156 188.532 cv
107.844 187.932 107.388 187.632 106.776 187.632 cv
ef
111.924 194.112 mo
113.16 194.112 li
113.16 195.6 li
111.924 195.6 li
111.924 194.112 li
111.924 194.112 li
cp
ef
118.056 186.696 mo
119.028 186.696 119.772 187.092 120.3 187.86 cv
120.816 188.64 121.08 189.768 121.08 191.232 cv
121.08 192.708 120.816 193.836 120.3 194.604 cv
119.772 195.372 119.028 195.756 118.056 195.756 cv
117.072 195.756 116.316 195.372 115.8 194.604 cv
115.284 193.836 115.032 192.708 115.032 191.232 cv
115.032 189.768 115.284 188.64 115.8 187.86 cv
116.316 187.092 117.072 186.696 118.056 186.696 cv
118.056 186.696 li
cp
118.056 187.632 mo
117.444 187.632 116.988 187.932 116.676 188.532 cv
116.364 189.132 116.22 190.032 116.22 191.232 cv
116.22 192.432 116.364 193.332 116.676 193.932 cv
116.988 194.532 117.444 194.832 118.056 194.832 cv
118.668 194.832 119.124 194.532 119.436 193.932 cv
119.736 193.332 119.892 192.432 119.892 191.232 cv
119.892 190.032 119.736 189.132 119.436 188.532 cv
119.124 187.932 118.668 187.632 118.056 187.632 cv
ef
124.116 189.072 mo
124.116 189.528 124.248 189.888 124.536 190.14 cv
124.824 190.392 125.22 190.512 125.736 190.512 cv
126.24 190.512 126.636 190.392 126.924 190.14 cv
127.212 189.888 127.356 189.528 127.356 189.072 cv
127.356 188.616 127.212 188.268 126.924 188.016 cv
126.636 187.764 126.24 187.632 125.736 187.632 cv
125.22 187.632 124.824 187.764 124.536 188.016 cv
124.248 188.268 124.116 188.616 124.116 189.072 cv
124.116 189.072 li
cp
124.548 190.944 mo
124.044 190.824 123.648 190.584 123.36 190.236 cv
123.072 189.888 122.94 189.468 122.94 188.964 cv
122.94 188.268 123.18 187.716 123.684 187.308 cv
124.176 186.9 124.86 186.696 125.736 186.696 cv
126.6 186.696 127.284 186.9 127.788 187.308 cv
128.28 187.716 128.532 188.268 128.532 188.964 cv
128.532 189.468 128.388 189.888 128.1 190.236 cv
127.812 190.584 127.428 190.824 126.924 190.944 cv
127.488 191.076 127.932 191.34 128.256 191.724 cv
128.568 192.108 128.736 192.588 128.736 193.14 cv
128.736 193.992 128.472 194.64 127.956 195.084 cv
127.428 195.54 126.696 195.756 125.736 195.756 cv
124.764 195.756 124.02 195.54 123.504 195.084 cv
122.988 194.64 122.736 193.992 122.736 193.14 cv
122.736 192.588 122.892 192.108 123.216 191.724 cv
123.528 191.34 123.972 191.076 124.548 190.944 cv
125.736 191.448 mo
125.172 191.448 124.728 191.604 124.404 191.904 cv
124.08 192.204 123.924 192.612 123.924 193.14 cv
123.924 193.668 124.08 194.088 124.404 194.388 cv
124.728 194.688 125.172 194.832 125.736 194.832 cv
126.288 194.832 126.732 194.688 127.056 194.376 cv
127.38 194.076 127.548 193.668 127.548 193.14 cv
127.548 192.612 127.38 192.204 127.068 191.904 cv
126.744 191.604 126.3 191.448 125.736 191.448 cv
ef
gsave
132 388.8 mo
578.4 388.8 li
578.4 43.2002 li
132 43.2002 li
132 388.8 li
cp
clp
[1 3 ] 0 dsh
132 141.943 mo
578.4 141.943 li
@
grestore
132 141.943 mo
136 141.943 li
f
132 141.943 mo
136 141.943 li
@
578.4 141.943 mo
574.4 141.943 li
f
578.4 141.943 mo
574.4 141.943 li
@
106.776 137.496 mo
107.748 137.496 108.492 137.892 109.02 138.66 cv
109.536 139.44 109.8 140.568 109.8 142.032 cv
109.8 143.508 109.536 144.636 109.02 145.404 cv
108.492 146.172 107.748 146.556 106.776 146.556 cv
105.792 146.556 105.036 146.172 104.52 145.404 cv
104.004 144.636 103.752 143.508 103.752 142.032 cv
103.752 140.568 104.004 139.44 104.52 138.66 cv
105.036 137.892 105.792 137.496 106.776 137.496 cv
106.776 137.496 li
cp
106.776 138.432 mo
106.164 138.432 105.708 138.732 105.396 139.332 cv
105.084 139.932 104.94 140.832 104.94 142.032 cv
104.94 143.232 105.084 144.132 105.396 144.732 cv
105.708 145.332 106.164 145.632 106.776 145.632 cv
107.388 145.632 107.844 145.332 108.156 144.732 cv
108.456 144.132 108.612 143.232 108.612 142.032 cv
108.612 140.832 108.456 139.932 108.156 139.332 cv
107.844 138.732 107.388 138.432 106.776 138.432 cv
ef
111.684 144.912 mo
112.92 144.912 li
112.92 146.4 li
111.684 146.4 li
111.684 144.912 li
111.684 144.912 li
cp
ef
115.728 145.404 mo
117.66 145.404 li
117.66 138.732 li
115.56 139.152 li
115.56 138.072 li
117.648 137.652 li
118.836 137.652 li
118.836 145.404 li
120.768 145.404 li
120.768 146.4 li
115.728 146.4 li
115.728 145.404 li
115.728 145.404 li
cp
ef
125.736 137.496 mo
126.708 137.496 127.452 137.892 127.98 138.66 cv
128.496 139.44 128.76 140.568 128.76 142.032 cv
128.76 143.508 128.496 144.636 127.98 145.404 cv
127.452 146.172 126.708 146.556 125.736 146.556 cv
124.752 146.556 123.996 146.172 123.48 145.404 cv
122.964 144.636 122.712 143.508 122.712 142.032 cv
122.712 140.568 122.964 139.44 123.48 138.66 cv
123.996 137.892 124.752 137.496 125.736 137.496 cv
125.736 137.496 li
cp
125.736 138.432 mo
125.124 138.432 124.668 138.732 124.356 139.332 cv
124.044 139.932 123.9 140.832 123.9 142.032 cv
123.9 143.232 124.044 144.132 124.356 144.732 cv
124.668 145.332 125.124 145.632 125.736 145.632 cv
126.348 145.632 126.804 145.332 127.116 144.732 cv
127.416 144.132 127.572 143.232 127.572 142.032 cv
127.572 140.832 127.416 139.932 127.116 139.332 cv
126.804 138.732 126.348 138.432 125.736 138.432 cv
ef
gsave
132 388.8 mo
578.4 388.8 li
578.4 43.2002 li
132 43.2002 li
132 388.8 li
cp
clp
[1 3 ] 0 dsh
132 92.5708 mo
578.4 92.5708 li
@
grestore
132 92.5708 mo
136 92.5708 li
f
132 92.5708 mo
136 92.5708 li
@
578.4 92.5708 mo
574.4 92.5708 li
f
578.4 92.5708 mo
574.4 92.5708 li
@
107.016 88.0562 mo
107.988 88.0562 108.732 88.4521 109.26 89.2197 cv
109.776 90 110.04 91.1279 110.04 92.5918 cv
110.04 94.0679 109.776 95.1958 109.26 95.9639 cv
108.732 96.7319 107.988 97.1162 107.016 97.1162 cv
106.032 97.1162 105.276 96.7319 104.76 95.9639 cv
104.244 95.1958 103.992 94.0679 103.992 92.5918 cv
103.992 91.1279 104.244 90 104.76 89.2197 cv
105.276 88.4521 106.032 88.0562 107.016 88.0562 cv
107.016 88.0562 li
cp
107.016 88.9922 mo
106.404 88.9922 105.948 89.292 105.636 89.8921 cv
105.324 90.4922 105.18 91.3921 105.18 92.5918 cv
105.18 93.792 105.324 94.6919 105.636 95.292 cv
105.948 95.8921 106.404 96.1919 107.016 96.1919 cv
107.628 96.1919 108.084 95.8921 108.396 95.292 cv
108.696 94.6919 108.852 93.792 108.852 92.5918 cv
108.852 91.3921 108.696 90.4922 108.396 89.8921 cv
108.084 89.292 107.628 88.9922 107.016 88.9922 cv
ef
112.164 95.4722 mo
113.4 95.4722 li
113.4 96.96 li
112.164 96.96 li
112.164 95.4722 li
112.164 95.4722 li
cp
ef
116.208 95.9639 mo
118.14 95.9639 li
118.14 89.292 li
116.04 89.7119 li
116.04 88.6318 li
118.128 88.2119 li
119.316 88.2119 li
119.316 95.9639 li
121.248 95.9639 li
121.248 96.96 li
116.208 96.96 li
116.208 95.9639 li
116.208 95.9639 li
cp
ef
124.704 95.9639 mo
128.832 95.9639 li
128.832 96.96 li
123.276 96.96 li
123.276 95.9639 li
123.72 95.5078 124.332 94.8838 125.112 94.0918 cv
125.88 93.312 126.372 92.8081 126.576 92.5801 cv
126.96 92.1602 127.224 91.7998 127.368 91.5 cv
127.512 91.2119 127.596 90.9121 127.596 90.624 cv
127.596 90.168 127.428 89.7842 127.104 89.4961 cv
126.78 89.208 126.36 89.0518 125.832 89.0518 cv
125.46 89.0518 125.064 89.124 124.656 89.2441 cv
124.248 89.376 123.804 89.5679 123.336 89.832 cv
123.336 88.6318 li
123.816 88.4399 124.26 88.2959 124.668 88.2002 cv
125.076 88.104 125.46 88.0562 125.808 88.0562 cv
126.708 88.0562 127.428 88.2842 127.968 88.7402 cv
128.508 89.1958 128.784 89.7959 128.784 90.5518 cv
128.784 90.9121 128.712 91.2598 128.58 91.5718 cv
128.448 91.896 128.208 92.2798 127.848 92.7119 cv
127.752 92.832 127.44 93.1558 126.912 93.6958 cv
126.384 94.2358 125.652 94.9922 124.704 95.9639 cv
124.704 95.9639 li
cp
ef
gsave
132 388.8 mo
578.4 388.8 li
578.4 43.2002 li
132 43.2002 li
132 388.8 li
cp
clp
[1 3 ] 0 dsh
132 43.2002 mo
578.4 43.2002 li
@
grestore
132 43.2002 mo
136 43.2002 li
f
132 43.2002 mo
136 43.2002 li
@
578.4 43.2002 mo
574.4 43.2002 li
f
578.4 43.2002 mo
574.4 43.2002 li
@
106.536 38.6162 mo
107.508 38.6162 108.252 39.0117 108.78 39.7798 cv
109.296 40.5601 109.56 41.688 109.56 43.1519 cv
109.56 44.6279 109.296 45.7559 108.78 46.5239 cv
108.252 47.292 107.508 47.6758 106.536 47.6758 cv
105.552 47.6758 104.796 47.292 104.28 46.5239 cv
103.764 45.7559 103.512 44.6279 103.512 43.1519 cv
103.512 41.688 103.764 40.5601 104.28 39.7798 cv
104.796 39.0117 105.552 38.6162 106.536 38.6162 cv
106.536 38.6162 li
cp
106.536 39.5518 mo
105.924 39.5518 105.468 39.8521 105.156 40.4521 cv
104.844 41.0518 104.7 41.9521 104.7 43.1519 cv
104.7 44.3521 104.844 45.252 105.156 45.8521 cv
105.468 46.4521 105.924 46.752 106.536 46.752 cv
107.148 46.752 107.604 46.4521 107.916 45.8521 cv
108.216 45.252 108.372 44.3521 108.372 43.1519 cv
108.372 41.9521 108.216 41.0518 107.916 40.4521 cv
107.604 39.8521 107.148 39.5518 106.536 39.5518 cv
ef
111.684 46.0322 mo
112.92 46.0322 li
112.92 47.52 li
111.684 47.52 li
111.684 46.0322 li
111.684 46.0322 li
cp
ef
115.728 46.5239 mo
117.66 46.5239 li
117.66 39.8521 li
115.56 40.272 li
115.56 39.1919 li
117.648 38.772 li
118.836 38.772 li
118.836 46.5239 li
120.768 46.5239 li
120.768 47.52 li
115.728 47.52 li
115.728 46.5239 li
115.728 46.5239 li
cp
ef
126.144 38.772 mo
127.632 38.772 li
127.632 44.4717 li
128.88 44.4717 li
128.88 45.4561 li
127.632 45.4561 li
127.632 47.52 li
126.456 47.52 li
126.456 45.4561 li
122.508 45.4561 li
122.508 44.3159 li
126.144 38.772 li
126.144 38.772 li
cp
126.456 39.8037 mo
123.468 44.4717 li
126.456 44.4717 li
126.456 39.8037 li
ef
88.9321 278.184 mo
88.9321 275.508 li
88.9321 274.536 89.1602 273.792 89.604 273.288 cv
90.0479 272.784 90.6958 272.532 91.5479 272.532 cv
92.4121 272.532 93.0718 272.784 93.5039 273.288 cv
93.9478 273.792 94.1641 274.536 94.1641 275.508 cv
94.1641 276.996 li
97.6802 276.996 li
97.6802 278.184 li
88.9321 278.184 li
88.9321 278.184 li
cp
89.9038 276.996 mo
93.1919 276.996 li
93.1919 275.508 li
93.1919 274.956 93.0601 274.536 92.772 274.236 cv
92.4839 273.936 92.0762 273.78 91.5479 273.78 cv
91.02 273.78 90.624 273.936 90.3359 274.236 cv
90.0479 274.536 89.9038 274.956 89.9038 275.508 cv
89.9038 276.996 li
ef
93.8159 266.976 mo
93.228 266.988 92.7598 267.156 92.3999 267.468 cv
92.0518 267.792 91.8721 268.224 91.8721 268.752 cv
91.8721 269.352 92.0518 269.832 92.3882 270.192 cv
92.7241 270.552 93.2041 270.768 93.8159 270.816 cv
93.8159 266.976 li
93.8159 266.976 li
cp
94.1279 265.896 mo
94.6558 265.896 li
94.6558 270.852 li
95.3999 270.804 95.9761 270.588 96.3599 270.18 cv
96.7441 269.784 96.936 269.232 96.936 268.512 cv
96.936 268.104 96.8882 267.696 96.792 267.312 cv
96.6958 266.928 96.54 266.532 96.3242 266.148 cv
97.3438 266.148 li
97.5122 266.532 97.644 266.928 97.7158 267.336 cv
97.7881 267.744 97.8359 268.164 97.8359 268.572 cv
97.8359 269.628 97.5361 270.456 96.936 271.068 cv
96.3359 271.68 95.5078 271.98 94.4639 271.98 cv
93.396 271.98 92.5439 271.692 91.9082 271.116 cv
91.2842 270.54 90.96 269.748 90.96 268.764 cv
90.96 267.876 91.248 267.18 91.812 266.664 cv
92.3882 266.16 93.1558 265.896 94.1279 265.896 cv
ef
92.124 260.268 mo
92.0518 260.388 92.0039 260.52 91.9678 260.664 cv
91.9438 260.808 91.9199 260.964 91.9199 261.132 cv
91.9199 261.744 92.124 262.212 92.52 262.536 cv
92.916 262.872 93.48 263.028 94.2241 263.028 cv
97.6802 263.028 li
97.6802 264.108 li
91.1162 264.108 li
91.1162 263.028 li
92.1362 263.028 li
91.7402 262.812 91.4399 262.512 91.248 262.152 cv
91.0562 261.792 90.96 261.348 90.96 260.82 cv
90.96 260.748 90.9722 260.664 90.9722 260.568 cv
90.9839 260.484 90.9961 260.388 91.02 260.268 cv
92.124 260.268 li
92.124 260.268 li
cp
ef
91.3682 254.544 mo
92.376 254.544 li
92.208 254.855 92.0879 255.156 92.0039 255.468 cv
91.9199 255.78 91.8721 256.08 91.8721 256.392 cv
91.8721 257.088 92.1001 257.64 92.5439 258.024 cv
92.9878 258.408 93.6118 258.6 94.4038 258.6 cv
95.208 258.6 95.832 258.408 96.2759 258.024 cv
96.7202 257.64 96.936 257.088 96.936 256.392 cv
96.936 256.08 96.8999 255.78 96.8159 255.468 cv
96.7319 255.156 96.6001 254.855 96.4321 254.544 cv
97.4277 254.544 li
97.5718 254.855 97.6802 255.168 97.7402 255.48 cv
97.7998 255.804 97.8359 256.152 97.8359 256.512 cv
97.8359 257.496 97.5361 258.288 96.9121 258.864 cv
96.2998 259.452 95.46 259.74 94.4038 259.74 cv
93.3359 259.74 92.4961 259.452 91.8838 258.864 cv
91.272 258.276 90.96 257.472 90.96 256.44 cv
90.96 256.104 90.9961 255.78 91.0679 255.468 cv
91.1401 255.156 91.2358 254.844 91.3682 254.544 cv
91.3682 254.544 li
cp
ef
93.8159 248.256 mo
93.228 248.268 92.7598 248.436 92.3999 248.748 cv
92.0518 249.072 91.8721 249.504 91.8721 250.032 cv
91.8721 250.632 92.0518 251.112 92.3882 251.472 cv
92.7241 251.832 93.2041 252.048 93.8159 252.096 cv
93.8159 248.256 li
93.8159 248.256 li
cp
94.1279 247.176 mo
94.6558 247.176 li
94.6558 252.132 li
95.3999 252.084 95.9761 251.868 96.3599 251.46 cv
96.7441 251.064 96.936 250.512 96.936 249.792 cv
96.936 249.384 96.8882 248.976 96.792 248.592 cv
96.6958 248.208 96.54 247.812 96.3242 247.428 cv
97.3438 247.428 li
97.5122 247.812 97.644 248.208 97.7158 248.616 cv
97.7881 249.024 97.8359 249.444 97.8359 249.852 cv
97.8359 250.908 97.5361 251.736 96.936 252.348 cv
96.3359 252.96 95.5078 253.26 94.4639 253.26 cv
93.396 253.26 92.5439 252.972 91.9082 252.396 cv
91.2842 251.82 90.96 251.028 90.96 250.044 cv
90.96 249.156 91.248 248.46 91.812 247.944 cv
92.3882 247.44 93.1558 247.176 94.1279 247.176 cv
ef
93.7202 239.892 mo
97.6802 239.892 li
97.6802 240.972 li
93.7559 240.972 li
93.1318 240.972 92.6758 241.104 92.3638 241.344 cv
92.0518 241.584 91.896 241.944 91.896 242.424 cv
91.896 243.012 92.0879 243.468 92.46 243.804 cv
92.832 244.14 93.3359 244.308 93.9722 244.308 cv
97.6802 244.308 li
97.6802 245.388 li
91.1162 245.388 li
91.1162 244.308 li
92.1362 244.308 li
91.752 244.056 91.4521 243.756 91.2598 243.396 cv
91.0679 243.048 90.96 242.64 90.96 242.184 cv
90.96 241.44 91.2002 240.864 91.668 240.48 cv
92.1362 240.096 92.8198 239.892 93.7202 239.892 cv
93.7202 239.892 li
cp
ef
89.2559 236.604 mo
91.1162 236.604 li
91.1162 234.384 li
91.9561 234.384 li
91.9561 236.604 li
95.52 236.604 li
96.0601 236.604 96.4082 236.532 96.5518 236.388 cv
96.708 236.244 96.7798 235.944 96.7798 235.488 cv
96.7798 234.384 li
97.6802 234.384 li
97.6802 235.488 li
97.6802 236.328 97.5239 236.904 97.2119 237.216 cv
96.8999 237.528 96.3359 237.684 95.52 237.684 cv
91.9561 237.684 li
91.9561 238.476 li
91.1162 238.476 li
91.1162 237.684 li
89.2559 237.684 li
89.2559 236.604 li
89.2559 236.604 li
cp
ef
90.96 226.728 mo
90.96 225.792 91.272 225.06 91.8721 224.52 cv
92.4839 223.992 93.3242 223.716 94.4038 223.716 cv
95.4839 223.716 96.3242 223.992 96.9238 224.52 cv
97.5361 225.06 97.8359 225.792 97.8359 226.728 cv
97.8359 227.676 97.5361 228.42 96.9238 228.948 cv
96.3242 229.476 95.4839 229.74 94.4038 229.74 cv
93.3242 229.74 92.4839 229.476 91.8721 228.948 cv
91.272 228.42 90.96 227.676 90.96 226.728 cv
90.96 226.728 li
cp
91.8721 226.728 mo
91.8721 227.304 92.1001 227.76 92.5562 228.096 cv
93.0122 228.432 93.624 228.6 94.4038 228.6 cv
95.1958 228.6 95.8081 228.444 96.2642 228.108 cv
96.7202 227.771 96.936 227.316 96.936 226.728 cv
96.936 226.152 96.7202 225.696 96.2642 225.36 cv
95.8081 225.024 95.1958 224.855 94.4038 224.855 cv
93.6362 224.855 93.0122 225.024 92.5562 225.36 cv
92.1001 225.696 91.8721 226.152 91.8721 226.728 cv
ef
88.5601 218.508 mo
89.46 218.508 li
89.46 219.54 li
89.46 219.924 89.5439 220.2 89.7002 220.344 cv
89.856 220.5 90.1318 220.572 90.54 220.572 cv
91.1162 220.572 li
91.1162 218.796 li
91.9561 218.796 li
91.9561 220.572 li
97.6802 220.572 li
97.6802 221.652 li
91.9561 221.652 li
91.9561 222.684 li
91.1162 222.684 li
91.1162 221.652 li
90.6602 221.652 li
89.9399 221.652 89.3999 221.484 89.064 221.148 cv
88.728 220.812 88.5601 220.271 88.5601 219.528 cv
88.5601 218.508 li
88.5601 218.508 li
cp
ef
89.2559 212.844 mo
91.1162 212.844 li
91.1162 210.624 li
91.9561 210.624 li
91.9561 212.844 li
95.52 212.844 li
96.0601 212.844 96.4082 212.772 96.5518 212.628 cv
96.708 212.484 96.7798 212.184 96.7798 211.728 cv
96.7798 210.624 li
97.6802 210.624 li
97.6802 211.728 li
97.6802 212.568 97.5239 213.144 97.2119 213.456 cv
96.8999 213.768 96.3359 213.924 95.52 213.924 cv
91.9561 213.924 li
91.9561 214.716 li
91.1162 214.716 li
91.1162 213.924 li
89.2559 213.924 li
89.2559 212.844 li
89.2559 212.844 li
cp
ef
88.5601 209.112 mo
88.5601 208.032 li
89.9277 208.032 li
89.9277 209.112 li
88.5601 209.112 li
88.5601 209.112 li
cp
91.1162 209.112 mo
91.1162 208.032 li
97.6802 208.032 li
97.6802 209.112 li
91.1162 209.112 li
ef
89.2559 204.684 mo
91.1162 204.684 li
91.1162 202.464 li
91.9561 202.464 li
91.9561 204.684 li
95.52 204.684 li
96.0601 204.684 96.4082 204.612 96.5518 204.468 cv
96.708 204.324 96.7798 204.024 96.7798 203.568 cv
96.7798 202.464 li
97.6802 202.464 li
97.6802 203.568 li
97.6802 204.408 97.5239 204.984 97.2119 205.296 cv
96.8999 205.608 96.3359 205.764 95.52 205.764 cv
91.9561 205.764 li
91.9561 206.556 li
91.1162 206.556 li
91.1162 205.764 li
89.2559 205.764 li
89.2559 204.684 li
89.2559 204.684 li
cp
ef
88.5601 201.192 mo
88.5601 200.112 li
97.6802 200.112 li
97.6802 201.192 li
88.5601 201.192 li
88.5601 201.192 li
cp
ef
93.8159 193.296 mo
93.228 193.308 92.7598 193.476 92.3999 193.788 cv
92.0518 194.112 91.8721 194.544 91.8721 195.072 cv
91.8721 195.672 92.0518 196.152 92.3882 196.512 cv
92.7241 196.872 93.2041 197.088 93.8159 197.136 cv
93.8159 193.296 li
93.8159 193.296 li
cp
94.1279 192.216 mo
94.6558 192.216 li
94.6558 197.172 li
95.3999 197.124 95.9761 196.908 96.3599 196.5 cv
96.7441 196.104 96.936 195.552 96.936 194.832 cv
96.936 194.424 96.8882 194.016 96.792 193.632 cv
96.6958 193.248 96.54 192.852 96.3242 192.468 cv
97.3438 192.468 li
97.5122 192.852 97.644 193.248 97.7158 193.656 cv
97.7881 194.064 97.8359 194.484 97.8359 194.892 cv
97.8359 195.948 97.5361 196.776 96.936 197.388 cv
96.3359 198 95.5078 198.3 94.4639 198.3 cv
93.396 198.3 92.5439 198.012 91.9082 197.436 cv
91.2842 196.86 90.96 196.068 90.96 195.084 cv
90.96 194.196 91.248 193.5 91.812 192.984 cv
92.3882 192.48 93.1558 192.216 94.1279 192.216 cv
ef
91.1162 187.176 mo
91.1162 186.096 li
96.2402 184.752 li
91.1162 183.408 li
91.1162 182.136 li
96.2402 180.792 li
91.1162 179.448 li
91.1162 178.368 li
97.6802 180.084 li
97.6802 181.356 li
92.3042 182.772 li
97.6802 184.188 li
97.6802 185.46 li
91.1162 187.176 li
91.1162 187.176 li
cp
ef
90.96 174.168 mo
90.96 173.232 91.272 172.5 91.8721 171.96 cv
92.4839 171.432 93.3242 171.156 94.4038 171.156 cv
95.4839 171.156 96.3242 171.432 96.9238 171.96 cv
97.5361 172.5 97.8359 173.232 97.8359 174.168 cv
97.8359 175.116 97.5361 175.86 96.9238 176.388 cv
96.3242 176.916 95.4839 177.18 94.4038 177.18 cv
93.3242 177.18 92.4839 176.916 91.8721 176.388 cv
91.272 175.86 90.96 175.116 90.96 174.168 cv
90.96 174.168 li
cp
91.8721 174.168 mo
91.8721 174.744 92.1001 175.2 92.5562 175.536 cv
93.0122 175.872 93.624 176.04 94.4038 176.04 cv
95.1958 176.04 95.8081 175.884 96.2642 175.548 cv
96.7202 175.212 96.936 174.756 96.936 174.168 cv
96.936 173.592 96.7202 173.136 96.2642 172.8 cv
95.8081 172.464 95.1958 172.296 94.4038 172.296 cv
93.6362 172.296 93.0122 172.464 92.5562 172.8 cv
92.1001 173.136 91.8721 173.592 91.8721 174.168 cv
ef
92.124 165.708 mo
92.0518 165.828 92.0039 165.96 91.9678 166.104 cv
91.9438 166.248 91.9199 166.404 91.9199 166.572 cv
91.9199 167.184 92.124 167.652 92.52 167.976 cv
92.916 168.312 93.48 168.468 94.2241 168.468 cv
97.6802 168.468 li
97.6802 169.548 li
91.1162 169.548 li
91.1162 168.468 li
92.1362 168.468 li
91.7402 168.252 91.4399 167.952 91.248 167.592 cv
91.0562 167.232 90.96 166.788 90.96 166.26 cv
90.96 166.188 90.9722 166.104 90.9722 166.008 cv
90.9839 165.924 90.9961 165.828 91.02 165.708 cv
92.124 165.708 li
92.124 165.708 li
cp
ef
94.4038 164.064 mo
95.1958 164.064 95.8198 163.908 96.2759 163.584 cv
96.7319 163.26 96.9478 162.804 96.9478 162.228 cv
96.9478 161.664 96.7319 161.22 96.2759 160.884 cv
95.8198 160.56 95.1958 160.392 94.4038 160.392 cv
93.6118 160.392 93 160.56 92.5439 160.884 cv
92.0879 161.22 91.8599 161.664 91.8599 162.228 cv
91.8599 162.804 92.0879 163.26 92.5439 163.584 cv
93 163.908 93.6118 164.064 94.4038 164.064 cv
94.4038 164.064 li
cp
92.1118 160.392 mo
88.5601 160.392 li
88.5601 159.312 li
97.6802 159.312 li
97.6802 160.392 li
96.6958 160.392 li
97.0918 160.62 97.3799 160.908 97.5601 161.256 cv
97.7402 161.604 97.8359 162.012 97.8359 162.492 cv
97.8359 163.284 97.5239 163.932 96.8999 164.436 cv
96.2759 164.94 95.436 165.18 94.4038 165.18 cv
93.3721 165.18 92.5439 164.94 91.9082 164.436 cv
91.2842 163.932 90.96 163.284 90.96 162.492 cv
90.96 162.012 91.0562 161.604 91.248 161.256 cv
91.4399 160.908 91.728 160.62 92.1118 160.392 cv
ef
91.3081 152.844 mo
92.3281 152.844 li
92.1841 153.156 92.064 153.468 91.98 153.792 cv
91.9082 154.128 91.8599 154.464 91.8599 154.812 cv
91.8599 155.352 91.9438 155.76 92.1118 156.024 cv
92.2798 156.288 92.52 156.42 92.8438 156.42 cv
93.0962 156.42 93.2881 156.324 93.4321 156.132 cv
93.5762 155.94 93.7202 155.556 93.8398 154.98 cv
93.9238 154.608 li
94.0918 153.84 94.332 153.3 94.6201 152.976 cv
94.9199 152.664 95.3398 152.496 95.8682 152.496 cv
96.48 152.496 96.96 152.736 97.3081 153.216 cv
97.668 153.696 97.8359 154.368 97.8359 155.208 cv
97.8359 155.568 97.7998 155.928 97.7402 156.312 cv
97.6802 156.696 97.584 157.092 97.4399 157.512 cv
96.3242 157.512 li
96.54 157.116 96.6958 156.72 96.792 156.336 cv
96.8999 155.952 96.9478 155.568 96.9478 155.184 cv
96.9478 154.68 96.8638 154.284 96.6958 154.008 cv
96.5278 153.744 96.2759 153.6 95.9521 153.6 cv
95.6641 153.6 95.436 153.708 95.2798 153.9 cv
95.124 154.092 94.9678 154.524 94.8242 155.196 cv
94.7402 155.568 li
94.5962 156.24 94.3799 156.732 94.0918 157.02 cv
93.8042 157.32 93.4082 157.464 92.8921 157.464 cv
92.2798 157.464 91.7998 157.248 91.4639 156.816 cv
91.1279 156.384 90.96 155.76 90.96 154.944 cv
90.96 154.548 90.9961 154.176 91.0562 153.816 cv
91.1162 153.468 91.2002 153.144 91.3081 152.844 cv
91.3081 152.844 li
cp
ef
1 lw
2 lc
132 388.8 mo
132 43.2002 li
132 388.8 mo
578.4 388.8 li
578.4 388.8 mo
578.4 43.2002 li
132 43.2002 mo
578.4 43.2002 li
@
139.2 155.751 mo
311.353 155.751 li
311.353 50.3999 li
139.2 50.3999 li
139.2 155.751 li
139.2 155.751 li
cp
1 1 1 rgb
f
139.2 155.751 mo
311.353 155.751 li
311.353 50.3999 li
139.2 50.3999 li
139.2 155.751 li
139.2 155.751 li
cp
0 0 0 rgb
@
149.28 61.7607 mo
169.44 61.7607 li
0 0 1 rgb
@
187.411 62.7886 mo
187.411 63.7393 187.599 64.4878 187.987 65.0352 cv
188.376 65.5825 188.923 65.8418 189.614 65.8418 cv
190.291 65.8418 190.824 65.5825 191.227 65.0352 cv
191.616 64.4878 191.817 63.7393 191.817 62.7886 cv
191.817 61.8384 191.616 61.104 191.227 60.5566 cv
190.824 60.0098 190.291 59.7358 189.614 59.7358 cv
188.923 59.7358 188.376 60.0098 187.987 60.5566 cv
187.599 61.104 187.411 61.8384 187.411 62.7886 cv
187.411 62.7886 li
cp
191.817 60.0381 mo
191.817 55.7759 li
193.114 55.7759 li
193.114 66.7197 li
191.817 66.7197 li
191.817 65.5391 li
191.544 66.0142 191.198 66.3599 190.781 66.5762 cv
190.363 66.792 189.874 66.9072 189.297 66.9072 cv
188.347 66.9072 187.57 66.5327 186.965 65.7842 cv
186.36 65.0352 186.072 64.0273 186.072 62.7886 cv
186.072 61.5503 186.36 60.5566 186.965 59.7935 cv
187.57 59.0449 188.347 58.6563 189.297 58.6563 cv
189.874 58.6563 190.363 58.771 190.781 59.0015 cv
191.198 59.2319 191.544 59.5776 191.817 60.0381 cv
0 0 0 rgb
ef
202.306 61.9678 mo
202.306 66.7197 li
201.01 66.7197 li
201.01 62.0112 li
201.01 61.2622 200.851 60.7153 200.563 60.3408 cv
200.275 59.9663 199.843 59.7793 199.267 59.7793 cv
198.562 59.7793 198.014 60.0098 197.611 60.4561 cv
197.208 60.9023 197.006 61.5073 197.006 62.2705 cv
197.006 66.7197 li
195.71 66.7197 li
195.71 58.8433 li
197.006 58.8433 li
197.006 60.0674 li
197.309 59.6064 197.669 59.2461 198.101 59.0161 cv
198.519 58.7856 199.008 58.6563 199.555 58.6563 cv
200.448 58.6563 201.139 58.9438 201.6 59.5054 cv
202.061 60.0674 202.306 60.8877 202.306 61.9678 cv
202.306 61.9678 li
cp
ef
211.037 62.2271 mo
211.037 66.7197 li
209.741 66.7197 li
209.741 65.5249 li
209.438 66.0142 209.064 66.3599 208.632 66.5762 cv
208.2 66.792 207.653 66.9072 207.019 66.9072 cv
206.213 66.9072 205.565 66.6914 205.09 66.2446 cv
204.614 65.7983 204.384 65.1934 204.384 64.4302 cv
204.384 63.5518 204.672 62.8896 205.277 62.4287 cv
205.867 61.9824 206.746 61.752 207.926 61.752 cv
209.741 61.752 li
209.741 61.6226 li
209.741 61.0322 209.539 60.5713 209.15 60.2402 cv
208.762 59.9233 208.214 59.7505 207.509 59.7505 cv
207.048 59.7505 206.616 59.8081 206.184 59.9233 cv
205.752 60.0381 205.349 60.1968 204.96 60.3984 cv
204.96 59.2031 li
205.421 59.0303 205.882 58.8862 206.328 58.7998 cv
206.774 58.7134 207.207 58.6563 207.638 58.6563 cv
208.776 58.6563 209.625 58.9585 210.187 59.5488 cv
210.749 60.1392 211.037 61.0322 211.037 62.2271 cv
211.037 62.2271 li
cp
208.459 62.7598 mo
207.408 62.7598 206.688 62.8896 206.285 63.1201 cv
205.882 63.3647 205.68 63.7681 205.68 64.3438 cv
205.68 64.8047 205.824 65.1792 206.126 65.4385 cv
206.429 65.7119 206.846 65.8418 207.365 65.8418 cv
208.085 65.8418 208.661 65.5967 209.093 65.0781 cv
209.525 64.5742 209.741 63.8975 209.741 63.0479 cv
209.741 62.7598 li
208.459 62.7598 li
ef
149.28 82.5068 mo
169.44 82.5068 li
0 0.501961 0 rgb
@
191.198 80.9326 mo
191.054 80.8462 190.896 80.7886 190.723 80.7456 cv
190.55 80.7168 190.363 80.688 190.162 80.688 cv
189.427 80.688 188.866 80.9326 188.477 81.4082 cv
188.074 81.8833 187.886 82.5601 187.886 83.4526 cv
187.886 87.6001 li
186.59 87.6001 li
186.59 79.7231 li
187.886 79.7231 li
187.886 80.9473 li
188.146 80.4717 188.505 80.1118 188.938 79.8818 cv
189.37 79.6514 189.902 79.5361 190.536 79.5361 cv
190.623 79.5361 190.723 79.5503 190.838 79.5503 cv
190.939 79.5649 191.054 79.5791 191.198 79.6079 cv
191.198 80.9326 li
191.198 80.9326 li
cp
0 0 0 rgb
ef
198.946 82.8481 mo
198.946 87.6001 li
197.649 87.6001 li
197.649 82.8911 li
197.649 82.1426 197.491 81.5952 197.203 81.2207 cv
196.915 80.8462 196.483 80.6592 195.907 80.6592 cv
195.202 80.6592 194.654 80.8896 194.251 81.3359 cv
193.848 81.7822 193.646 82.3872 193.646 83.1504 cv
193.646 87.6001 li
192.351 87.6001 li
192.351 79.7231 li
193.646 79.7231 li
193.646 80.9473 li
193.949 80.4863 194.309 80.1265 194.741 79.896 cv
195.158 79.6655 195.648 79.5361 196.195 79.5361 cv
197.088 79.5361 197.779 79.8242 198.24 80.3857 cv
198.701 80.9473 198.946 81.7681 198.946 82.8481 cv
198.946 82.8481 li
cp
ef
207.677 83.1074 mo
207.677 87.6001 li
206.381 87.6001 li
206.381 86.4048 li
206.078 86.8945 205.704 87.2402 205.272 87.4561 cv
204.84 87.6719 204.293 87.7871 203.659 87.7871 cv
202.853 87.7871 202.205 87.5713 201.729 87.125 cv
201.254 86.6782 201.024 86.0737 201.024 85.3105 cv
201.024 84.4321 201.312 83.7695 201.917 83.3086 cv
202.507 82.8623 203.386 82.6318 204.566 82.6318 cv
206.381 82.6318 li
206.381 82.5024 li
206.381 81.9121 206.179 81.4512 205.791 81.1201 cv
205.401 80.8032 204.854 80.6304 204.149 80.6304 cv
203.688 80.6304 203.256 80.688 202.824 80.8032 cv
202.392 80.9185 201.989 81.0767 201.6 81.2783 cv
201.6 80.083 li
202.061 79.9102 202.521 79.7666 202.968 79.6797 cv
203.415 79.5938 203.846 79.5361 204.278 79.5361 cv
205.416 79.5361 206.266 79.8384 206.827 80.4287 cv
207.389 81.019 207.677 81.9121 207.677 83.1074 cv
207.677 83.1074 li
cp
205.099 83.6401 mo
204.048 83.6401 203.328 83.7695 202.925 84 cv
202.521 84.2446 202.32 84.6479 202.32 85.2241 cv
202.32 85.6846 202.464 86.0591 202.767 86.3184 cv
203.069 86.5918 203.486 86.7217 204.005 86.7217 cv
204.725 86.7217 205.301 86.4766 205.733 85.9585 cv
206.165 85.4541 206.381 84.7773 206.381 83.9277 cv
206.381 83.6401 li
205.099 83.6401 li
ef
149.28 103.254 mo
169.44 103.254 li
1 0 0 rgb
@
192.797 103.747 mo
192.797 108.24 li
191.501 108.24 li
191.501 107.045 li
191.198 107.534 190.824 107.88 190.392 108.096 cv
189.96 108.312 189.413 108.427 188.779 108.427 cv
187.973 108.427 187.325 108.211 186.85 107.765 cv
186.375 107.318 186.144 106.713 186.144 105.95 cv
186.144 105.072 186.432 104.41 187.037 103.949 cv
187.627 103.502 188.505 103.272 189.687 103.272 cv
191.501 103.272 li
191.501 103.143 li
191.501 102.552 191.299 102.091 190.91 101.76 cv
190.521 101.443 189.975 101.271 189.269 101.271 cv
188.808 101.271 188.376 101.328 187.944 101.443 cv
187.512 101.559 187.109 101.717 186.72 101.918 cv
186.72 100.723 li
187.181 100.55 187.642 100.406 188.088 100.32 cv
188.534 100.233 188.966 100.176 189.398 100.176 cv
190.536 100.176 191.386 100.479 191.947 101.069 cv
192.509 101.659 192.797 102.552 192.797 103.747 cv
192.797 103.747 li
cp
190.219 104.28 mo
189.168 104.28 188.448 104.41 188.045 104.64 cv
187.642 104.885 187.44 105.288 187.44 105.864 cv
187.44 106.325 187.584 106.699 187.886 106.958 cv
188.189 107.232 188.606 107.361 189.125 107.361 cv
189.845 107.361 190.421 107.117 190.853 106.598 cv
191.285 106.094 191.501 105.417 191.501 104.568 cv
191.501 104.28 li
190.219 104.28 li
0 0 0 rgb
ef
201.648 101.875 mo
201.965 101.299 202.354 100.881 202.8 100.594 cv
203.247 100.32 203.779 100.176 204.398 100.176 cv
205.205 100.176 205.838 100.464 206.285 101.04 cv
206.731 101.616 206.961 102.437 206.961 103.488 cv
206.961 108.24 li
205.666 108.24 li
205.666 103.531 li
205.666 102.782 205.521 102.221 205.262 101.846 cv
204.989 101.486 204.585 101.299 204.039 101.299 cv
203.362 101.299 202.829 101.53 202.44 101.976 cv
202.051 102.422 201.864 103.027 201.864 103.791 cv
201.864 108.24 li
200.568 108.24 li
200.568 103.531 li
200.568 102.782 200.424 102.221 200.165 101.846 cv
199.891 101.486 199.474 101.299 198.926 101.299 cv
198.264 101.299 197.731 101.53 197.342 101.976 cv
196.954 102.422 196.767 103.027 196.767 103.791 cv
196.767 108.24 li
195.47 108.24 li
195.47 100.363 li
196.767 100.363 li
196.767 101.587 li
197.054 101.112 197.415 100.752 197.832 100.521 cv
198.235 100.291 198.725 100.176 199.301 100.176 cv
199.877 100.176 200.352 100.32 200.755 100.608 cv
201.158 100.896 201.446 101.328 201.648 101.875 cv
201.648 101.875 li
cp
ef
209.434 97.2959 mo
210.729 97.2959 li
210.729 98.9375 li
209.434 98.9375 li
209.434 97.2959 li
209.434 97.2959 li
cp
209.434 100.363 mo
210.729 100.363 li
210.729 108.24 li
209.434 108.24 li
209.434 100.363 li
ef
220.065 103.488 mo
220.065 108.24 li
218.77 108.24 li
218.77 103.531 li
218.77 102.782 218.611 102.235 218.323 101.861 cv
218.035 101.486 217.603 101.299 217.027 101.299 cv
216.322 101.299 215.774 101.53 215.371 101.976 cv
214.968 102.422 214.767 103.027 214.767 103.791 cv
214.767 108.24 li
213.47 108.24 li
213.47 100.363 li
214.767 100.363 li
214.767 101.587 li
215.069 101.126 215.429 100.767 215.861 100.536 cv
216.278 100.306 216.768 100.176 217.315 100.176 cv
218.208 100.176 218.899 100.464 219.36 101.025 cv
219.821 101.587 220.065 102.408 220.065 103.488 cv
220.065 103.488 li
cp
ef
225.687 100.176 mo
226.81 100.176 227.688 100.55 228.336 101.271 cv
228.97 102.005 229.301 103.013 229.301 104.309 cv
229.301 105.605 228.97 106.613 228.336 107.333 cv
227.688 108.067 226.81 108.427 225.687 108.427 cv
224.549 108.427 223.656 108.067 223.022 107.333 cv
222.389 106.613 222.072 105.605 222.072 104.309 cv
222.072 103.013 222.389 102.005 223.022 101.271 cv
223.656 100.55 224.549 100.176 225.687 100.176 cv
225.687 100.176 li
cp
225.687 101.271 mo
224.995 101.271 224.448 101.544 224.045 102.091 cv
223.642 102.638 223.44 103.373 223.44 104.309 cv
223.44 105.259 223.627 105.994 224.03 106.541 cv
224.434 107.088 224.981 107.347 225.687 107.347 cv
226.377 107.347 226.925 107.088 227.328 106.541 cv
227.731 105.994 227.933 105.259 227.933 104.309 cv
227.933 103.387 227.731 102.638 227.328 102.091 cv
226.925 101.544 226.377 101.271 225.687 101.271 cv
ef
149.28 124.001 mo
169.44 124.001 li
0 0.74902 0.74902 rgb
@
187.411 125.189 mo
187.411 126.139 187.599 126.888 187.987 127.435 cv
188.376 127.982 188.923 128.242 189.614 128.242 cv
190.291 128.242 190.824 127.982 191.227 127.435 cv
191.616 126.888 191.817 126.139 191.817 125.189 cv
191.817 124.238 191.616 123.504 191.227 122.957 cv
190.824 122.41 190.291 122.136 189.614 122.136 cv
188.923 122.136 188.376 122.41 187.987 122.957 cv
187.599 123.504 187.411 124.238 187.411 125.189 cv
187.411 125.189 li
cp
191.817 122.438 mo
191.817 118.176 li
193.114 118.176 li
193.114 129.12 li
191.817 129.12 li
191.817 127.939 li
191.544 128.415 191.198 128.76 190.781 128.976 cv
190.363 129.192 189.874 129.307 189.297 129.307 cv
188.347 129.307 187.57 128.933 186.965 128.184 cv
186.36 127.435 186.072 126.427 186.072 125.189 cv
186.072 123.95 186.36 122.957 186.965 122.193 cv
187.57 121.445 188.347 121.056 189.297 121.056 cv
189.874 121.056 190.363 121.171 190.781 121.401 cv
191.198 121.632 191.544 121.978 191.817 122.438 cv
0 0 0 rgb
ef
201.197 124.483 mo
201.183 123.777 200.981 123.216 200.606 122.784 cv
200.218 122.366 199.699 122.15 199.065 122.15 cv
198.346 122.15 197.77 122.366 197.337 122.77 cv
196.906 123.173 196.646 123.749 196.589 124.483 cv
201.197 124.483 li
201.197 124.483 li
cp
202.493 124.857 mo
202.493 125.491 li
196.545 125.491 li
196.603 126.384 196.862 127.075 197.352 127.536 cv
197.827 127.997 198.49 128.227 199.354 128.227 cv
199.843 128.227 200.333 128.169 200.793 128.054 cv
201.254 127.939 201.729 127.752 202.19 127.493 cv
202.19 128.717 li
201.729 128.918 201.254 129.077 200.765 129.163 cv
200.275 129.25 199.771 129.307 199.282 129.307 cv
198.014 129.307 197.021 128.947 196.287 128.227 cv
195.552 127.507 195.192 126.514 195.192 125.261 cv
195.192 123.979 195.538 122.957 196.229 122.193 cv
196.92 121.445 197.871 121.056 199.051 121.056 cv
200.117 121.056 200.952 121.401 201.571 122.078 cv
202.176 122.77 202.493 123.691 202.493 124.857 cv
ef
207.687 121.056 mo
208.81 121.056 209.688 121.43 210.336 122.15 cv
210.97 122.885 211.301 123.893 211.301 125.189 cv
211.301 126.485 210.97 127.493 210.336 128.213 cv
209.688 128.947 208.81 129.307 207.687 129.307 cv
206.549 129.307 205.656 128.947 205.022 128.213 cv
204.389 127.493 204.072 126.485 204.072 125.189 cv
204.072 123.893 204.389 122.885 205.022 122.15 cv
205.656 121.43 206.549 121.056 207.687 121.056 cv
207.687 121.056 li
cp
207.687 122.15 mo
206.995 122.15 206.448 122.424 206.045 122.971 cv
205.642 123.519 205.44 124.253 205.44 125.189 cv
205.44 126.139 205.627 126.874 206.03 127.421 cv
206.434 127.968 206.981 128.227 207.687 128.227 cv
208.377 128.227 208.925 127.968 209.328 127.421 cv
209.731 126.874 209.933 126.139 209.933 125.189 cv
209.933 124.267 209.731 123.519 209.328 122.971 cv
208.925 122.424 208.377 122.15 207.687 122.15 cv
ef
219.346 121.243 mo
216.494 125.074 li
219.49 129.12 li
217.963 129.12 li
215.674 126.024 li
213.384 129.12 li
211.857 129.12 li
214.91 125.001 li
212.117 121.243 li
213.643 121.243 li
215.731 124.051 li
217.819 121.243 li
219.346 121.243 li
219.346 121.243 li
cp
ef
224.717 129.84 mo
224.342 130.762 223.982 131.381 223.637 131.669 cv
223.291 131.957 222.831 132.101 222.254 132.101 cv
221.218 132.101 li
221.218 131.021 li
221.981 131.021 li
222.326 131.021 222.6 130.935 222.802 130.762 cv
223.003 130.589 223.219 130.2 223.464 129.566 cv
223.694 128.99 li
220.512 121.243 li
221.88 121.243 li
224.342 127.406 li
226.805 121.243 li
228.173 121.243 li
224.717 129.84 li
224.717 129.84 li
cp
ef
234.398 122.453 mo
234.254 122.366 234.096 122.309 233.923 122.266 cv
233.75 122.237 233.563 122.208 233.362 122.208 cv
232.627 122.208 232.065 122.453 231.677 122.928 cv
231.273 123.403 231.086 124.08 231.086 124.973 cv
231.086 129.12 li
229.791 129.12 li
229.791 121.243 li
231.086 121.243 li
231.086 122.467 li
231.346 121.992 231.706 121.632 232.138 121.401 cv
232.569 121.171 233.103 121.056 233.736 121.056 cv
233.822 121.056 233.923 121.07 234.039 121.07 cv
234.139 121.085 234.254 121.099 234.398 121.128 cv
234.398 122.453 li
234.398 122.453 li
cp
ef
235.833 118.176 mo
237.129 118.176 li
237.129 119.817 li
235.833 119.817 li
235.833 118.176 li
235.833 118.176 li
cp
235.833 121.243 mo
237.129 121.243 li
237.129 129.12 li
235.833 129.12 li
235.833 121.243 li
ef
241.167 122.438 mo
241.426 121.978 241.771 121.632 242.189 121.401 cv
242.606 121.171 243.11 121.056 243.687 121.056 cv
244.637 121.056 245.415 121.445 246.019 122.193 cv
246.609 122.957 246.912 123.95 246.912 125.189 cv
246.912 126.427 246.609 127.435 246.019 128.184 cv
245.415 128.933 244.637 129.307 243.687 129.307 cv
243.11 129.307 242.606 129.192 242.189 128.976 cv
241.771 128.76 241.426 128.415 241.167 127.939 cv
241.167 129.12 li
239.871 129.12 li
239.871 118.176 li
241.167 118.176 li
241.167 122.438 li
241.167 122.438 li
cp
245.573 125.189 mo
245.573 124.238 245.371 123.504 244.982 122.957 cv
244.579 122.41 244.046 122.136 243.37 122.136 cv
242.678 122.136 242.146 122.41 241.757 122.957 cv
241.354 123.504 241.167 124.238 241.167 125.189 cv
241.167 126.139 241.354 126.888 241.757 127.435 cv
242.146 127.982 242.678 128.242 243.37 128.242 cv
244.046 128.242 244.579 127.982 244.982 127.435 cv
245.371 126.888 245.573 126.139 245.573 125.189 cv
ef
252.086 121.056 mo
253.209 121.056 254.088 121.43 254.736 122.15 cv
255.37 122.885 255.701 123.893 255.701 125.189 cv
255.701 126.485 255.37 127.493 254.736 128.213 cv
254.088 128.947 253.209 129.307 252.086 129.307 cv
250.949 129.307 250.056 128.947 249.422 128.213 cv
248.789 127.493 248.472 126.485 248.472 125.189 cv
248.472 123.893 248.789 122.885 249.422 122.15 cv
250.056 121.43 250.949 121.056 252.086 121.056 cv
252.086 121.056 li
cp
252.086 122.15 mo
251.395 122.15 250.848 122.424 250.445 122.971 cv
250.042 123.519 249.84 124.253 249.84 125.189 cv
249.84 126.139 250.027 126.874 250.43 127.421 cv
250.833 127.968 251.381 128.227 252.086 128.227 cv
252.777 128.227 253.325 127.968 253.728 127.421 cv
254.131 126.874 254.333 126.139 254.333 125.189 cv
254.333 124.267 254.131 123.519 253.728 122.971 cv
253.325 122.424 252.777 122.15 252.086 122.15 cv
ef
264.226 124.368 mo
264.226 129.12 li
262.93 129.12 li
262.93 124.411 li
262.93 123.662 262.771 123.115 262.483 122.741 cv
262.195 122.366 261.763 122.179 261.187 122.179 cv
260.481 122.179 259.935 122.41 259.531 122.856 cv
259.128 123.302 258.926 123.907 258.926 124.67 cv
258.926 129.12 li
257.63 129.12 li
257.63 121.243 li
258.926 121.243 li
258.926 122.467 li
259.229 122.006 259.589 121.646 260.021 121.416 cv
260.438 121.186 260.928 121.056 261.475 121.056 cv
262.368 121.056 263.059 121.344 263.52 121.906 cv
263.981 122.467 264.226 123.288 264.226 124.368 cv
264.226 124.368 li
cp
ef
266.664 126.01 mo
266.664 121.243 li
267.96 121.243 li
267.96 125.966 li
267.96 126.715 268.104 127.262 268.392 127.637 cv
268.68 128.011 269.112 128.198 269.702 128.198 cv
270.394 128.198 270.955 127.982 271.358 127.536 cv
271.762 127.089 271.963 126.485 271.963 125.707 cv
271.963 121.243 li
273.259 121.243 li
273.259 129.12 li
271.963 129.12 li
271.963 127.91 li
271.646 128.4 271.272 128.746 270.869 128.976 cv
270.451 129.192 269.976 129.307 269.429 129.307 cv
268.521 129.307 267.831 129.034 267.37 128.472 cv
266.895 127.925 266.664 127.104 266.664 126.01 cv
266.664 126.01 li
cp
ef
281.587 121.545 mo
281.587 122.755 li
281.213 122.554 280.853 122.41 280.479 122.309 cv
280.104 122.208 279.744 122.15 279.37 122.15 cv
278.534 122.15 277.872 122.424 277.411 122.957 cv
276.95 123.49 276.72 124.238 276.72 125.189 cv
276.72 126.153 276.95 126.902 277.411 127.435 cv
277.872 127.968 278.534 128.227 279.37 128.227 cv
279.744 128.227 280.104 128.184 280.479 128.083 cv
280.853 127.982 281.213 127.824 281.587 127.623 cv
281.587 128.817 li
281.213 128.99 280.838 129.12 280.464 129.192 cv
280.075 129.264 279.658 129.307 279.226 129.307 cv
278.045 129.307 277.094 128.947 276.403 128.198 cv
275.698 127.464 275.352 126.456 275.352 125.189 cv
275.352 123.907 275.698 122.899 276.403 122.165 cv
277.109 121.43 278.074 121.056 279.312 121.056 cv
279.715 121.056 280.104 121.099 280.479 121.186 cv
280.853 121.272 281.227 121.387 281.587 121.545 cv
281.587 121.545 li
cp
ef
283.833 118.176 mo
285.129 118.176 li
285.129 129.12 li
283.833 129.12 li
283.833 118.176 li
283.833 118.176 li
cp
ef
293.357 124.483 mo
293.342 123.777 293.141 123.216 292.767 122.784 cv
292.377 122.366 291.859 122.15 291.226 122.15 cv
290.506 122.15 289.93 122.366 289.498 122.77 cv
289.065 123.173 288.807 123.749 288.749 124.483 cv
293.357 124.483 li
293.357 124.483 li
cp
294.653 124.857 mo
294.653 125.491 li
288.706 125.491 li
288.763 126.384 289.022 127.075 289.512 127.536 cv
289.987 127.997 290.649 128.227 291.514 128.227 cv
292.003 128.227 292.493 128.169 292.954 128.054 cv
293.415 127.939 293.89 127.752 294.351 127.493 cv
294.351 128.717 li
293.89 128.918 293.415 129.077 292.925 129.163 cv
292.435 129.25 291.931 129.307 291.441 129.307 cv
290.174 129.307 289.181 128.947 288.446 128.227 cv
287.712 127.507 287.352 126.514 287.352 125.261 cv
287.352 123.979 287.698 122.957 288.389 122.193 cv
289.08 121.445 290.03 121.056 291.211 121.056 cv
292.277 121.056 293.112 121.401 293.731 122.078 cv
294.336 122.77 294.653 123.691 294.653 124.857 cv
ef
296.793 118.176 mo
298.09 118.176 li
298.09 119.817 li
296.793 119.817 li
296.793 118.176 li
296.793 118.176 li
cp
296.793 121.243 mo
298.09 121.243 li
298.09 129.12 li
296.793 129.12 li
296.793 121.243 li
ef
306.307 121.545 mo
306.307 122.755 li
305.933 122.554 305.573 122.41 305.198 122.309 cv
304.824 122.208 304.464 122.15 304.09 122.15 cv
303.254 122.15 302.592 122.424 302.131 122.957 cv
301.67 123.49 301.44 124.238 301.44 125.189 cv
301.44 126.153 301.67 126.902 302.131 127.435 cv
302.592 127.968 303.254 128.227 304.09 128.227 cv
304.464 128.227 304.824 128.184 305.198 128.083 cv
305.573 127.982 305.933 127.824 306.307 127.623 cv
306.307 128.817 li
305.933 128.99 305.559 129.12 305.184 129.192 cv
304.795 129.264 304.377 129.307 303.946 129.307 cv
302.765 129.307 301.814 128.947 301.123 128.198 cv
300.417 127.464 300.072 126.456 300.072 125.189 cv
300.072 123.907 300.417 122.899 301.123 122.165 cv
301.829 121.43 302.793 121.056 304.032 121.056 cv
304.435 121.056 304.824 121.099 305.198 121.186 cv
305.573 121.272 305.947 121.387 306.307 121.545 cv
306.307 121.545 li
cp
ef
149.28 144.748 mo
169.44 144.748 li
0.74902 0 0.74902 rgb
@
191.198 143.093 mo
191.054 143.006 190.896 142.949 190.723 142.906 cv
190.55 142.877 190.363 142.848 190.162 142.848 cv
189.427 142.848 188.866 143.093 188.477 143.568 cv
188.074 144.043 187.886 144.72 187.886 145.613 cv
187.886 149.76 li
186.59 149.76 li
186.59 141.883 li
187.886 141.883 li
187.886 143.107 li
188.146 142.632 188.505 142.272 188.938 142.042 cv
189.37 141.811 189.902 141.696 190.536 141.696 cv
190.623 141.696 190.723 141.71 190.838 141.71 cv
190.939 141.725 191.054 141.739 191.198 141.768 cv
191.198 143.093 li
191.198 143.093 li
cp
0 0 0 rgb
ef
192.634 138.816 mo
193.93 138.816 li
193.93 140.458 li
192.634 140.458 li
192.634 138.816 li
192.634 138.816 li
cp
192.634 141.883 mo
193.93 141.883 li
193.93 149.76 li
192.634 149.76 li
192.634 141.883 li
ef
197.727 143.078 mo
197.985 142.618 198.331 142.272 198.749 142.042 cv
199.167 141.811 199.67 141.696 200.247 141.696 cv
201.197 141.696 201.975 142.085 202.579 142.833 cv
203.169 143.597 203.472 144.59 203.472 145.829 cv
203.472 147.067 203.169 148.075 202.579 148.824 cv
201.975 149.573 201.197 149.947 200.247 149.947 cv
199.67 149.947 199.167 149.832 198.749 149.616 cv
198.331 149.4 197.985 149.054 197.727 148.579 cv
197.727 149.76 li
196.43 149.76 li
196.43 138.816 li
197.727 138.816 li
197.727 143.078 li
197.727 143.078 li
cp
202.133 145.829 mo
202.133 144.878 201.931 144.144 201.542 143.597 cv
201.139 143.05 200.606 142.776 199.93 142.776 cv
199.238 142.776 198.706 143.05 198.317 143.597 cv
197.914 144.144 197.727 144.878 197.727 145.829 cv
197.727 146.779 197.914 147.528 198.317 148.075 cv
198.706 148.623 199.238 148.881 199.93 148.881 cv
200.606 148.881 201.139 148.623 201.542 148.075 cv
201.931 147.528 202.133 146.779 202.133 145.829 cv
ef
208.646 141.696 mo
209.77 141.696 210.648 142.07 211.296 142.791 cv
211.93 143.525 212.261 144.533 212.261 145.829 cv
212.261 147.125 211.93 148.133 211.296 148.853 cv
210.648 149.587 209.77 149.947 208.646 149.947 cv
207.509 149.947 206.616 149.587 205.982 148.853 cv
205.349 148.133 205.032 147.125 205.032 145.829 cv
205.032 144.533 205.349 143.525 205.982 142.791 cv
206.616 142.07 207.509 141.696 208.646 141.696 cv
208.646 141.696 li
cp
208.646 142.791 mo
207.955 142.791 207.408 143.064 207.005 143.611 cv
206.602 144.158 206.4 144.893 206.4 145.829 cv
206.4 146.779 206.587 147.514 206.99 148.061 cv
207.394 148.608 207.941 148.867 208.646 148.867 cv
209.337 148.867 209.885 148.608 210.288 148.061 cv
210.691 147.514 210.893 146.779 210.893 145.829 cv
210.893 144.907 210.691 144.158 210.288 143.611 cv
209.885 143.064 209.337 142.791 208.646 142.791 cv
ef
221.025 145.008 mo
221.025 149.76 li
219.729 149.76 li
219.729 145.051 li
219.729 144.302 219.571 143.755 219.283 143.381 cv
218.995 143.006 218.563 142.819 217.987 142.819 cv
217.282 142.819 216.734 143.05 216.331 143.496 cv
215.928 143.942 215.727 144.547 215.727 145.311 cv
215.727 149.76 li
214.431 149.76 li
214.431 141.883 li
215.727 141.883 li
215.727 143.107 li
216.029 142.646 216.389 142.286 216.821 142.056 cv
217.238 141.826 217.728 141.696 218.275 141.696 cv
219.168 141.696 219.859 141.984 220.32 142.545 cv
220.781 143.107 221.025 143.928 221.025 145.008 cv
221.025 145.008 li
cp
ef
223.464 146.649 mo
223.464 141.883 li
224.76 141.883 li
224.76 146.606 li
224.76 147.355 224.904 147.902 225.192 148.277 cv
225.48 148.651 225.912 148.838 226.502 148.838 cv
227.193 148.838 227.755 148.623 228.158 148.176 cv
228.562 147.729 228.763 147.125 228.763 146.347 cv
228.763 141.883 li
230.059 141.883 li
230.059 149.76 li
228.763 149.76 li
228.763 148.55 li
228.446 149.04 228.072 149.386 227.669 149.616 cv
227.251 149.832 226.776 149.947 226.229 149.947 cv
225.322 149.947 224.63 149.674 224.169 149.112 cv
223.694 148.565 223.464 147.744 223.464 146.649 cv
223.464 146.649 li
cp
ef
238.387 142.186 mo
238.387 143.395 li
238.013 143.193 237.653 143.05 237.278 142.949 cv
236.904 142.848 236.544 142.791 236.169 142.791 cv
235.334 142.791 234.672 143.064 234.211 143.597 cv
233.75 144.129 233.52 144.878 233.52 145.829 cv
233.52 146.793 233.75 147.542 234.211 148.075 cv
234.672 148.608 235.334 148.867 236.169 148.867 cv
236.544 148.867 236.904 148.824 237.278 148.723 cv
237.653 148.623 238.013 148.464 238.387 148.262 cv
238.387 149.458 li
238.013 149.63 237.638 149.76 237.264 149.832 cv
236.875 149.904 236.458 149.947 236.025 149.947 cv
234.845 149.947 233.895 149.587 233.203 148.838 cv
232.498 148.104 232.152 147.096 232.152 145.829 cv
232.152 144.547 232.498 143.539 233.203 142.805 cv
233.909 142.07 234.874 141.696 236.112 141.696 cv
236.515 141.696 236.904 141.739 237.278 141.826 cv
237.653 141.912 238.027 142.027 238.387 142.186 cv
238.387 142.186 li
cp
ef
240.634 138.816 mo
241.93 138.816 li
241.93 149.76 li
240.634 149.76 li
240.634 138.816 li
240.634 138.816 li
cp
ef
249.917 145.123 mo
249.902 144.417 249.701 143.856 249.326 143.424 cv
248.938 143.006 248.419 142.791 247.786 142.791 cv
247.065 142.791 246.49 143.006 246.058 143.41 cv
245.625 143.813 245.366 144.389 245.309 145.123 cv
249.917 145.123 li
249.917 145.123 li
cp
251.213 145.498 mo
251.213 146.131 li
245.266 146.131 li
245.323 147.024 245.583 147.715 246.072 148.176 cv
246.547 148.637 247.209 148.867 248.074 148.867 cv
248.563 148.867 249.053 148.81 249.514 148.694 cv
249.975 148.579 250.45 148.392 250.91 148.133 cv
250.91 149.357 li
250.45 149.559 249.975 149.717 249.485 149.803 cv
248.995 149.89 248.491 149.947 248.001 149.947 cv
246.734 149.947 245.741 149.587 245.006 148.867 cv
244.272 148.147 243.912 147.153 243.912 145.901 cv
243.912 144.619 244.258 143.597 244.949 142.833 cv
245.64 142.085 246.59 141.696 247.771 141.696 cv
248.837 141.696 249.672 142.042 250.291 142.718 cv
250.896 143.41 251.213 144.331 251.213 145.498 cv
ef
253.354 138.816 mo
254.649 138.816 li
254.649 140.458 li
253.354 140.458 li
253.354 138.816 li
253.354 138.816 li
cp
253.354 141.883 mo
254.649 141.883 li
254.649 149.76 li
253.354 149.76 li
253.354 141.883 li
ef
263.107 142.186 mo
263.107 143.395 li
262.733 143.193 262.373 143.05 261.999 142.949 cv
261.624 142.848 261.264 142.791 260.89 142.791 cv
260.054 142.791 259.392 143.064 258.931 143.597 cv
258.47 144.129 258.24 144.878 258.24 145.829 cv
258.24 146.793 258.47 147.542 258.931 148.075 cv
259.392 148.608 260.054 148.867 260.89 148.867 cv
261.264 148.867 261.624 148.824 261.999 148.723 cv
262.373 148.623 262.733 148.464 263.107 148.262 cv
263.107 149.458 li
262.733 149.63 262.358 149.76 261.984 149.832 cv
261.595 149.904 261.178 149.947 260.746 149.947 cv
259.565 149.947 258.614 149.587 257.923 148.838 cv
257.218 148.104 256.872 147.096 256.872 145.829 cv
256.872 144.547 257.218 143.539 257.923 142.805 cv
258.629 142.07 259.594 141.696 260.832 141.696 cv
261.235 141.696 261.624 141.739 261.999 141.826 cv
262.373 141.912 262.747 142.027 263.107 142.186 cv
263.107 142.186 li
cp
ef
2 lw
0 lc
0 lj
4 ml
287.667 223.352 mo
287.667 237.352 li
@
288.692 239.713 mo
289.191 238.061 289.651 236.985 290.184 235.659 cv
285.139 235.659 li
285.365 236.134 286.132 238.061 286.631 239.713 cv
287.166 241.482 287.531 243.088 287.662 244.128 cv
287.792 243.088 288.158 241.482 288.692 239.713 cv
cp
f
337 208.334 mo
337 233 li
@
338.025 235.361 mo
338.525 233.709 338.985 232.634 339.517 231.308 cv
334.473 231.308 li
334.698 231.782 335.465 233.709 335.964 235.361 cv
336.499 237.131 336.865 238.736 336.995 239.776 cv
337.125 238.736 337.491 237.131 338.025 235.361 cv
cp
f
365.334 172.333 mo
365.334 242.334 li
@
366.359 244.695 mo
366.858 243.043 367.318 241.968 367.851 240.642 cv
362.807 240.642 li
363.031 241.116 363.799 243.043 364.298 244.695 cv
364.832 246.465 365.198 248.07 365.328 249.11 cv
365.459 248.07 365.824 246.465 366.359 244.695 cv
cp
f
377 151 mo
377 220.668 li
@
378.025 223.029 mo
378.524 221.377 378.984 220.302 379.517 218.976 cv
374.473 218.976 li
374.697 219.45 375.465 221.377 375.964 223.029 cv
376.498 224.799 376.864 226.404 376.994 227.444 cv
377.125 226.404 377.49 224.799 378.025 223.029 cv
cp
f
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 65 /A putdup 68 /D putdup 78 /N putdup 82 /R putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 104 /h putdup 105 /i putdup 108 /l putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 121 /y putdup 122 /z putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings23 dict dup begin/space <1C60D8A8C9B896187A> |-/A <1C60D8A8C9B7D7E88499B0B4629F6223175CD4E8063229FBCC9F00B932F15865B21E5E7BB034E6AEB00B8493B7416EA5F21E0E31EA4A4AA7B249DD04C2020B54E2FE3571164F33157FAF89CB55ED12EC09CD04764D59017211B80D8BF81FE221E84A40> |-/D <1C60D8A8C9B64FADC8BE4593403BE5D574FAA91D24903C73A9847FBCFF2CCAE7B82F347344B6D75D9DA8CFD564A5192C31CC0F81E85BFE65DA0E98609881F08E27947C3AA06FD0D02C1BFBD8926D8C270B5E2950C4A34E562381A9DCE503FFFA3F4060AB2DBCCA9D5531B6> |-/N <1C60D8A8C9B647206730D8F66F8AC61925B6B1318E1FB010B62374917FD833E1AD6BC7D55692C9AE2F77E568D5881F8457D1A44289B0DB31B4E1DC1F3487A85D6C086A5A13FB7D7B66A3F61EF4969C1AE080F7AF6D145220EBF9A7BF4151121C2FA015E52FB7E43B5305D938D71B0B61429953BBCCA81012B7A0E4> |-/R <1C60D8A8C9B7818197CA8C10BDEF0792283B4AD60A4778EF579EA03A9938895E46A3DD671B55D56CE5AC1FF66AA5C5464B6272AB067D7AABFB9BA4824D96D968B50E7E75C15CA7D5303E4D6EB750FDAD2DAE18E237F2D0B786B8A46E9DCB053FB02CA78233BC22EC230776B8699564C207758BBC5B113141> |-/b <1C60D8A8C9B7E2CE503F0CE2BC5634A8F8728B9E7DF78E9EB37EA1AAF5A6E14429B2FFC30BA7B2B7F7056F226E2401F24ABDAD5426247AC27BE4FA97CE94C91E5B97490DDD42E9AC1499720E52A641A6B5FD3039B53C33A6C3FB59A9FDC5809A26029808C985DEBED644B28F1427AE3990CDC08FE3F67389E1C6D971D03C58C4203806687562D626FE9888BA19E8E374C457B0F0CAD2096A35C2A25CA9F88F3E7B91EC8C23BC> |-/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624097F1B5D47BF4F384727F53BA1763156DBDB0266> |-/d <1C60D8A8C9B7E7C1D82219353B31AE497773900CFE039E7C34F7CEBE101056958EFFC2C789CCBD8768CC683564B6074DAAAE648B50C88AD4C58AC712C8476BA68C74E592EF7E71792F9E5367AB3C80F9D183D28DD5E961AA14DCB5D9206768FB9E099DA642A8BAA73D52C56C9913DC619FDF3F90996DC8D242E6BF94BEBE752CB2F5D6196384CDD6E5AC10AFB49712810FFD82A2782B9B182DA37A23E6043872EFC1C407DD53136E> |-/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AEDC4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C0492C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E8106797186054DABC39E6B> |-/f <1C60D8A8C9B8469EE0EEFD5AEC6CA97A72064EDB5F8138E6D1529C05D71AD800DE9767801FDF34CB86E1E21FD9D405698D46905E6F519DDB7CBC96570BA09B7E74CE45A9784C89ACE8876894AF309C859106C75B1212CD> |-/h <1C60D8A8C9B790A816BA887E1DA4852044FABD5C80CA3A9E2E9C1F200BD200369E1A531F52CE66B5B19C492F0751A1C2858510B2E2690FB789B214E0E0C6537C1C71B0F5B79BE42FC591254AEEEA9BA5BA2F0A43A49AB11B4C> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E21C6C79BBDA40B7772F2DEC85ADAD3476B> |-/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A36646DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0318D13C761F9DF> |-/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FDCA5DD8FB0C9C7D76709EB2E3CEF7455DFF330D234D9132A6F52698D79064F174F1D99AEB0CF9139A6469F8D4BE826FAC77DD18B951C7429F3A77A1434C1A624632AE9545E6FD8A1CFF86A978EB2F9D9C8D213E3AEF1293A1DF353A70DA5E24E2AC4CE8D2656D24B8166AAA778D66777269CA00CCD283376A690AE85A4058A8C9155FC3FA3A08F87D3A4F002FFBBE8C69D79181> |-/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-/s <1C60D8A8C9B70FAD6F31E6985338EEEA1793890FC3B3DC4027B9CC9488D5A6B4D4C4E3E08CED307B2C798C1699A9DD310011666D86920512F1C3EB9CEE4F24B897BB1E950EE111237B9A2BC5BBB8732A07D9407EA3C86D8241785B5209F0AEBA9DE73147EEE82D829B87C7> |-/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E6402088837AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3D16C57> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD7B90AF6DE09B4373C71DC870DE9EFA0B94E7506F75EEE558DF81CD33372DAD0B84FB6B3C173C4DB8D5EA8C4F6D8C721F2FFE6909411B724C264F09293D8D8F89019F8CCCB6FE3AF5C57> |-/y <1C60D8A8C9B74451438745C9BFBA6ADBF77C623A74806E5154FE3B1D23AD89884413882DCD456BA075554715051F4B509904A44C98E8994424C1B156D65DBD9989905EF3DE501EC4A81DE7294F3DD868FBAE7BF61D1105CF8B349074D58AEC16A3DDE7732615028813D74148E904C1C87C7D157893B843DFD35C187593AC68163F56BACA6337> |-/z <1C60D8A8C9B76F05D40D9AF06C62C52F8E7A83C69F6CDC031056F31E455ADB43C89D34E1A28A8E500535BCBC2826CEC41780F6E88D88BBC16CBA809407E19164AA6CDC22FB> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/BWBVFZ+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/BWBVFZ+MyriadPro-Regular*1 [32{/.notdef}rp /space 32{/.notdef}rp /A 2{/.notdef}rp /D 9{/.notdef}rp /N 3{/.notdef}rp /R 15{/.notdef}rp /b /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y /z 133{/.notdef}rp]BWBVFZ+MyriadPro-Regular nfBWBVFZ+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf207 204.666 mo(Role of RNA)[6.50391 6.58789 2.83203 6.01172 2.54395 6.58789 3.50391 2.54395 6.45605 7.896 0 ]xsh207 219.066 mo(in protein synthesis)[2.80811 6.65967 2.54395 6.82764 3.8042 6.58789 3.8999 6.01221 2.80762 6.66016 2.54395 4.75195 5.65186 6.61182 3.97168 6.66016 6.01172 4.75195 2.80811 0 ]xsh207 233.466 mo(suspected)[4.75195 6.61182 4.75195 6.82813 6.01172 5.53174 3.8999 6.01221 0 ]xsh302.333 189.333 mo(DNA)[7.9917 7.896 0 ]xsh302.333 203.733 mo(structure)[4.75195 3.97168 3.92432 6.61182 5.53174 3.97217 6.61133 3.80469 0 ]xsh313.333 140.667 mo(Nobel prize)[7.896 6.58789 6.82813 6.01172 2.83203 2.54395 6.82715 3.97266 2.80762 5.05176 0 ]xsh313.333 155.067 mo(for RNA )[3.34814 6.58789 3.92383 2.54395 6.45605 7.89551 7.34473 0 ]xsh313.333 169.467 mo(synthesis)[4.75195 5.65186 6.6123 3.97168 6.66016 6.01172 4.75195 2.80762 0 ]xsh381.001 130.276 mo(Nobel prize)[7.89551 6.58789 6.82813 6.01172 2.83203 2.54395 6.82813 3.97168 2.80762 5.05273 0 ]xsh381.001 144.676 mo(DNA structure)[7.99219 7.89551 7.34375 2.54395 4.75195 3.97168 3.9248 6.61133 5.53223 3.97168 6.6123 3.80371 0 ]xsh137 327.668 mo
137 341.668 li
@
138.025 344.029 mo
138.523 342.377 138.984 341.302 139.516 339.976 cv
134.472 339.976 li
134.697 340.45 135.465 342.377 135.963 344.029 cv
136.498 345.799 136.863 347.404 136.994 348.444 cv
137.125 347.404 137.49 345.799 138.025 344.029 cv
cp
f
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginBWBVFZ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/P <1C60D8A8C9B7876E235FC614E63EC6DDBF5153E7285DD594B4A59D9CFED19B0A38B3CB0F4F897304E6BAD66C826BEE7E4169B0E7C80E2CF9471E5F92DE30A72B04AC0EEA14B3B5B59AE75C5D253EAF073DA7CF16B6D745CDF6FBBE2E5B43C2B5E88E6AFB64C1CBC51F> |-/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A261528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D88393EC5B1BCAE7CEACDFA7D9A043D> |-/m <1C60D8A8C9B6B7700392E60257FC106462D2DFCBC2A10DB5A615FEAAB80AD406B3832324841574E3D3133104747B3854CDADF52623F13A7F1244387949CA519BF305061F6B288B581C60DA40B94376A357459EBA755901A927650F836941E942CE400E1FF6115974FBE2B4AAC56A74FF06B173793CC52E5CDF6F129032B1749CF571CC87D5D8236938E9D26865B5B2E013E76E7BD1DBAB8AA6F040AACF> |-systemdict /gcheck known {setglobal} if end {end} ifendBWBVFZ+MyriadPro-Regular /Encoding getdup 80 /P putdup 97 /a putdup 109 /m putpop%ADOEndSubsetFont
/BWBVFZ+MyriadPro-Regular*1 [32{/.notdef}rp /space 32{/.notdef}rp /A 2{/.notdef}rp /D 9{/.notdef}rp /N /.notdef /P /.notdef /R 14{/.notdef}rp /a /b /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y /z 133{/.notdef}rp]BWBVFZ+MyriadPro-Regular nfBWBVFZ+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf135.667 301.334 mo(Proteins formed)[6.19189 3.8042 6.58789 3.8999 6.01221 2.80762 6.66016 4.75195 2.54395 3.34766 6.58838 3.97168 10.0083 6.01172 0 ]xsh135.667 315.734 mo(of amino acids)[6.58789 3.50391 2.54395 5.78418 10.0078 2.80762 6.66016 6.58789 2.54395 5.78418 5.37598 2.80762 6.76807 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/BWBVFZ+MyriadPro-Regular*1 uf/BWBVFZ+MyriadPro-Regular uf/MyriadPro-Regular ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (Jason Schwarz) ()%%Title: (dna.eps)%%CreationDate: 8/7/14 11:23 PM%AI9_DataStream%Gb"-6kB\VgdO9K\J9q:NfZ'`4!Crl*c=,DGJ8LT,@)D85qo<pJ?^9.+7!I+53IAO(H.P026*41Q8sN@R8b%&!1Mk[4m>jTsmp&g-%U7)cr1bC3K8gGJ8CL/joJMg&jg@2`%*h;ma[77o<m'JgeIP+h%;f,$cWupi,)SL'r>+L.3$a"12bP"Q)diLd)j$14h[1;Z'0,bqM%<jcS@E]NK0>KoXn^M84)I]5/.NCp,C>oc?+%#8E,n5:)]>P43=pKODZMb9Lk`Sq9An%'$c!KQrG(@S_JX^Sn_"rK8`qqpnQNt9_V%o)5jK(dS*%!?Q3lfIb`;Ru;=J^XYiiWS&BcWe4o]r@:/Q^1r%>>Lc#lcq`T1N#WRS*Bn>tNLJ3#;N'^lBNeFBN>5Hg:G"=\rb=@j%"f/*JRdED=s%0hEeuV_PjElO&k.dU6)TP8]Nh`Ee_cEOVh/3^9+7f:iII4OCDmYHInnt:(`I?5fn^](iE)l:R1^:`.S^n@!8YFF#%5j>'/T17-.E8#09Y<"TFgGCR?)+@E`W$:J'*dZ,TMA"Gr+j+R'MCM(qfmq*VQj-I@$oYt+=()B[?r0UFc&ZHuBAfZ$m.QljCS4X7%;u/f,cY0ceFnS&='=p:C1ti/j^cBADWuW%Rj%Ba;l4]Pa?#:e!":]=2_Uud70^.n%F\p=OFd;-aH]>e8Kg,\#*tJ:,,(;!KId/tC%(5o7n'_/@Ti_r^mVkQ_S<\!l&I7mGA(=5gm:TUB@=A)L@("T7b@i\jq3]d2V[ri^,krRD4Dto0sMFFUH/E3/<,!IFkYth-I:Fd/K%_7(p0HsWf!G::HF?]#AJ8>"n2m("N6iqSA<YYY%N[BNH.Vt:l##X>R(p'<mfhi&3??0i5Ri\0X1IUYs7::+U!&Un3(nLp2;T+E?G%-A@MgY[@0^FXe+WA)i3/;]8Ra;C^WQI?XAp@S_!A\5DIG3?'2DKDrblfK];PQKSV&?INP/`:,G2_Z$ePVGs8X@fPp2Ipqg0pu<a@%*)#c7CLR84PE$jK&kZ44+!EB\5g1,GYVDpJ;6"+X8iK3Ug2i-7@SZHfE,!L3]P%cJ&*mWl(h[=Hn86lpq@rg^T3.$B2ti<\KYEA:%=9j0hM)3FhZ9p'2+].T=4Nr&(E>r@^3JI#*P7':GPjT5I8p(K-dL@pD,Js:HEQ;5k3c1G%:S6*c'QYalPagp);qfS6.c_]5?VB,;%4-;Ld<_K_8SLiWqgs,WNi]hhFiZTZ5egN=(>N:5N0hUH[(,Zr3$ss4*[S,N=H&hg?^Jl`S`]lb^:TV>'T-VhAemJ8,&sm05@f</'%<0dHkrmH:b7Xo1lK<6$knp1)MqFgi'$M:h#Qi;o]9-mbNrMBP:Abt0X9E0"o5H<%Lm-p4!/,d_AdD+$m5q5KIV,Ta,3^3.3-a2Vh%q?_XEC8"OfKh=ccjY^2^K/HP"Q'/622(Y_kp^5TkmqR].<_?W9oiIk>,&HsiRfC:>9q_nLp.18W9Df9<l\H4R77n+unqKp=06*f3%^ph7?`ifHX!?>gfbE7!JqMo*NkuPF'<J1i6)*.oTOp+ub97i&'@dBi(7,b1K]0(ZaJVF'"^QHNRb\VO'fFI9XKkk/c`i^Qmju;.s%:]?ZiUA7JPbS`&NXcSinfmr>,6*Wc^DQ,<Pkkf1,(le)tpf9<:A^UiDY/EsA2T*q82T;r:Sl#tC/HBmE?eOeT`4-Ib`AS/dn7Fbf%5r5hp!d$k-l%i3.-TIUf@^JO<49!r[:,/Z]MfoHK:9:Qp293=:j)[-,m/9b1l.bVRC>&Q4'Jo)g,jsgQ@\/Pg*?Cq$r=8UBG'`0&%S7Y[M`cFi%YV#EqJ[UB?5heUtUMaMQjN6;b_$'sr/=GB9S8',r6=kn0DW%?pghk.N@*ZdB4haZdVr(.e?cnEf).PY:q&I*ds&4e2%.cTZU&VKhG(1fTuoamBX6)F&.s,:H,"?=hJPVSt!$:]LcI5L"$T]bil`@bp[hC>s#nNiQ7)hfRGJr60)DjKTkJr9S.#j1mi`t<e=%I07`-86"!P8p/P!TH@W\Q;j762R0[E+dW<TNQHFo&M9L0'LQaf9H15+Abq_dJW.'kI7([;0D9qM3SJ+8DnBQ_3p<l.D:mt)Jk@m*%P8%L8A]F,E0A%W5F8FCLI`=[nGK#67;1>3\B/F7C2bM9?6f-='P.-`c]LH*V(5dD4^L5/A*G[_0<&.S_e(k;!C.3l.D.HVDL++;o%Pg/aGW)b14aOE+qaW,fLm!FG$E7RcjZUTn&2e]+nVj=JQ3O(99QBkF$88+-G(o7l(#i-C:M@Jqp_iW9kZG6Z\ebH1$\m#+iR5N]l%p)@FtVY77[At=nuTgt6)25:Gr>S*keVIMt`J4["E]CDo-=84[\19j[b8JEVU.N6k$fJX[CUF']1qFnQ>UL<+okR5AZ1nm!rVS?_O%#Og`AG@JXl6#?u[;pSMrm9l1>RARE3F*M%%$_^Tp$Z&)5kXhlYdqko5A7u-Y]a3-q'c4<C3uJi2%cC&62(31cS@7_$fVZ>u18EPG%(aE(Tp5mFg_ql4gM7;NH>,,SdGJ6CTce3fii_bn[(54%ahoGsp`Yk%<(YY^Jl6X((VNbLe_PGhK8mQS]Z^6HaXFXF^[HtqVbU+Lq%'N<]fME.FBeRQPG8N90d-Q<bq[`%<$H>k7>?8d]fYndcFc29fSMC$MR(u$m$KMpg:lBVU^HY19)gR+bTZ1Bu&6N3:MKJRC<s&.*:%J)UFs2URn8NQ6@b`j$pQ1mMNi0_8KW%#T5oAX):^>c(_R+khLqfRQi#'W$22g//q$;._N/&n,]]CBcY-l<cTmLe8gm3t_J8(SN(9%GVQBn*qIDK@a)dGUIP2'b%oLJ+Q)N&8D"l76`&Gp'@Oc\j`A?Dd,<kIc#*\:$Y6a"G'UKk`$m9U$"\)+P$s?Dhak/La@^/p6`6(0%[$HSj1-VmVP$8imfAhjAdgeJ#[6c)C<23PY2>A[t4:u(8^d\o\P$l1>+)$N%\jiWff5U*OJt$N!j)\E;I(Nd+)7F6u<1[`4AT5/6%Sd1:9Q8a*?Zm@&C(co]GrAZS##/1KI[Y-Ib^ZeFu9RRis%A(\#>I3"0!+(`6LI);O1OEO/`?(E;$[pAi`bU8PPqc&EGNi#Jo2`KB%K#t"!9Jf4kfc08_ja.\^-L%tD!6j8B]hCrB:+9[Pb]tPq>WU^e1;KQI!N34$TOiq)TnmWU:onZQ2q`"40h4Phh_*@I2RK3j%g=kL%/W.-=;&B^6F.6Ku9Wg/H_*&]);G;LKc!pL]`Nb+@JKl*0-#[a%hA?Q/Ng3Z`YOUcQO3IYU^P,9TTkNWmT'8\@>O\!$'rL-F7#%h_%KbP1IpX[Q?H%;316t]FtqPep"lW0r*0P=@n=Hf_h774!,qTjJk8P!&HHe6Vj(cBFI'#(?%R\Ycu*U8O!OLJf`_q?VR`L)@cq'#R!%[ijb&nm/IJVO!']+YnU0bFk.e2]Xo]Js[.0>c;m8&$<Arqda9h>d9YDDd.O<d"TDKF98)R:K3!Y=`QhbcpTe,`JfP=G0FhqMKThk%?H.H+H7e:dT,T[q1I`m%2Dl,"05;\j;?6sDf!s)`>OscM/=2@sP<X[um5fpC'^^+d%[Grqg\dGE27$[ohWhjeYLrctpmYpcaESNl%VSl[qaQl(lbt\ojg!iF%2/r+/nts[DUf),G>U';P2F\E8B6$P`JCtfQ4H!r1MCiKOC]u%&ppS-5]Zhdkcrl%OY0edo,&qEfPF:<]%I*:GuUua3,4W8GsHt6%A_=>!$m2Z(!ruuRRR&9ba$<ec0'FA[H=3:o"51;J2R-$+IU)]Yb;>q^0L_?\$Gau.TS];&eH"+f^R#)+P%,MD9^_=T^GYp(*;p^e/r-=g6YP(ae&42_f*SEH:>(1inn)i<hkqct?@`B@!dID\,jEWq?4Kg3_hTgtN)T\NC@9m]A-Z%Cea(!JWm%PuNVsqH9-IAagbY$2Lj!(H#]f-r2PC'5amD/4)4Os(I(Nfe%e9j'7`>Mpfi-<$Dq,[O*LQg(g_Ti>GrSJ^"$J]66$,Sk6:W92NbZ%jf$L9irOfB/YcoC#^Ok,d<gsH#)2cj[/R-k#f3`j->\Q(l3"lL"VU#^O@u5be%ZX7qgo^!n`YOt"'C%(.5ANu@\HV1G*DDKr(g@/%7%(0DJ3Hf7?\5Po<jqObAtLk8Y%R_HYuE44:-D<r8pL`NZE20@99&X%_UQLCAF1)0S.OFV+M>_,c\bru(tOpA:F@gZ+?L]]\n,<@%X,?$QWs2A`#^Q[Sdj,gD#s#2.(gW8HlLgO1EqKC;@CZQLN*=$l+14;>Jg3`W<.hK."1+/eGGs[-]jYtLr(GX78:.!_b#C<6Ouj_!%rD2^Cfl)6WCST\<f5'=]:M3cHji"'c&NKnc7Gf`H\*5he*OnFF9It'mbfK>i1NI2L#/1QH'qs-cVIlqa"ddUb1g9tmR$T$RGd^tV%=)\&7;(>(h`IML$YL'S4&VUH,XB#!7f\uia?d%ukn_Cj9/8I'tBD<HWV4FaYi,ee,]NCo>-!kK@E??%r<pY4oG.g)o+a2H&ZoT<$%RJEC9\SM\/h8j(oe?_BWcCiR'[QdrTW30YqHI]bK\CW:$Y;[C`Ggaq#Hgj"!X>T:f<i_Z@=)5]>,C;1Z[d&k=.B=6+?CPk4BpC/^%/R,>7HaVi,H`Q[\[VF?dmoN*@2:d#)]G\gLkc50IWt"[N->gIglSNI$RV&*KBg.^Id(16$[puJn1$a!2.RRB^8?36&WfcYpXBVlW%Ho-0&3[!'gA8=I!Ck'gq[BLJG7LaPiB&A?F<b%6Y<dRAgmUm<lpo_'kD_7V[O6kMPf':plVu*CDr:h7B#JFlcnQkO1ALS*9\4jLj%W&NS>q/Z29hl?B7,A'f^2=,fOgI&"Sqtm;=c@-;[`K?:/lu/e'Ir@SNc#s3(IolNT@1.Rh$<8K5T`5E>II(LXo<3>GnTV*8r?bm&%]:--B$XPOEH>dq6E(A=N(rB*.^,psJj*b>6U6K>u>0S\n]\fjB)VI4nN4cuC`h.:[K07Sb"%q7d2u,fX)+[F>ANsjtjHikA$gZ'P%R`HTud7g"dS)<(L<B?l9@BW$P-'D`s9n&5e,2)];FP't3J=Q!.S5((BKT*;bB5c=L_aKUaJ?"7JcEIg1'$99Q/6]K1cVr+;S&gjD%C%c9:^7AR(bt@l?dOD;?C28n'qio[AVDYODc!8^fFW@B0^R;LC9aB[i>3d?HpDUDB[71:NMDUU^8G7,Wri#OFhlZ0_!-6_+2nlT*%._HS..[08.o"iLLJ,%j@78Mhbh0ViF<4Q<#i$RquoOVPL[`?,Ka6[KIm-'@L^[K\T"U)E!JViOTS[ZVhT5GnEa=FnHj&'+tZTtS2%c`l,T+%iupIKs!nr38g9dYCd%"kop7LuXO%YOO#sTEkbHC9-3=J'UGO^WCB\Cq&#q%r7gbRaC$o'co38l.OPS`^_m)iH7-g=oj=,%b3NfNg4^@B2R(Q9CoPf#<20LJ)4V*Jq!U]LUCe4d%P,#=[pLcfI(sf-03S/'fO@Re/lN\'!6rht^i8a^jJ7]0[$S,M&0C643lCB7%qn3YG-'X7X<<o/D64;kWT84CsoOjE&!Mr<2^DaI1;f-[kJaHb9E'sFko^qN0BMNg*.'UEk%\&*jpkCD:\=L2I/bFercfeB,dk^H7%4u1MBMFf8Js6kJX7UBc#[OJ%C+W2$MORg*$IiT6%m104=r\q;mXF_02VRp"&!oWV(KLDG,!3?5oWF<J9I^6^3fTJdKZi=l^UTNSc%2,C@)\GQF]a7oA[8r`R?n(U;i;Hdu<eS'*:2C-N[0NlfXC9JT+1_(14bW89#O_9T2SaS2nq*Zl#X5*tGGOS`Y2(q>$EN@dtF\^*(%-;j^As+3FUW[(b[2CbKY\#[5b3`mcpoEf-@%/tdcO(8dUi:`6Sd2\h/mJs3P8bK\-9q`.@!)WAGb;rg@[STabrSf3_';ZFWBnGR2%XAL;*p!P-'fWX5"$IsU3Aq-T-q.^&H,*;8qe"0DQ)C[P#f2M)8M<:I,S\[ai#(C!UNXoh]UMJ6)7>/j_P0OA2/u,A6,kC"(-Yk!r%L#[<02[n#<5/Iq[i5Zr7E<'?p7tp0AU/LVCqY5u,etMa(,(d5j^`*?0N35Yqd8_.<"JE"@-!3Xg,LJ%t\OYP8i1pFdq/e^V73kAW%Q%K>F'al/YdFIQ3U\n2gI9Ng!_M#uGeNBeGO&COM;o*:gLB[dm1/qbs%dL=Nq:B8SMH66kF:9YLa\sB3ckI'89Q`-.He&(Dp8SGE%iAd:I!9BjTNlu/Zg_k]+PjF$aY$sIG<GW7?-)5QYD76Oo&;*\^Np-d#9AZ:_GcYni?M>J-8@JG?UIJ/6a92"9>E(a3Bm&&Hr3GRM%bN:`CF0#]b4cODmXrRFb=,kEm$9^F@RKrhe$J!"^-q)FTQ9$"d;pSk,_5e]gT=os!et(ek\pa>Aa@PUV=Y4Yp0_&Q/-;j%ud%#Li%7_2/@9Og51N]s27)4UFd7PQa\.eIH1^m4"ld\tJbQMh$5^gAu8a5;*]7jjjR_t2i5FS5*@R'5*\BlNfmbr;$hooXTp.S+gWs%X5K%B\ujkp'K3r?DC6\#_k*C:[qraVq[k?=-q\?QbTQ6r]8+==;RK`33)sXD%0WR/FWJcCP//*C'H#5a05N:e9Phmr+eJ!EI`k3NPPoE%_fuOACT%0<I0?1e%qU+f>+OAKUE6:NXQH%-J&^@:J\;ROY0H69WtC*Va,]6\,XKcT'jB+ll@51ZZ$WleJ'e#jcYBb8NXp40._7lY%o0@GOA]K:*/c_7<,#nPKOOF.*^]'.nnUFXLqQ4AsJ%@8pg#UehPAcum.'fVfqgb9G&S@7thtbT5A49JMFP!^cs(^*iT4.S.<;b'c%8.pVr*VsU1.Ti&ZZ't^G0$.UMoQM\eo:PH+-B7?3T.p6=o3YqiM2&Y/%"#Ad3WJ>.DX"tYrMNNfD@EOfE-u9:6_=sO`OZXq#fBEG%asf"@j5?cW7Vf1g.!9;%\5^1LlBA,P>\DVMlI;gcS3krqg+-F%;hRtQAd;fud<Bp3;PP&qp)<m!n#o3fo2h^=`H[<Wm@;K1S`'Q-%7RRK@^W/0:CGi`O=pP#W^SA=%UXK_+G+V16NQOB(!i<'R]ddnD8cR>>%6D2d>I@IJf,CCapa@)=BX?U4;o,2H(onp_X9=%gS'CEf%dGm^r1O;@@DZ6,YetUaC>Ck%K[:/V6I>E@!"W=BkEfS.8LP%3Y#]<t2APkA_X@K>)_-<hkWrk(\cr2"TB1sc,WXX:)G/%5bI]r\N%'Un].^\R=fa<knt^Wd1>,\[1""WR6A<@;Lha5R;5OYpqFNe'0"]R0mq)(jI0KBc[IeK"KA7uabc+#TgJA0Y4KW7q4f<^.MMZVHhr%SQf\XT;Ghpf3Op9?1!-PE9_X/"';U>X(cO\b!rPjD.X1u_^L(Bp.TbWmmlue6-&&R;$PXIh.dbEU#5bh[]1)Zn\,\oo\&8EUYZu>%gXm$Hmapi<%?q`/E*gJ_Qm,'L5)>f_1gehBVVn2BHca)YIX8BWZ'8(lfd<_odjM2m!Vk@['r!sq!9EM%6L#=`6PU%>F^`luWl9Ip%.]%XgL+8[E?.h40#Hb[tgK'DD\2[.sMG(t0pP+`pcRsj]j%q<AmLa20>l.%$6jh^gSJ$Pdr/!+2pXE$dQZ`OLV\Q<LRTQrnG\T7N%9&CQEf.kJsl_`j4[=#Z(\(f(_nbgL&cZ7K7b?O\C94qX-7:WOs]CV>f2u:d[G1C"k7bb"QUS"+OpO6U+Y1gWqeNCY\JU0,bafuRB%n'+lX7(m@8XZ?0ZG(ZjD3k\Df3E!K?l=F_$2CO(V.aA#nZ)4KKhXGX9J@`F?VUIopWf@)j(#M:i5!-H-)tqFP(=>]`L(L$[L952L%o,4jj?iIQX5JFlfi*M#i@[N_:;+3Y=!Y'rhUD`27(pX1FAfJ6j"PK")Z"guBNiKlQ4821W$Neam^N[[sle,;pa&F?sm&f"-#8!5$%"HkY-+=%i[YSt+DT[O?Uf;9f[e@)Ca`O@mGKC1h+%T1ot3^d6mefedh;f;'k6)NN(p>.mu+MmI=1MG6a\<AgiM#/&dC?XljTrQ?=%N7@d;S*@JK$aDBl2*\sV+fK$e+ia^5TH9Z*pp\nVp\IYLjh3';Wj0Z?^[D]Dp75WU[bCJJ+Pg[1ljQ&s]`<Y:.A?%D+"Z!BdsV6$%hse?,dA@UWh7&\5%(9>S]Rr,A8)O;69>0IpLi&fnK(lDCG(>-cW$af>gMk7'-m>i.R9bNpUhKKB\9V8^Dg6W!C$9u(2]klZ0AAnJ%],'(@`7c,60>J:L9&3P8:B6$13jj,qLnmj[cto+kE*l>sB01tPl4E>Dc=6F5G4\+h.PSo)Gh2*ihcR'MDoL7Ar7,Ha85UI6,'6?X%[9pQ9;8q@T@oOm:C[L%@/KPXEQ(dP-n>L4hX*%+&#gc@QWgt]sUj>$lTGAQ!(dHR(C'HYX:nc@?"h4r969h./UdBJha[FbRHE[BJ%ANak]67E%8]@q//E.Bgj)lY\i$\M3`\9.C)F.%mA2Vqj<<ZQ_]Hs44r4["-a7/mmO0d<L2k3391TJ.gia[2ATSU!M<G?QSe"m21t%O0mdd[$X-&Sief*@u,uF)>1*d$M.$%Ng+=e6R1+jkA90/FP+erGV+0GBXr9GC77?B\f'PFkX_;qNEQp#c?H^G2<)_[<ErDYOV!B4%N1]^BAO.4jp\#@'1:`'UK;neT(aQ36s(Z^cmahs<J$9igAbGm/"<?A"?qk1dlCd*)m=W\'m^eH?U?R^%OIM3pUHQ&oN&imO+rn2!%&W+Q"7C$$500q)M08o`)RTsSM04M!(/brC@DVr*<\SUh]/\1g?&Fl54D4KcWo>/!5NBC;Z\$$!id_!6j[C:Cc=Y7=.pKQcY+h;ll%I)ZfYhI\=0?+Gd0A'(jVNEG3$6'%j+S+,Y74VLHuF-j/]nQdT0k)KTt]6V.`^rruli`taVrF8*qoHe@H^2Ac2:"5C4jniI2rEAHa%[j"n_SoT02NFF0ilYULQj\t!!K:PBC^SU=7gh&%,#O/,@H[=UB&!d$mb%?+/`inLS[K/g%3_pO?CDR!>8Fc!um8-87d[,Jn,F+;c%^#")8$@nrG\ZBmE]4#.!f.)CliOSQfbgi&*!r:>\[eG^GDa<(20Y+S1>:(@<j&5`rAGb)`V#@CpL7c(0Gl,59"T$XFFo6@L%<P["%Q?2rL),HpO9.*5l\-oAA<,!EA`k?q@`)_5552Pl8HH&0@$USaU!ZHo"@/DIRj0T=nq/`sTEaSME.c'!%'lNEk'BhcZY!h8Bl:'^N%X05dilF,aU<*>0P?0:a-5[V(X`J84:..kI_FuR+@ZN$6$o-EhSn#Bgs4^2'/O]Pd0[-@cBnD[[*3MuPdahNL]'*OdA*S&B/[!>nM%!`5jP_Fi,n'jmVSlZ?QC!OXnTK!"a<QfC"g5V"^g]qU=S5l:@aU*%`FTNLCI^>n&$NJ5p^MRqU7!nnU-o'sZ`p>[eZTNjo=Dco=+%MK;a`/oQ(%hE[q7?X2^EhM#T<(FoCVpfI1OdL0_6cL%K`-U)rY(0;Cr4/Y8*NFdJ8mb&3S>oOsUH"Chsh2*-S:ph7!]DHoM(@DX)%pZYZo;!%93l\5Hm5CHNO4akuANZQBL(XP^c^TdI]=2,Ns'`uqqoQ[LioEDhtohs$2!.@O[QaoSX!(@rM&bn'YFBEIW#+e(5?aeR7%JY#!k*>H/:U?7d`MqlS"S`WN%KqlWGji:S2o)sA\`-6T[?LMKM>6JUbma9WRm\VN&p]0,FgcXK.jun:PDSN<!!<o$Q?sd72K3KE!%5=sY6e#S-\d$)q>hfkoV2,Bm[#+9N6'^a(W?bapMbBJD#/)8>Dc\=C*e"&nq1#FXqJ-$Dd[er4hp^gQ^MqstD7hfWZ@Bf&3RdJu$%p/+/LaUt4,?!L/f&&2I:.dP9I4a17?f.N?tTO7PabL.q_a!WVC.]dHgmQ#i1HMrnW70K'fJ-$EP5oaHF:Q%gKJF<&"<8gbGVa.^m%b:+6QA,4:3$3g9AO?7EC2fYBnhqL6n-ic.eWX>s*[!K+W)h:tDDP4]*G/=6J43om5\p%G905hDpiqE&m&HRbcBO;PtqsrM%)$8nh%#^i@"0AI#^pAq3HU7HZ,\+Xr"/oGnu/SLf@n#qeD%Qp?oX0E+Os!]ttH+L<#=8QWg?;Fu4.]HO_YZ/K;?5dGEXf\Oe,p&\>Yg(&A%B:##AYG^cZHMVDQG!.]QIr@$fpoOeOqsF@DfZr_uq:t/t@/Y'E@'T2!oT8qbM'"%-o$HR1noD%B2-fZsHMDrT;fC*U:UQAkSlnr7%j[$-rDTNmAo]T4bq7?E)hXYs'Z$K@(\D;-f2(<]J=M%l(2%)Tdn"j?Jb12^Me)Pi;pLZ`cGX"@%!/pces&)Vg4MUdl/bZN&cdV?T%:AV#bGsB"BFf&DCe+?oVMZ$_*1q@u*m?aFaV@Ph]<pt^dKp5d2UKHREUbZ%3D0WhocMdTEq7XQ$q)!PI?GBX&SSWX9mI`AEc6I=K%kBqCeT4^Wc$\eQ.o>3FM*Do/:r6':Kp1pMcq/lD#>@!/*`*UR7&W4Erc,A>]m98%dH`NXgkaF<A/l>MNqVKY=U:n(Mf<_232,h2c%B(hW]D!c24O/5Gb\$=H-1X%@Vl;t7@a2AP(S`0LQ(eYsbJ1l$=V:*u(2EP8rc/fFdB0jfaC[Dk(Nnt5eA;ABlhD\-4MqR7T>66q"%Kec>GZ;/*d>7agncdKgDB;oB"_-;gAWrI]i3n\d_](iScI61O[n`14&U%4`I"j0gPb,GnJAJ&NGD/oNn!p]i4ru;#\2^\D(h;.JS%Rm9F7/o4q']u;()pr%^N[[[L"AHs\j0%n?n^2m]b>$kTB["&4Bp"&em"kH+MjL23M;!Iu9+6Z&QK6'S['.fP5p]-$$,g7:cr.%gr%JYG*;bN4-K8j!_nT]hGAqiNgK!N"Y,Z`j8LY#4:Zi+innjI7k8-c:8/HDcZ1QgFV!>WCPuKrETB^3mn:g&h.fC<P4]D3sJ'gSr_6%U!l6"g^i;"kl:#`_D'-$'#/d>!Alu8)'@V'/UTqF6TD96;AXM%3a2g]\FN`Yn?-(3!7>%aX1MQME^u)hHm/C?.)k^dd0-]9$?I*4%*l-sD`30o)=0RiYS$:E!elFeKqZ+lSq:e@]b?"FTq1hs)\nf;<!+kR`NlT6H14s)2@:47np7RZ*H5$$h"LQR)p\G;I/u.MHXq>nH%?MorN]9%',P\i&8;WNJYPK%B/.i,0NAXJCXjc>/VM,$5eluR3.rb_7^7pc.P`9f]5+4[udf*GR?-Z7gH*KM/Se?QhC3$1I.)sneV%]=o%SXRP8ZHeF.f9LPt4`bt^B4VA:AmM<(;pQ_A_Yaf:pPt<\lB6F"7d`UE7PkUr"f&GbY.K@s0VL'SE=>&-FT5(u<:\h!B[0&+0%mo2H4pt3u=0(\13rEZ`9d@5ZuLWbENjscSWVpdpS5")lXnDhn;F<.&\)/%<O?>A5%.MKO%':78\O!a.\du%"#5:qmCoeMdU5=E"N%p#XomQ(>r8]h0i>??rU!qc)0]-H:/K8&LR`8f<D=0u_MUk?R$uZg@>7mDH<=qt*7s@`FV0,KtLPotesHT:8N<Z>jn?TWqtg0goO.%9nCeS@^''T6H:[%eV0cj&98R<FbGsZ'sj(L=Jj4iqI,<thtCZ?2fZZL371ZF%OccC>*&ll4a<a5E6S4M7eX0PgiVLD3'$`nK:23R%'HZlKmnT_eWubT7HUo,l8R#P*f/4iCp2r#bf7m9g]BG<HX]0ZVdl<uI_2ItlVcL3nV+?!NnbpmjPC$*^Z4G$k`I`r#rQC3i8RDb-%PnlP,>WRE0\`egsNZn:.8'oka1R.7LE$`loGDtH>QS/42oh8:11/=F;Z2.)#*/mrE*k&=no8Xs+*,FQ00gD8%]T\X_2[>4#2=6>:%F)&(=.:tuV$q:m;GP>h7`,uSZV*);4CuJ"Gr.r[,CQ.D[3OIXhlsnAn]oL$$*,KP#@F%(MT0Xqkp4Qej_VkV2A\+<l3g,-_\4%?H%-9aG4_GC&Z2MQ-16Clr=n$$4'T>#.7/Z%AQ0-Q'!BStt>KR-7^W/T1,@1[GUQ;c1ASCfVcfGkbkWJ%1+.bq^.PKh56P,9,VG3gAt%c&kHc$[ZQ6[5=6ZJ59!OT<@\O:7sdu"9bT1$be#XiY*ImV#i>rbU.AFpZJ=PTRY.KcM)ba\",TF%OQHH,gf6eb?"racZ"."p/msV%X8g;fLT*N]mqq"fC0uR&SUPYNhtu1j^Mk9H59o2YYVZV9ikEk_A!VedP%Pn<f<-l82[:r97m4j6$q&7Ma%)I+g]Hm[+UO#PJ=jIg%N/b%@4q]"NQZ<ok(cNlR&X#;]r--0&PD;`&M:Jih%Fk=47d+6u/5Hl7pcdUSrNFsHga=E\[R1;;&2Cc;QmeN8V#Nto$0+Yo!p-7;%8IWNj?3A^IMq9pKfqp\KOTq^6NE_T,V^m2ZG,:bJO2OCFe&E6cc53CS*V7<"55o=qj#g`TmCJ'J1FP<I@M9Wrh"_rNjj7iHVr71%%H&Ok^l]opgUW)Wd\/:r-O^LpKF;_ck'L;C(TXa@EFG'r1(.LbfSW>F^e57U"6`)M0r@t4L9<9J2q_t0LGF--d(G'](:'N",oD/Ro%hp\_lO0"4nNE9OufeDt`Gq:r3MN)V^lJs/:@lqRGH'O=lJB>."nVqJ-3K]g3)f&0<Zno#kP#e100mfBbStqn`m@J1/n'RMDKlA4\%l<#,R(AY9'Sl0%N]N,lj3jQre9HA@D>l>Fdr7C`AS;=eXOJK7oT96Y8r7oe8CE=D]H?,#-(Eih4R"IloJ%8X]_gCkoNVP7(0O#E8%"UQ+]B(qOI0L`KVQrWj`]enFWZ@>$J7e;LCOEP6fB\2iYHR8'lpb&-)E/h\VQEX0'2mRSk(pJ/.G6[G:3qW,C9]+8`AHaEr>ALB9%?"#ZUK\1?gGN1cI%_j8"_s+".bm=5XC)._W7*-(ppJnQoh8sk*\:sa,j[Y3HB6I*jb<[nRL)Ja+gQ@s2)s@ZFBBCcWU_Q[$E-12i%CchWZj6MkTXsT7M-B.d)ftrsc]5UrkgKFH$#Eq@M&6h-KN"9Q'@gna(a2V=NBIqC"dFT-pAerbGbV>G.N)4"uFt7_tGt?--MVZS;%h`G!rCuJ&gm+0@ppM(ue+59O=CD^jqR>.[n*"0)T6^KCC/`A/%()g"=p:a5.*=7(Bk@G#Q>A;tWASo?So`Y?!BA_sPK9SbRK-M-k%=W$0rL@B;Q:56bT$"O<;(RgN-725lHXcm5]GhA.Sg<t17F;Ij#K2tc6'JM`%s17mNo&I4.\P_o5;Td*)`62_Z1*1&lhUa=S`fkf[%dp#%EP30)lc%!HWn(p_+8'2C["Z,\ch,j+$..!8/+uJuQ2D)@WR:u6t)]OHBiis1*'2S=+)/tT]EjB3PD.$j;/k.RZ%G6%9*.^1N%%A(Xq5Un05*$AL`75eU?QGYsHKmUVAT?XZfZ)#B;T>*$61[ZZWf$Z3X)0D#9HueG&1[%:`L8N1g$dPE?Ze*lOk^kVSK!GP-ae9*f%TQ=]Q:7jliS3[sJcR4K#3.oMA/N@k_?#U!R,X.h?]&3uXZFaTV3HW+18G:LPEp/*2kj20V=`W_X1[#6sCjZ_`F$m6_L0<-OgCE!@%n"0ono.ptNIZ`KnjkdM,gRE,^+nDIG?Jg]'CX8<elj+%Bklj,=9sU,@IuWo5`IFf=7!'?lZ5MJ4[MCV9//]Xfi`tLOBIl#^s+gnA%5'&?(s"`Wq,rF"TM`Kfpo$;\''*\h0Bf'B2USAJLc%XV(pF2S648/AAQ9[=D<Y-bXI[`WpbO\l+UO,KoPDLXP>+k2!m^a:*m,m(0%3E]aOfp>hd`[offHeHD%9,a;d2Uth>VmZ`F"K^qCVl!t%+kW$Ibs:[qKT/"$@)8@U2sFSPWOV*O*gr'4F]NYD/pN;,D:0ACS7+B4%TG??0dtpsrNBFqZ.?*<Mp(ad=Cn!ZO%\8Ri*%"1n,kYHH"JY-]XM-Ok`."m@0X=cr2\57p&F<.cP/eAdF@#,=G4f.u*QIe9='!\j%5;d:nY^PG^;Lg:b'nHUcr:e!r6PjM8oVHPSi$ZV+CBpIhYW+oihq4G9IqEZ\n/@9l[cbP2f#ibtB$)BY3N^G_'RL`SCRKufr_"CJ%GLFiOdo+C-pf2Yc)k@1;I@!/VjTORQDeoKM+mQd]bCFt#\$kdA^f!/+R?(E3r>6d8KC,KHPF+n.akfR%2dirSF%1gZ\6i@0V$Ti5%nsm,?B<TlWqp<9Q.Q?GpNNS68c[#Fegr@P:G]NR40tQ#oQPd/P'ul@\aE-#B54ZWSm3J2D.K&JGAXn51rj]%3RP>MDlbbK+g671A%7]&f%;[Q3[o?]Pt),X]b0U4j,.)j)Y/PLZ<QVN1`Yi6RkB"&BjK2br6\Q<d@/AO%-6F">9bW&so>kuI.c8JNf-3,?31+O-)@2CO?%1N%D_LnqN\Ph]nqD"@m[=%#M_d^s#OFC?@Kg\g$Im(:aW6:>A.281foL@9at+u7HU#5H*$ft6AYOg0(RKMOt)4<igJ/ZA\C]0Y(5%<[/K]e)fae&s;^@o-7\`mBdClS--,q6?.%U>nT6:O[SfrH#3DmnM&7/pM_06M;-X0n;`&R'+Gk64.K)CLNLdVkH*,VLIjkf9ME/l%c=L@oLS;./N(kC8D-cYS(*&ZB2q_M,cQ0$@@JB'kkLE]n/hg4Kr!!ar>j$T-Q(=,VD:Ja0M^trIlVP#.]H`=Q]#`Oq4m.q<8,'o[%$&d-"%l_c/A!?)nH1-?VG<XeU4&eT1_i<?C3i@?bU6B5U^iB0hSgT-dmLPgG+3qP=MCnkQ2]p?*gehm(cM;E&:'m:T5+HIpls'>K%S.Fd;(\:e\_+;_U$ZrP!Yt?\PL#*L-3b$b![g]SjEb(NTFL$BZH[7h)To_>Za0lYg1H>"60=Ko04AUQgl&UsMB$ITYXc1Pp^%]='%f4`ce!AX=tB1)@p`R&*D%o_,4'6,!YB\raKS`r"uN2Y2kA9Na"20S"53Bhc5<t*8JpJ[lO]"E$UpDh-@^,q\1J4Vgg@Mj"V9%o\!%%.10I&C,OO%;j.84l,ul/`1ErfU28dR;o-ufp`m?XV#oIFN(JgCof--1nh?hUu'BA,PC;6NZ"hCf_dL&T75paOif>uo>jJ)/f^d@%>7$XY$LQ'52f8A"ThZ=?MiHolC!qsinAdfKVo7HhqM9Y)*1AqQ-6kWM-b#N_&]<DhR"5MZf.p7_I.c,s;rQ(F)nVlcfuY[@iV^],%^8Z'-`@XHT_G)qlS2M,-FU$5dmiP,To8G0C4Vc6q4r/0f#50j3.WCrN*0BsVg`S?)M=>D4m!`gWWaWa^$QfVG4W#AnN/]h.,+l],%H0[O&)4kYa_3p9hb[a'mi<3t&^b!6_(nD[>Lu`.a8g-43(*3'%%n6]cSDG1Iaj/-',8XmjmuQpPl(N-=\W\$JNlo&uc'Q\UdMF!^%(CSoKgX9Qki3K_\]Y)tb]I"Bg[X/39=,N9TVb15sfife$T9+_QD=Q[+O(>_`D0mlN-L?hZ7$d2JG]S@H%pq=p^p\:&a*YR3[l`KK%1VB-:&'1t"f4t0_<>P+&m9b=aDIYHg\tVDc]N3c'-siqPiKoIfE+[b5P24Do_$8DW!_0>]2M&H'h=-$?Q=#B;PR,@7>GtLW^-K6O%iPq8r:qViB/tJ55rK>uCJs+rU'RudfkDKidd#n5#iht&]WZTTG!:l^$hY7-U4]X1B=.H%s6k:hVhi-=VL23:3;"_aNkGh&6`Ee[S%?-D=s[$]'[#%bu"6D*]m[j,Y4P#a[RC,'DJrR`^2D@[N(.OUa%7&:G6SAM,rCq<BlR,uc"i1n4\p0@D<<?/?;1jGXJ3I@=O9laS7%aEaAV1=Js<'1UqM%R$:B)mU-6F(<K-GOFc)]L6Y]^:lU5,3R]FT6oH^maW>9db)/965)N#<_CD8C=D&^(LCE/j3GjBg?omI!kNB6%hT<+gVN&JeQ;-O"&$VdIo?*s%b,+\n+(ggT3j4pDLV1iu:$7d72ac`f"O#H347/rkVK7m=SQe7TCc\bs`h!_sEAjB>Uct;;Sg9fN%CRrIW/*E-kkES^'=rE_q2P!p>`Ha)k4L44a@dVb5F^EaC!U!_40q6H=Qd3-cF<9+W?:LECr`leo]MNX@Ccm&&S_*X*iY/l#+gU@F%`m8]be4eP;UJ6`];g=193e-%-T%S3!;/GN6]$[DE/@Bb9dnNK?ag10DAlt2+B@D,`5]WpgRSDtq5\0<9FC)!o,CA?]cDL3UV/ssh%B@!IH8fr,WN6EN9c7>7,D-po$VXl!dj0l&"ACH7RjI/FoSQ@FL^jUU::B7k*90G$2FPSVD0uh0<R338ddG<i#Nc9hNTsY's0'7Rh%SJOnLhSiIgeHL78iTN,lAm5M(RT+=jM=64=/AeYWBj`58pgu[9,;k?V-rgiDG.EJ)aU9E+]44&n5(-NoH#9>_dP(]DC4qjY7jaRD%7c^iJr-dK[#p.j&"!VeE/*;?/h#o`RhUgOCcaaDGP#$POS\Kn>#dHQ5p6rUD9Wi>kFJ6t_&)Npp>]_o7LCT&(Z!!8p6<nRJ-DG`=%q/np9&]K9Ym_\$7'n`["A%?NAliZs@$AmNha[NBs:NXl^pMb"q(>HCk:s#p$[jXPoEiV"ZnoPC0mDT))2#!#V-dn!bY$aAA*ZFqO%kE&4nG40>p</.+H-B><5Bh0(P/t9olI7&L%:(D?_(=A8>q*\lQ^4sr1Cad'k*_]YY9Q?bXHT0I9r,tG5c>tqoA]W\(@l?6;I>8QO%0q")ZR?p62/&'&T8)f`?1S)X/b`YLYZUu?S`ML3F153d;llqFK:TP#8J_cl!CE?>hPFVL?B!@O1IjuR!<ZFfoiVEBKfU*4bB=Q30%q3(;mA'IHb&GNjB3"bAV-/:S\U!.pVe!QQ5miLc[M-Te*S+>]bK-Ask\RfU6FF4`>-B\9+=/_%3`b.K<YKc?-'LtqJSnb[%ZnkiK%Vp@M,,=`GDgFN"]M%a46it@I37"u"LGgZ7h)bFRBq&,Zi&lK-N]&CrWYOoQhDCR@\\`%H&H`JO)i@_nb-[4@j,P/1)SC:2XA&Kbe%9mLg%9Cf^TDW4uJ*pl+RQPASVabarG)fsnPC,CZ&reA%hVjcWmQ+8/`);@%HB<U8-CT@gr@rc!&i=g"-$ZDU[K+O5C8*8hO&o4+g%]X$9>4m.^21MJ\hl\l*_B+Bd+fF$Bs'Kd0Nhi@`IE;$Ck[PK(Te!P##b&@$9kcSu,oJMd)&Au,Jj'&m<hu""NEOZ#mP*fR%Y.9kI%MN(>?)T`6m2f6$`MsnU_DW]2G2Q==s'rDJ)`:VK!c/#:i=(7n:fH_g8:>o'h"VeZ?=3M=<L,:,4'/kh!P[dh>Ug9!(67HNdfTM>V%iOuF)8G6=_Rc@S]qt*%N_=PlsH:#5^7bF)B;:lU&8hp&\NDg%CYpn#Wj>9'EaSq1(M[P)[$dO4Wj'/.C]MMbWj#,P=i!E>bXQQ5r%=%dkMCulu1"coLJ22]*(2BShGH<8kdI3`-FW8(aF*m20er17qO:b6-l`F:!;LtamB]?Kc_>>FgLk`Y6Q[d.hsd46:k'$'(?a+0*9%c?!WA<c[9=-.cq1IS"eTk?<6Xf!4OOB>TsamU(I;;U>1@jXO>cF"a2K35(*lSgEM'qAOJ#?!=]<F_6L'qRL.o(;"NmF=5mm*j,>#%r[k5JVPa$@YInK\*`.e,G[p^,G3>AG%F91/T!P>U6(*5[Jg1KccMd'6?24P-5&,JrrI?f=J?jOZ[$1)C?NP<1PK-rNT\?!tnj5:^%Ersj'OV`jf)@2FC7M9<NAG!S$Xo$[*p0'9):Ih*^PS.W9Sm`t,'G%+*$#X>,)S,_o0M]:@AaP)X9d],hEirWjQ9/OLNs45!a-(LL%5mS&GnP;aQ$&]G@J-\DTU9-+uM+sqhk-VP]Z/iO%ar,g@&P5#fEGn,N0m$_\ZTOO#gKG>R!9QIjEr)lEEB?":IB]F?WT.I5C%q=c%-J>[b%OEK<HH8`mU5.X&7H2ETWIXtfiX+]m@%Z![`Fj:2XA`D93[9R7pF4jFRGO?:iRHD!3UH<J5R`sK)`O*^j2s@XF36su0$dsk%#J0UcH[P1j4GRts@EcENX=$-^HHO=7HgbWn*f&*O%Udq:Z*CVNCs7Bq<g`ZLCX^@ocuE^C<YpdJq]&YS]EuK$c&kAHK0oiq/&$Am%k\<GOlg#P/3qbf)at%!m-l-p,$oo3BZ%6;,r2C'AJ&HOX?Jc2GNftcPBnPr"VM%\iHZl$&@#aTm3EG112b,]jTer5<ZEi0Q4m*r@%2f;-"A=q9YWIR`ln!V>_3p4XM'l^&?F6$K*Cu1uN`XFdDQee:5Z"s]YSCt:NNK(XLG7odm^#(2b-\ZhD9UmKL,i?U2dY13)6VCa_%aT;m?"6eUh4[js)LoDa`<Pu"sZ"_7PEWC+OVp>EdO.TbhTP]JL'Not&3?0:0@T-k>\lcpqL,lgUeo-4R\P\DcCt^F*a,gGb!06,B%q3#6R)te#gj=.A7rD@UT8mL\I'VCLo\\+hs0BJ\e7^f9Lj`B:EohSl9k7q!as.t,'De,?XV0mBF]J:Qiq-M36<Y?dl!H3igq7NG@%o=pMCn:'H/?-3uWrlQ*2j`<g)&?-o=aTnfolVORs5.CC5j(p-Vf5E:0>]VtGC:8KfS6^1`2GLI2f(34_i2D`-Nn%,'qRO,aFfXE,%B1'5uoa?ceq9Ho+][tJBKT'.6r6C%coNo:/S36DVI_e*5Cltcdme$sMaYej#rFdOE?T?ZE0/MJN(YlFGq^\SVf.Zo"^Su)Nn[R1(%\3o+7<%#H4cZ>J*:Gnd(?GGD=B0Kro4/ilOrQ$qnaQE0?FK]&UTd-U#F1BgTpf>-9:S@9lf.VBKla$tFid:X:G"l,KqTXC0h]-[n%_r'brg^4qt3S`p:]V&`gd65slI_glI*Z:qUh<X7;TYbU>F5>+qot>gLgYhG-qQYH@;l?N1p\G%DZ\ZeJ9ma(9k;nUe6I8l`m.^>[%Dn't&UeZECT-Ji$jAs$XF0;CQf.WMAlpeEdn+@'Q[;4jaH/.^%]K/0kI=*i@io.P2Dt^gKmp#`;cfX`2f.VB*fRLBtAG>p(Hh'#V%IJ/$dJoC=O:KH2Zr>CamI.$Y8?>k#U,+/(1^Yi>pB"3n?Jk[.Lp[QLUR#ZHmhd#U0)`sArEI,Od]mc/M`TPZ'Zeaq+P&0*ee^)GV%Rdj]KPJ'(sop[9YD/qSUQcCGcf.Y4iH2<*fr`nmaRn)?$pj;tVjh8rcYFjK?aLfit]@Uu,4]`^!qG!RjDr0dB\0'D<W\e_@;p_Xq%!N2G^FK_<t*])T%&M#d$]mdd:SOR'\;r6j'QQ@N6UKI;]Vqc#HWLWcj^WGW'e)'ER:g>6SqTZ<md!i0*0LnMt#'n8FlPJn)ROa4N%hWkuJ&8PG0g$\M@^=CQI+.MP%^E=n[qCqNNf.X391Y]TlcB35+l5,gn42JUZ_8]nW(2)iXrIU#]i@3_`AS/kC*(^/Z;nF`pj26#B%PdmN=AZ=LpKm(QfVQVraDnL:k/\:SAPe(h:hCLb,IeDG:nfitE]F]al$*Y*lboZ4pmi]K+Yh85N@MhaN=,o)rOhSa`*VFbBTq@CJ%IItgkl$.)K]KMSPZBFR(mUnW!lH3F#e(;#MQQ?oOqh%9f?b+61gcm="V9@W4;Z*SDH*l#pm%u"IjmqWu7K'5.II)?pSpVS;/p7-R%C%(6IP4'I+?[eS*>M$L?j5J8+DIW;#V3jsS^6a>AI\.q<hn.!cSO"oX\[p5TM+b+-:8=#4F%`.kM2.k[9i=b.YAX:iI350La4mFs%D``.Y>PkgT*"r[WXlOe&g>OO:p(g`?\ufq`Mk(N!p[mOQf5#9%Hc+13Q2XD@j:+0l1GUPkI`fc,mGnk7,Y$5=\FPXUdd)B&/>?+8%2EV_;0eO`dFK7VS4]LuBQ-K5=c+3t>hBTO.ppol@<f<:s5HgEh:[[VWQ'9kfa^NVuYI(4Ff?D[sEr>?A8R$*Jib+Ui#:m!EqjWb_%I&nU<jA6\jVfGs(>5etIOf\0k.f8I4YPAPc)&"t_^pKX*SFTXdMpH1OjbU%54(6'3$Wbk1lXQj1[^m(P`p!b,q6od6Z]cE2Q'/`N%Q7\>T]cAL_51k.q^,jC).Bb*j?/FA>kXu`biie!R4jm9&E1\[[YpQM$>J%AFph_lk9#ZRNe\1p0^AOMULr>4rC6loVBpWUB5<>.E%qaq5LHhA)>Xo>-D`\6;2LbugT#'7-B-#R'CA4X%#[kFnGaUjf(V$-T#'\hlfcWlY2,c<P+r'8(.BkITQCo#-2EG8qC[ITK*4QP@k%G<U3$O((8fqp:@:MJKtq&(^(XMX`Xs!U^r94hBeAk+dn6_8k]Mq1,e782'@[Z3M``dSkVhBVB1,,t[2hS6"NqcIC'.Bj3[2h&M2]%=i2N+-QFHaIIhg.OaoY"g@j9BghcjM8ZTLHGs%q`4DhDX9>E*ZGX'DtL/t<'7;V.W,KIgq[CoN0dqH2`nApf-$CAH0,dYOX?QqVG%8s-#<6HPX+\]QTS>[g:bK[s_ISC/(s46t\HP+<mbAQ"4SAsf@"=$uRHMcm7W,4QOSjD6F=fu<q[np8!ICgB[]H1b6ePtG!7iA)1*%)uP'_.-/-)8,`AEmHpsn?:&+'s'f9K9j%QFPkI#_'>10s/X.=MH-5iWg8Sn9CL%>/)fTh3q"RO9>pq)#0-cbnm?oP-G-`-sM7k@'%^1'lk*r9=ZHWf'QD]8pCfm\.7aF7i*4Zi<NHe5C1"pZ2sdg6=/jojoQkcTO@M((#'=f%T0&E6XnLL_-K55"G[2Hdc)gI"k&)>fe4%I[+0@8aaEJTB[>[q!,_m7,#X@c&XRp+Rd>+[HL1EJ3C[3;<D\bW>efJ^0g%E4[UEd&"X160gG..T3D'7U@]e66,\&F5/9_X@F@R>%(Eg*r3,TIfeld^[o_#Ydn$_qrSG[Q?9sqd&HF$\#rQ<a.A*ati._E4o%aHf>n/,i6nT9b/M;Q!QeR3bh:0hXL?>^!j<KNf<j"qZO%qd&<!9@]$_[]li"?]nd]$F8);C!:(5AOXNJ\:_8b-5No#$[c0sOk,1R-7/pU?sDaG(CSEWA"ams]>.@8F3q[[*$t8]r[CV[#bCR.%qc47@9V^JJR!5BI>C])PiOuS@[M`O7[W.aQmU#@>"\m2CZW+D!Q[Y/d_0bFKM"1>q^/3[bD=aail42bK;=r%ZZk<*1;(0t]b0\7O%TS\bl#R@*0INn:&)uNm5?D@A^%/FFpY>h`k'[a%hf/:<&U2=01<:1tA3,ETi_7ck'm2sKo>PF(<\9l,4`(l0H937\e*%+)&[DFX9%"0f+='#1?a.aZYMB!D?maEqX#gPA")\@&i;7E/)rh;@-#^?UlJdnNfo86h)#Qua8h95cGC/X;r>&;uGIqS_QWZO!M%S;&e98H%f7%RW`B9R7LIsYhD#T3#cQs>2,%T1X]V/gMgX]4)9!T+F8/T9c"nm^#[&1IP4l(,Y(>Bie=3ACS8*udQet&CrH-@'7AnZQabI*F?T5T%"@g(Mgs.geY#3B7Fi]XinLPATG4WVomX*XLBfg#H-r<&SLK;\+3Agte/L@!)?8`k6_&R933Ouk;\DOFS'>)"^)7GpE].$igmFokQ%=qu*J^nml?HQ]&X(NmW+Lg6WI`^!L!^PmdhKHZCA(Tc(cd!&_[D!miA9dK'>]8Lg;AU:"?YAjM4kX9s(^+EVQJY&0Nh'\3K^%,Hm%"OD6(#Tr4V#p.0ijX(REVnIIl>t0Jf1$L[ljctrnb$$&UCqa^IndB[9ljdo_,&HGVg5H;QE@2@H-4(*R`gJ;e84H,Mo9U%5C^q<V%%q?@e@T*5G3=I"FXDVE"Fs1jm1f'g-pO6ZhIU=lTACA2>J89$QN/BXP`CdiRfHZ8u^@LRM9oL'i4PE%G*kDZ('Wd?`"NuE8+X-/R%1N\7=i-cNJUb].\EcB]2h+5t"SOT8bQ>TsjZ7`"pYnZ0X^a>Xs\DS]c)aGciQ,PAQPAZml-:0OS7c1BUIBYUK%`LD=.7,aZ'-Tku%:E:`[@<%sG5DmE;T,op0eVt4M#P#(<C\@t(<?"S"imW#0@l$1Y=%;0o9lu;`-RD+%#0$XfdQi:jGHYCg94`,1Yp]P'C@2jd&k:-g%D\H>d0eT#]?L@EG(=j=6M;9s99+@WK.m&g&OkP6/KH=LHdG=b_dM@m<,OstFLK58sO1Cb4>M@3Ee.(o"D(<HCA)W]mSoVbFKL7$Q%`o?AG5+BL*Fa<_#)AES86u>LicXr=8>'_t\PJl(;U8PM]\&`*S/FtP9^ZXi*P]nrpit0i3p/Xk"C5kKXP_EVl[XYAd?R'%IJE(`P%1o=M3V^'IGKN$(E+1CWtBOpf!efJ,N?Wfm+B@T>%jm^!Ug`GJY.Ermq5.8_H+/XkOp"f!@YFSsmn0%.%5h?A[2od1gkB`fih%,G)%KTLQ_B:Crdf5C\gZ^Kfsq41M184I3+M];3QkBh65462SC`+G9Oi4A_m*IlV&>KXWS)K;j''I%N5D"[PFhNk^@]>-;\,R)i[]4/Rf%^STPS#qObGljiI"l@!\7U#cQ#0U:76@Bs(ok77=j;-Y`?9-gCAPnfW]2@AM^197YnOFQ+$o?CWt5eG?b^:(e`a#+'dFV=K]<^/4f%8-k3UY?p#5YV<S9.sC"74d*j@kZREj3rLuaA6lqTI]EsnJ',7>KtE5VpiTV^4]slrpDu8",4U'Jr:Pl!ipqGRZ4lErot>b?jQBu"%4%P]0c-euLqf+"<YHJaKNuq!UhS\/'Bfl961tk<"PO.30?Z*b6Q-PWsA8EFL#U4O%6a.u#c$^h7S[_+KmF`gOZ_Kf#[bm2+SQfC/%VSAFM7H,J%CsCgB,%7tL2c`l`]V<FU?SMX(Rnh<W&i5%nTqE\e`epRmcPPgTZ7\Q>E?&?bLtohuosX@*&Dn\ZT)'KH-CI01lu)("%eJF='m"-&rm].`c,04&)!U(6P-ANQI0=?[pZ6l50/dj<C3t`kYOc>uoY,ED`(X(q8'OT&lM9#6@8t1KrZnf.?I7[ZZomI&DAUs<l%2iu_`!=P6j7':O<?P5sm0`f4!ful;8SNM,+)OFm6lJ'=-9;9ud9*2:DS2r/p2Tm9Yd3Ycp@7!khZ;'Rt'dm5mVsL=Km!GPi6M7**%F88iHUYB&?oBZ;8JAfgZ)'@gZi@&>.[astt^kuR/kZ3OHggVbljZ?LrfC$d6%>lC0&2D';KH+<AR6rKj=C8m7>]OVI=qo,r`s.Lk%;\"U9/3:0+qN_lm_uVs@2H)\+[)3f+0Xt5?=]q)-f9Q-b,?Nh6G&p)^T9>n$h(n]/_sdT+m$!g1OLU,6M>>c:I2m--bcdjoW,L!k%#^&gelF=NL2K`9nPTD=F*pDCC]qhfI5Cj/Z>jMb]7lM#b`MiHMbMVKDn7_9eU+^B_Wa'DK:Z5O>'l)TtTFZJmYf(;.Y=YpB0sP2b%P3*R$[TFVb0?H8)N*e)!4s48TfSYrBK*5sjqOr"MkDT.O=J2t^VN+#4V]Bp]j2j3uFEUI0#VLG!D#5gjl^"Lf+e^V\JG]_N:Z'nD%)s<1Q#MSl_(F+JKB.N-tD2@bWgh:6kGZ7P+"L8eZf7!V,%.N(Og._>N,H1md>dBf/&L)'I8PR^`-/mr_3H7V?pg^_Fdi;bm8]gAM%6!njgrDnG&X$^lPrD<gqCrk[g>s:PEMXfDE)V!g@^?HA(I-N(biqG3$jFU&G,]u=aQV*?Mjj7t+MSHWgC\4HZq2H,Ro>3[/P-D*O%b:tbR7OTciUQJ]Qg(N76Np,^I=@BHZ2mV\;.cq\fcnVR=RDD$\Ur$;0g^.]I9c467E?OD)T:K$Sq'ijS>?nr]DjG'5EVUFc.O[`9%4;?f9-QW\lq2QPUbOX@j"dNjhbkGRNHoetBR^#r+_L^W21Th`@#JMuuBpTg5PcbgV[Fk;d\@eN"Zd#i>6X27.\Am.\%_oKZGKoiA%2L[U!feTOkE6/<WI#p040d1Z'aGr&t0-"80Bua,D^\;3Z>%TFr<77@WgX8MAZZ(7)>KD#tn`_&XfSUt5NZ[5LH4ikdkuoY2;SS9h%&j%E;GmPRl,KF]"A,H'UJpl/g9e^/a\WF+_7Zi6]0E#\8^7]?YdRh%%H92#*p:U%$QhFuL(lm([#I0CtYq;."RsjMi0PuS?3fV(C%o>]2oh/D5?Q(:m`2iXYWk;)N'bu0ZV5_ASS:g]mF\pcAaN[e@6-[X'54X[CJLNtP6MtpT6C=Ln.9`/SR:\W/K?I1%C]mqriBLF;j%BtpXM.(nnp=3qm>Xf*S24)u;fT%9Ze?tYhQs-5lj4pL"ei`*f0-rA=WfbcoGq]EeRp%!Z\V%a%K>i=CYKm5akjo&kNJ,;c/+H&`M%oU\j[H#3!)J7u]JcJ?(t?'hK[iZX$Se>2)t@C16.Xb$/u9a8gP4AIn@k223%e'+D1&*"pfR'ecZ@gA.r9W.n8JEM2]&/+.rP!`aZ%IK8*@#A@4.E([jcIO:IVE@gL9:kXK+2@suoDE"I[ZPOS9_0p;BQ+76cR)cN%\oDa_-8qNM+7hguSeeO`:EJL?@S^DrFS%/Z.pW3>%?,`@rLIDrKl08aPD*D(K@nq*6'VB7!%8s_8i\+ddEuO,Eh9"h:JY!KOW=sMK0ZWtF'ja/aN-ItSEiBC%p"+=$a=;fZ%PKZ/Q."nH%5*^ML%im><T=Y_n&)!&<o<k.V*!V_E!6b7N%%kuW4)/IO0sCeWceg\k'b@"djsEQ`2):^',C>OXmC^Vnf`0e/$/FD1P!C\r@m9o$%k12AtF_X=\YTCd3H1=reIA!4l\(=.j%IZl)TpT1PSZS=frl!,LHHo@"/>Qi!g"r=i(6\-@[?*s9XhnrL7:VN3[JOUo(7j[O':YgY%>I_`1-V"VsO<Vt!C:Q4BIXY)n$Ks4+F#j>.6goo:P*(8M;`*']>YQ7dR`O;24@VnJ#To$hHX-aA^&o$jS`GbmKY&nMHF+Kp[&"Z7%3?Ydd&alRo\TEq-,Oe3MbmUO@?hRQ]`T?Z^MH&B;W5rtZR>4X+MkD+-MgMD7Fmf2SQH)SG)9.m/#)FLY&O7HdT:CS%R^cuG;bTqQ%N"s_oSs,Ag#t'%;+#WrKfcaBgE#?1TB4Aj@,rBa)TNup#pj)JEM>dk.168%'?Mi9gpsh)aF/=f)aY2D]Im1Z[+[M*:Mmsf'2c$Lq%[JL2H('#(U!Z$#N5tVGC^(kDMhK.MIn/>7!_CA0PHH^ZrCl5NRo8X3GQ))argQ?=W!m7hLg+r>!H\eMI](c!t!Tu+I>37b(_/D"%%5q6fJeiep;+'(:*Z^0"0O;#iA&k;H*s0ThGrd^oKBFeurg:V>9.^LfG]JGFJ_R?;n-PaV"F7Bb.^j1bQhG^B?8DIQlQ_1]!G&2kD%eK22)e+^_Zm?&-a3C``p<=k"BN)QfPWX8sr+J]h.\8sW<k.VGH%;md)#EqsgDUf]#$^J\L4fH()6ZW4kN)$m]W9i5\1B3L"C\ref%Z@h@I'G?HW78kQQrpSf,d3b_S=K68,-:*B#cR/FV]:2A3TgP;@nF1lOF-#R4H+tmLI=<pL,hqs$M\B"A+63BYL#qn5T6fq;rEnM@%EMo"#(H1Tl(CWMFVPAD)_`AZ@ZGP@XBX!!^pg]l[HON_Z'02B[GE!@6ah(5jP?H8Q!PeLLP@1K#JIg&q.Yjjc4^8eu#2CeN7kjab%4JGIPn'Bg,>fS"OB,1C+U1l`eN:W)KE&qd&0XaM"8.S1%rB-C[a-gk3>O@MUR%JP$P*R6%$oh'a,;Yp6&COJ-N$ti=W*"&.mg!jC%H#cI"2k@X^(f]B.o=*mDqG]-opYaI7ZKWAb2<E[rYOhHYK56tSdI1p[Mj6ZYkpl83m=!f:Q`]cVZXH;GkI9p:[`/sYp6:\iEQ9Z"%L1g/P8!X\KARocPK4Y@uf6kPOA2&P=;o/:-%c%<**5#SDOQ."%N=8)JB:"\d]2JM]fj9Z[GA7ti5I+A.7@<ta*GG!ALs2"Wh-qZ`%0#-6E6cQVCTY.kX:48hbm0?.H[0)keY_P8=5QYj2YICW,4K45dkpt]bITL,n6[#B3%jTNq0#omGb>kiWKrjpj;S8%EAes$WR1]&u%"5Cu&FYT?_+Q"+e8O0Nhl+3!.KoBVkj&\fu"8#Q04*$oH]a2W=-8cS,*\fs\Qsm0u@.n=R:OB6QC?>'+9L;G*+6We_.I]$*IrLW/%dgZiTl%Z0M[=K3=`hTX6;7C3b<:]_s`PN/R^c8U^;XRkpR^nY1.Jn`.M5C[oYO<`(;@>2@6M3<UbJRV%-ToX<gtTQYTBGpVh`d2o%g%1GjU:@#]$n[Q%ma+*B[Ibe`,!.0aD+U&Rp-+Z,gh=->ISH9MHT*l!8`CYndPO0AOd7]tI:XX^OP&Dm[j%2n<osMZ[.\rJ3o#d%%P*rfp9;,"?7?<Y6$:84*ZJjP5E%CWfC?V[7RdCgM_:_^rpXb&kOhVkg29QO'1X$cNi[nIOILVonN*NaeB9=psQ"83HgfA4Akhi7s%'ZT_gmN0$c1)@WY[blN[n/K^ErGIHQmbg$dIUi3G17QR20WQS59TnS_N$496K>12$CR"`IS!QMe;M6u"\hL9)F%3b1D7OEV'\+#\%K=t8?`9:[+%*&E8JRb(dr6"YAOpI=%3GH>X7'c=3O?56?0O^L8$A.Dg<3a*^Ys^+*Y%F76`auWT<D;l&JBP9f@nD53dZ%8@r*4^s%.&5RoWQ5Z06ts!LR[#hAUjocZXbCr;as3eSOt\]]$5h%3)#`4F8K,^)1hWrjs(t2(<Tg-G"<Z<T@B7d;m57+sm:[uT*m*R=H2bB\%mo4Um``;'f6)dd%IQ,u5BJ,au?P`D127_58Fm=s"MFKC$gJ0IaYi^>ZB.canZh1EhIdJ^nCfX3th#3OUH;!g('&qap=Z_;I3D<sA%@Yp9R*TlKYGkCj(M'[qfb?4')%VFeWYs=MIr,UDFEDmpCmtZnpCSdf_MHi=/g^SkE5AtDQj\t!!K:PBC^SU=7gh&%,#O/,@H[=Vk%%FjIG!2>rQO1.*sI8=jU*Er>?).K*:f0<1mcXfB@p+EeBXtF,^%e*u!"qf;:jl]a?g"M=[gZM?L?-k='&@]U`BL$aFUCeGV)PC_5%k'2%5qh_0qYAE&7$-%\2(Lfe\9O_0$XW_b4AhG_D&*A%dn>nX(LWC)GI8Wnc&6[2D0A:Glm:i^G#UZ:\>gd"C+K#CI#<Mq)H3@!`%d2%(.ak.Ze'\LtKB0C3Ffj[_jG/tdGUbY2$lIfV7<mhadJUl?[EHdJLL.9l[j\YIm5odWEnFKi![P;!-TGn>jc[f(oL+PXE:RdIa%4B@2ob1TXH<&37KZO79A(*5[)q"'M($hD`k(^=Y&P@.Pfqd^rQ8s*InlMEEu=HR;[-f0cR9'*G,dM=]e#`5AE@5u)gKhB[SZ;*Qn%^W:`/(PtrFi\bA4b3R;W0n6mLr`]5!&%hY<I/B4#P>HL/HNm6B.J:*\VKnV\BNZtbpq@cFbQ4a_R?DJ)e-Eml/edk]FlA)A"\Mq;%`/+GTogiJeNI?"KWcRL9F3-Q]6L9QUU[4IZ&'A]'[G(`IYqqXC]iZbhIH;XG95_#4*!lD$\jb_Y4?7Ckc.jIp40iOrl;*lES^OP"%GFA_S"g8X:5p&.%KO)r0^9@G[NB-Z[LE=5SXR*lS)5h*]1Z[E:c*J*-(=&a4e.l\pE_/%"-`_2m#F(?2-VMZB5"P+GYnLP=9j#h:%DG*LQg"K+TPRe5T/p0n:CYU:TA4m.H*KFe61[EoZO=E)\Sp7*a5C,@VJn@^2/4dQR.oW5mZ]fe9fed9I@a`uu5FeU0:^U?0'E:Ul%ZE\?8+&5aXAWcmXC!(O70p2BHe!.u<-Q`9G1hF\Ks(n,ZM.CoE@BO=ee)Y[HSu+W55PU;8.C7g4Il:$SO_t&XV(#3'D*<<9ZL^2i%Ik"/QA@D/iC!(ZQc-#579F6@3e!*F1B4)DE85o6([[qQ/EaZ?KgsVFbc\.i7:"^m-G0XgEQF?]=e!.maoZnmZg#B8d1/0bWgNn<_%b/>Bkl>2)EdZf/8qWFBGm)\Dja3p2B1]%-.2!'f7fq#!&iL0jFb[]13hJ3U3(Y6[-_n=S@aQS\d3m;rq_/Xq!\a#9Ho9t;O#H2Fg%@GYc03(jT`/R[&SU@UR/pdD.nN`D%b/P`ke!B_-<-"<0_#f:)F<[)-YLG0oR+]]e!=bj6L!ueW]1!;V2A(<5O,pGA&3WsCT/iUG-%gNEBk6R3_.P0:jQfYn3g9;1n'C`c[W1jT`t9)mr05Q"LR-nf726'gJbN29$_O]>:<asWoRm7@.$S*peYc.\iDBifY2U,ad94$L74%01BqZ>5&3cY")Oo)t!lE_kR@;DnH()0+fh*L]?iB'cFl\;aB:d_AOaenK7OG!+11BdD)DRoJl^BMi60VNJe(g$W0WUIRb)H__3V4%7HP?[L<lr>jPbFgCeBrTQ&MT=!kp"%)2[BiAM'rV;M:")-mH*mNVp/snK.K,F=nbB7ahK;(8G,(<A[-@NBU`gmd^qjqS?Z+\EGYa%6;TH>`uuY>VIjof^7&U57HZHfa6Cl)3MX\YmjupD)TQXe14^)pW[p,fe;VNVMPH-n1Q!`@c8%DTE0@OuccEEQCebNt1+2A41,U;u%Z3*0SjFNha'0B(:Lp@[-;9t&giWLE])*q;nY=eRiFVMrFL6jd\X0S8S3RrtWXCjLqF(2&')3319+;>"!_YL4SATZch4G#'!;!>'.%>"3RnNh?]o%5*Ss-):%Do2V@).#Qr1=-kZLmi#>7bK,QN`'dAAaLio\b7rl8kO=9iE&KB>c8$gn.S`_NGqB-[c?BF8,:Lj2'a5lc%gu:Rp"R4k[`E=HtG[>NE&@DqE-r(>:O9%7_Jro&PY,G),Oq*,<3T$)jO@J(%Y,oKJ36,'!pl)469B;$]3/:O6oSfM*,u7LZ$k/11%JuWEneN#gf`b/h52CD/57T^pK,ZVca2/#@RAU6fY"JT3YS04SQ&p5o2@%od3OB4tg\sa37PWTX)9h4RqEI7tX%jY*g18+)H;C6#Z%5m"WU5R<sVAU9)4;=[Q=F9,C8`/>L>T[ab$."]":MNS2g#iutj#s9>aW(7i":-f.`7TXSCJVLHUl(h"r5f3R'W6!<fX>CY\:BU.K%T\EQQb#3b`7D5M\18uXPRT/5\JWhi%n0KNI?n_SN!$pKENSk$i.&sF>M<KS2@[RWf(I7Zs"WGcGK!VOhA/%3Y'7#HCI$I,A@%^nb%K^t9-i%tE]kTD')09@sQV?k0C`BdR>R4;`T0XW=7\Lu%#+0(J96!_>\2RnpiAHWHq%p;O;3)WJ714fcVKPW)W!^TW21-cG*e0@is%A\%jULCk08[`FUug&nE9TR[;O85KTuR0-oS14k%MdSsBsAq3(>nZ#-;<5]GV"VqdU)*7kr!fW;:7Rb*4F=aBr$6Bc+UEUNg;:'Sd%VIrj;#"SmIUraMU!?,8Z2#s=[(MS63eV^4*%,b-WVe*Z4MQ!LO8O004BUK9]!R1UEiJXk$19_s17o?'ndXT%o,O+]L,b_/WZqR=O%+NZ<J&tp>5'OY<D!?3RfXbLD;]EH+S"p\r]8'CO`TOW&9eA)i0&\J/8"(`\1/&E_jO:h6i5R:a0^eA.($:[DbJUf(5VDWs_.K^?9%5Y+-\?'f7C]HR@\@+1dTKY,(od)UYpE%!"4cr$-?,TbI1;C)Dc2-n$!68Lp-_,F'k@=3Tb<)KOC1uN'bGu5:n=9V[:.]G*cJ1&pg%+pCA+'a^'Q6rXjsn-UjV'NM+ZO\R<TPH9D^__P4gBc6OT(buH2%+IS9$Ku[?":CQf<se+*!TaE0K=[[VFPZ@)M4e+(iUGAjFF7&L%,k-/rAFlOQhA`C2?%P7lqZ@RY>sXM]]V,:II/_afq-V2*s)H*"/2A4f>FFaN=Co_HJKe)>cAUfZTRXllQ#AZH:f#[gal3"[4TOqm%I*b"g<S?@+E2KsM3BkeW0M;nr#G!$fY'.hj]b=j-/\_N]%6mgIhZEu`K-o=N*`QJjY=WWHLSH?Knp>mc78?`$IZK#\5Ra1EpAcn-%q@KOY!t'Y?'[>V1aCp8qal2qAkeg5(K=O,H(aPMqH-GTj,#o4TS(@`_!?Zp%`k3A^B#/ABMV[S1<5aI!4$=]P^q-8Xl(Q2GTeMuX%5m"I<P=`1HoFO/8;BsGV*n8#r.LC:%7f_KO/Z777*eBMLmt5mK!iMIC%.edQUqum6K&,bO5mQr$pGT2[LJ\:$CA3#WJuIo&H4[6^%OffR.%iQE*K[B/[#fr4",2'XNJHr5npf5Q(5qAc%:9R/!csIrtc+G(uR$'>I]H/>_Xsad`#D<V`;Gujf%r"d=<P-ibSd^i\Q\9WI%!bb:4Q?bXG25%3bpNk3K!^OlqojDuT=]Og+&%2_c?FRO0!Y:#Q-9.K4&!eY*F\A+ZK.s8'0`<$nSq/4gm!]J*O/e?LQKe-OR3F[3%+"W"0&abShQAHN"6*3Zi3$!lGi_&/(J9.LO?j__5@g&q5_bQ5N_b=ZE'0A4;68e^$-O7!s-PP#Aki@O*8sUJm%_O8f`FV%i@-YNh%=6rZln>a\G<jA/7ka3nOMSmP%esDpk%]VIfBe:D3+RgT&d\`'-lB%e3B_aW\KqV_`_oDfIW^;BXoPm^fMO`o"EE#<)gO1%Q,V\u(%_oI>j1mR8obJtbZ&32Op**LFo>oXDAA(kJ(3+2Z,:34!+J;F[J*J]Ot,EIaX(C-29Xq<0q\i;ZCW^>4)l/J?O!"mdu/rkGd;(&`W%>T@DeUfFk83!/`(bR85>%OrQl-hC?e`=[Xg0PaMP/e7HY:5u4:ih0S>-)(Vr(J!)F_),C:J]n_n%Lru=Nj<GAE6u6(7.6NB%1X^B%>Gc`L-B<,.jkbNk!A>'41#3e"fF/\9@IB*TAf_ouHX'&PJ\-2:n4iW]K,$M.Be\u[aX.:('MRsbOJ/,E$[1tC(a$!sD;G_j=]qGl%&*D[R0TQu;_ilgf)Z^D_/F[iO7KA:,29t1;#f+<mU4V47_0:I0*:=80/"pD!iSG^?EmC><Asd>FEs)'_1c"cjEruIe$e2jG]c1oM%^j%:<mfq8fl&OT3JTk6>b49EaB#nfV%1l;X`mSsI:gS;#jkbN-f;Q#d\i6R&W:OHhDdWQeg0N1BO\jP<VglUhC,Z(rM9(Sbrs$t&%&5%-@2rLOt0Nntd7R2N)'Sh0j1O,H[KU@5klic\fULj9\=AP2&mL=IR&iKH]G6?jN;6=VZ2oM]"q)2n*NUVbggBaaeW7PYX2WR$O%&^`o),:]GOoPK-TK')Q>GRS94.#R9DJ0S\0dOa8[KF"O:M!4?$<&s680\;'2dEA9E^g%i<!t)VSGATm=7+Q`Zf*9ESpm[9Q5R%rp%,?;smiH<YL`($2U%4Z[3@FaeuTPFOR9scu?4QmMKiZ&ONY\:gd`:5TG)pkLui0%RDCp4?7MdZ-m5iY*?8^u,ZCf"CVZ!#8V+[Sjj%#=CPF=]@[6nJdjY@5NtFAHCLE^?k=g7WeVgU@Z,3Sc?M<*E=>UX=^.KX@3Sn("!%.X;XN;QEi?8kUl[0QHk[CKl&7H`YdjJG+T",%0EP$[*7e"'7cHGUmdlOE$sac-,<G&DbFCA_"/;V191<G\#@pI?-jVW',@bqR\Hi]0^q29n($n*p3n9lYFh>tPAVOJF]cJ4X4AC$E%4b,1<*]TIkLm'I>HHb]kWJ3ei`LIucc56u=l+o,a&St2Qc@]Yf/l=@$#H(4Xd1+"X_'oLh6db>o+Ejbp*K)<1bO4kMm$Sn?F*QUF%C=.QtiUC54SkcXeLBebC#/]Nl?l>Ysc/HLLU<)SZJ.@/bi^fraK1hts8n/iQ5R5F7J[uq85R5Fk>up>6&#i's.&P1?r5f_BR*1+n%6nt0+&&'J2b>ZXL+l'5WNdqV*.?qWFdmM8;8[^]D,VZ33U<Vpg\J%!KiUgM8[V!RM*ioU,LXYKR0ig]qiUrjj7u-!mH8'$.38ur#%,]GS>ANDtbQ(#33QJ7$AJ1a(ds6[MSXt@b8*Vos:+8/>0e:HGWWk@(^Cre`3+kYu)&gY7'7%_S=MSNEO3j#8jrOm!*\CR2#2i8+k%+:3XGNEn=r1,:X@+u1>te=I<m,%X+._/FNMlqi&eXmHb+j(]+G/#qTrg2g`$bS_5)kC>8Q(P`L*5rmt?%tr]R]cCi`_HcK%K6^P#%VjprQ3G\*fl((i&H2_+8q0/t(hmK$tU%Q3#?/hp]PA!)od2SfKW7D']/P[`rHD!T\.liico<Tb"J5CR;d1#Q#K[PLJ7\m%74hP4&%fD$@oNRB5>T(@USPNKJ-4Vc"fL@i"(F3</^QQ;dlS>VIeDM6HUcilGP?0OBFg.mB6V5L";M.^h)Va:%MrM&p,-tT.q5/lu\gLHA`%U%Ab`lf+@iHRricjf7s3\/'.^kN&_`"1ch^a-le$>j48`43ul2;0m1>D<hhL"'TGVQhVTnWufL3H>nUqV_b]O;e'N/S5ZT`S:+B5%5$[?'V7Y8Np^T8EVl5$Hp-<2R?\[FdA5Y%+ch-@)n%jG(\jZ!pC1fa`NZLs)*p96kS82OL>q##%:%#V[m5ZV6&g.m'c\<H=T@G!*%-RQ7ajGdJK\^j^'K72-nenE1U"(]\iXljN%MOkSe:U?.FV"L7!h;l2pH;:%G\Y(a\#:eT=?`pYaBh2<=4XX9kERf@H&LZ^,BK[3N%-N5^NHGG^k.\<\(&:AM(ED_).NSL[OcUk%i#lL@Ldgl';A@8=ADQuSCg0_3.S[,'a9]KI-HDXudA?Dbd6i!JLW5gf14m1sneUqY=%s')5!5A_MBjl?Br5F.@hZ$t)?l::3@Z'NE.]L6<qrSl7r9(e"DNi&CO^9mJ)i?(;^rJ.R?r4a?)a.N=\a+*l27Yu&B')sg\7o6UT%INMa!oseC>T3XP-;>"XOJ!NTI2N9-VJTs4lYB0.QjkR<-Y6Isqo,!G#-1':O?3\/-c*N%ilLtTH9FL!$WFVRCd69W.3(2%$PWM$>%>)2ZjMk-$4DFTEliXSVrIDrqun:1Dq_p/fcNqak$ZL'ebVo[f"cgq0T!<B$P-rTn(As>K<n,rsl#=,crj.(bh;b#_5l)Qd-:/0Nt%h)bM,fGiQd#^us%<1DIB%LK+BpSSKq"<ni$XQMdacV>@t1O24<1qFZ-+S@igG8uA#hkrqo%jjm!hlP+!eda"p"?Q5)'2];-WF/"`%3e7Wt7gN?)AC-/R'[Y2ZUaKK$ipZj(YS7[]S4`NJ?_&`Xn:8!mZ`b@s)t2c-S;^D)9TmZt'-N5W4]U$R+E^Hc0),7mT...*G/K%a%ruOP*E9l#m%p9h^:@oupA.;>;[E6c1+@SU`34MC/=V5'fG@LCUbF@lqfpP81$b;,Vf(^K'X9BrcSi@8k%V*D%n%^sW^?P2BBW.5D%2LT=*4"#JA.KNoBj]%t=5Qjc"Pp7Q-*q^h+BsX'aVuJ=^`c0E)$0-+.aRfs(Tn+WL&Ve\U6]sWLSmE._3-sD%Nt8ufL!j=X#i;-T%k)Od9-E=:Y(sFVEB$(+a+5jUOUUmSpF.*WBP3nXBBrJ]FBj>81`4F&%)<C0mQK5p#3]g`HT!Cb5-6sV9(7HcfF^#ndlI3<V5Zlg`%)ZOEu(%'9(K"O3gG%-EP%[+VM0rpQ(%&B:7jMU_8S42:=ihMVMbVlJ26Ct+BEANlE\:7#BM^U.0S20MV6Mm#_n-c$j#=*jE3WWU<%6WPO']h-Ga.QYIGBQYTf+NK4/>&.d>\kB0/EsJskl&0uBV@&2(Vr^u</48p5A\6$u>&rjD/M14[[s@6+`(o&q:Gfm#Vq(0F#82Xs%bZNdT)4/"JbXj$/fPQ<=KKMsI2XSLYli3Wpn"&i;XJ3g(:dMp-&okaT]?%md_.4]"f.ID(#Xh2RO<$DY]!=u`HEqW!ZaATUoN)6\%+:+[D'19oIhYD8J9H6i+F/TA*7W?P#l"CtE:<[EtdgP=13fk,V6?*^lYN*!OY4@EYjS6!ToZ"0.4BIT5q+Edao?3)U^?=;ZJ"J8.%>o\Y'Q.9@0#@S#ti6s/;/IRi?[M3LJ+C2+0U^;4g=2$O+]>M5'H`4p?e",'!n&]J>_50<,L2$q_eS0LQA`]5tH%tQip\q%(=AIB\%lRrN&+H=YhB7Vr#>dD(!.ug92p]u:;k2^75I)Erg`.hin^s#FTA.1W)AB1]1GhKFHHu6T1cXZ+CA**/A?q#IP=rX_NXf&g=N?$hj%:9s9,QqQ>@$VmiLIo@XE/N$Ilo%Y+G:[1B!Pg`)^p.Vn>BkW7?n?&NpOS+snBN.!qNUE0ok=L$U9Vh+3s8P0^aCGH1e+hJ>r#XKt%J5Q6XoO#i&f2:XlI]oH(-oE`#_GE^dg2Z1Bo9QU7PSrFlWgXjK$$/J%^YLMsnc<CelF0UX[(R<b$$2k$%H7jj^O=(7-m*<Y.I2_/%_Sf8?<1]NaC+'1()14-P0C<U6PRj%S[#trGbd*KBUi0<bRH]er>KK.K-Z<&Vd<DjK_b(+iB!RS\INZXK\X?-!?-HjWBXVFu")'ie%a["Xm<BD'$c'ds0+>""0r41(QR>eDNg2(,e%'(nJa^G!L=#1^rS_6[@Eg/K"9Ff"#Jcr'@%&ATBbSd8Q*EFr"f!:Rb3U>?jAcueZ%>0108HAML">ubm0HO%_+>jZ'0*2SQiCg9"I9ZfC-U,X:'PM$AX9O]@/DdVaTWZKB-<>1_Q+]EAbS0)!oF_%<[:oSNNI'_@>.!*e:%C2&X!lLRn0)$$d_Z]\ZSS6<tMgTZil0h^%OEdPu1o"c=%Mfm)=E7AD"Ej:[A,mP(+-::T`UE)-^UU)XZK-W6kK5B(8d^h00Ke*IA%lk:qY/K;gih-<a(@?JiO,a7?^>8bg+8CJcs/K;C4iuIXHJrNNgo@f"\l$/f,a3@$;q7Ud6mA_u`3s^IGqo(dhY`S4bKjF8,`G_1&%:8G'\ZD]Zq$i(!4O?$#'Z)on-CH3Za):?p-'OgnIdE*b66pI9;]]44b4?;%:r+8[r85N)A\iX)^S.bVIdZ(p#*!@D9oUC]f!#fYR%q2mqSGSJj%'Y.,,^=h&p*@cEJHO,u)r>>k5/n08XY72(]*9QJ4YI_;SYs92/Nk*r!SCL#8K@T)rS.[Z>0R)crK:/77AL:BK1,-a8%H,'rG@KWcZ2D0LNP)0&Y]Pf7Q[i,rLJqqbs>VlsSj0AZW-Ct)c@k6>Ho(P-)n&h8mX7Q7WDH:H!>d%-ZQV-NEdAnJeSRXFu-_dX=%\I^5kbA_t-'!\S;D$$!)$rWm9_%b3:&9W"hdE,q4[/CR+8QKocD(8@.9+36N6]Yj!Qj?4U.\<Ecq9^l6gJsn0Dr\m_f!a<=m!HFu%%;VFV*Eu6)nc\$l0hi=;qi^>#)oZ?nfT?/=PgRuS80".NWR2UnR9^cfL%QBQfm+KXRiUm+$Y0&N>nr=n#g!S0fENP/O1Dl2HC>L)%Qo:5n2BWIS+Qn84j%Qbm1+/'Ui-,^>8>bH/CM%>em\VmkX1f5$7Diq6;hIi<pT':0+<KgkT`u[9T]dgUHB9@saGssfd?7YAd9g(Q%:6\o(6+A@)5+ShanLEuu\e"pB7_?$*<"$ou*QV7+"<AoYZ=fmP8OG9b(n_<AO%S2,3[]n6B=C_Y1\*A>O4TftM73+no^mK<If["O%pX4Pr[9lFh8,Bp-G!Qs3:&<-1bHpG]?;9h&_UQS$[s9j='BZ2=J(lWRG!W3"laK^Y[(_pI$$/Nc`c)%!04,kD!Mslu_ipX^0X7rW%).m<USINN60A6Tf>?^E1@-TqKWJtjU^[A!3%A`ZtWEg&;BeBVgl9&"E:7/"dl=T=QgY0G4eRJ]iG$tMVZF*>Zd<W")n]fkD$=b$2%?2tM:"1*]@XN!.h;U;KagH]Ka3uWTel&tnZBKoM3rL74:6u<gC?VL]dg=j>WSO_>d5k^I[m6KI88<DQZCoE,oc-GJ%fEOoa="c1c%D9eT?lRI_uo*=uW`>+ddb,]poeuiP"KDheb\nhMX=uNgoF2bOq68jo:`<fIi)_FX#J_8`PgD7GnX.7n3c#&D-6;[@Q^gL/FZSMe^%foj%nW(i,0:jX-TPKUQ&bdSNS[C<]#B!SmQ2kJ^W_;;E*JT\SW-AK?Q4kn`H']WXN!`I(E>*GHk;dsH\"qjQV6SMf@*OBXYZ`o"5%,dW_fCt2J4dP8^p118]*8\1A@<_g9qkm![DZmL+7n<pBF$]l]HAo$.)EUJ'I_*TNiq.p32<4koWj(8qaQE/LY_f5J]#?KB2$'clV%l*EIqIeoq1+9&+h*>qWf1lBA0j)WK`PhKs,0DL-A0l6DVDkK(:K'GEKrNtd[\Ub:lWTifrUUnM:"_)1GiYTM..4bX!_Td^(l,FC]%:37WHRP]TC%LkR!D&pD/.p[?H,_T*(C)TK-Aj&P+@:KF;-F8;AZW:OS@FLHq\EB8EC:<NCTr(T0gg/NNNZb?+>`09P;l#<\cS9'a%[H)^MiBqa"[ZDZTEi%M<j_<_uW_*6KAds2?_V>ZleesP7k=t9.RLnXV)rdXej//5cac@B2nrT%CMY;T[A0s_:(3YF2AB%.OD.cF6%Vk5oH6t_79I"PPlSm-cOptXD;$AfG'S"n8CFsN'kYSdB]Yo1\/lRt%lM/m2IeM/)jPP2MSaId.r6qi&3"ciNb=>eu/s2D!`*E=0F%pKBEh`L4/m<E&Y`&:D(4$S8@tr,f!mVK'O+)ZK0ORt$^<Fl1/hH]-uLbHi'!OIm=DJ/]ncp^5EEWTW.@U&W618XPl%FZ4fKR5C06%Ol"uH+93;bi[,*g%I-leVG[HFQ>*K%Bh6cI7L]]6\hU*i9lXdW;1eq<a1<0HQ&b*>e?FfWc:0U).eYG]pY;_+O+t[6d\m2`q/iA9%aGt65ACQ\d*6#&d!3,if-;.?iU,EJ#]'n@3I\=DfCDX(=B\tLXJ8*B8RP[9Q;%_<R$,dRg"K=u1L3=;+*&G4-)G$_p%;?_qERUj0%h+U6l6%kq(#XsP"0M1YWs6;`;]']gE4g:QX7S,K>>C/DAY]'8Ye.Ap:KIBT_g,*JVdRUK1%00W'HE;^m<jPYUOn=cp)D9+6`eX8A%0)FerRr3[j2/9Z!HT#WK6\HGeC:K2c2E.u)Fn;#('+>AWL36tWl@G)ZZ?]F*"sSi$WT6=Ugh*SCc5"+"<>.o,4UH^s&FGi"iI-ER%&HnL^&k&dhP*V-m/S'-$$7?X[hC<7j*T_(k[BHa"iCZg'7Fqf?5amm?/gG!R_&DVenP<j*()sY9%F:72\=(.Z]Bdk`gT`"H"(tVt%+u5/ZfhD?P((de9=?;"BTSR8@/5U(_[kWsg,8d_j0*iRsniOh%>`#8B<9I!S2;'gI%uI<@];>3U;6Kc&O3UaC+M+Dt2bQQ?[kf56%`-XS$+S*rp)P<%mR\\C!8/bdNPR$'.o?$l&giTQdk>&S6bB<5HlUG2j=aJ3*4,Wckm8e-7QuEU<M\(oEG,`*<B>?5G*-\GETUcCK%\Am;Q'"_H?lbt2BICfErjQIraY?D(=0`ZsWXPHf]l09s@!0]*f8>I28168(AiU%nomds&gmg]fmVjRl[q7_NEbR#"m2!"Qt/8B6-%a!Hi8#CppIp#%YP:KDj#Ur7sE%UQJn&W]N)fa%?1r@D)6-Dl+>G'[OLJ,>+DX;`B9`tX</O?H<0W1pBW$J*"T;Ya1Ve':]$>>BXu%@#(!]'FBL7/X]&+H%$*dUn-LH78ISQB^4O_'l))@,b:YYm=O+]9:FtHb<cBLMe^jkAYr\<9/-t[\ngD1Dl5f8Ue(1*&[6)pO[&Ek%[3?b&>lE1*E;tpi6f$*U<$@k[Bh7^#?annPAij>T*j!UM/oD21+g7J5+]OHk]HE(ReDs`3;OL-SF<d26%m[JGeDa7pE'>uK*^iBX%@>O?g%hV3t<YKSeFS3Hr)-j3/"okTk@c/h<>NMj!-98htWb/a(:3fL;9/\uSS.!o21TH0kgUUHSb>=cLiBAhh;s,>arkTTsQ!)>a%nNep23'Qj+ADUY@8WfN]6/A9"Q>UGr.A`'c5s&\Jc<Kk!l2@IGCGbi.GHspM`0@j/-qD2kaZ$hc]mDQIjs9*'2R?VXU.mRf;!gdl%Rpj,6CFQc(rFK:R<R,QY4/V(aiZ:%Bq%K;@OTZcO"3:BBS0-W]s2Fg(3iY<jmrs6)&c&NjrBPCcA\so1^p2u!5TR[ebqi*sGX/-3%;'p5%3_-bgDfl.TrN=%UoBri%Gf2T0YV_AA9\^a]@i8'[OMK?TZ>,8+VAj&'ZOG@nZC1s\KGt&N/`Ygp=^C\\GAn[/!#m8s6.U#L%O+&q(eIc+!jJT@40?BTJ!iTFe2>$r.0*m)Jon"<eUZhB-GX9n;2ObKc=W[I((BgQ`qo&qpqBP%["^1fQPqID*;R9h;*$IiX)VG^S%63lPm&[JFUQ('!$(":,HClT&s_WhNM*$K!/>T=oSg?luoJijR0a)FNSk,hr0+\:rKa&R45FTVCudnUaFJ>aSqTA1QfaHV,?fYO:W%R_0(TUiO>r%>'?.lipTc@OdN["9jAC;HDQqk;Y)CF:>Q3m5,<C'06W'&GAi):]kckS;>4!)u#g^2U)baFKk/l#C5!NmK[b2-9hda%X4kN'ZA.j'N:`X`eSU$7;^?f#@ioL#?2Ph*UrAN?\eVjupH2PbaZ&/]\Hg$/2Dlg^Nr),Xo6g'T[9^'[jCI'`:OWj+e*NA$_rXuY%MA)'u7?dco]!N*oZ(;R5Q'u*dd@2NC3aIf9.1B4hD:O#WWis/NZ`,1&dPWNJV?h#];Jomo$8rD1\C$[?/ELr>"&XR&OQsOdkn_-`%_3i0,>*;"oe6S9]4SbDg@d_%)>8?K]3*4#PekuMTq24:eH>]Zc#[iim<;]Mh<)'/?rY0ROdi<lKXN)WtN4s(^MmB7M7?Em]'%:X<%X>Z\j9ZQapR0!ki8<<%"GpfBg!DA_t6Y2^hp--eT+F<`5.8gF<%Wh(kM=CVP2:]J[9Q<?F"^?S%WQGA)E#6UK+99qq%pAb?G*_El%$t#<@8_h*2`FIODl+nA0ho8`'ihfXI4\cd]DjWk*6ts?)7(4Bq\-+5cL<4GuP$bF=?6Z:r^MpiTH/Z*h^1j-">sPjWFkN<ig$F=1%5NU7`Ekj/a[\u[CU$6T[nD4;D[5qctE*I<qSkU@5U/`3q%ga!adVWE9&uV-JfT$m^T9cMuADFe+C"kSc0)WAM_]:\mf-)2m7+)!#%omS^*rL!\Jk534^3[,`b3I,;'(ZfcGJ$;\fdr)KJPH27X>nFL!q\>mh(PjP>^35A;SuaI`o`f8i3XC1\?p?NF`8P:=';hJqXlcgU%E&+i^CMm^W-2/3NPi"qji<eK4jCa@DoU'Ma]:@4WA\D5AL[O&sqjqRRkggt<D0n@AK*2+40e&P?&UEH.)8h(PT+n4"H0QG0e!\M-%rNNR9k/K^g2\!Z%l:rJMp)o3Bps#J3KPfTtO?pN8!&PKk*B4?3rA-.8XJ-kZ(e&Z-<XPQp.h0)gAG!^7o+TX[CVEC@U3`B><7JsW%\uUt5Y!c9Js)Z%mM?pTJ3Ta#>QCLaimk:5u,ud:o\<60Bnhb?8L;lHf'+;QU8#..]]/kYrU;5Z,<tc>Qb4Zi+40a=CQCV-/j=r`n%m\"78>Xm+J30p']o0*?2->$aS>nl=]Wj_)/2G5FfArpQqeCV.QlnjUh3i!'^TfS9G/f>EoQ*h<2ZMlU4N@JSNd2c0V4E6FOao&,5%X=0MW:*>#soIn":omQI>SQIP?as6jk-WWTW;)tE,M1tebl="X%:VtmYe<$7L:8^0)IZ)h="Q?0hqJ=TG-=`cBA8)t*Tui\HP8#Sd%'8U!`ME6`-a'I509u_"3ho<0Nr9`U>3+7elEdBHSB.*9I>"Zd;TWVA@e%6`kNgVTGa(449%ZF!mQeeHa4shtsl.:kf%)d)\.I;T[%<PMj3Jk]FI`4m4&T%`Fc'M'[#kp`%9,Ug].<$6X_ds'1`f@"^q>L'u_O!K3h2b5dn3Lq6T-'KiOFS;FcCV5t1A>W5Vp@%k=8`'Hf%TrmqWQ#Tj-Y*roi>"U,lTg]hfY47>_c'kA<OV#j[]O3MD-pMQgVdbI@bq:&",841g)cBE4&C7!,eR0>&>0^&%0b1=+TIH9KRCI2m%,nl*HVDKT_bPt*^R:,*?_cfqn?T7T:AqR"Gb]@f#H*<F2.aVjDYM3bQXBMA@aJ53d(WSEhbs[Q?UO?6A4?rcHM)-G3dj2RLf/C:R%Um!c8Y.-IIY2&g1OpZjfaI;dt@7;-1Tb.p]],T]FD"bIuoZ1"K*D+.ibaDij3M3CbbY062=PeI?bG76pS?"pF&"s%6'rnO(5Xi!u%?6%'sL/Z^Lm4gtkaQ_!-LKgcS&P*tMA#;tF9<N8ZIqb`?;6ISliMPPOPe%Ja>!rkA2\cWR/N6Vf%`(5Z6(uIq8Li\m=0`i<K.AC>%6<IVI"e2U.bY4eS3GrrZUc_H/j(:?U=7L.A>fF$9Ek[D9E4q,6npD20k0m<mJEp3_6@p<Nq'nQHo"?ecYMt0_hfn\f.R"''2Xl+.%M?e18M?i^"(#S0F<BQB/<I@-]pn"\KUEsR&lW&<D'g-uWMLV$Thno!X.NZ@=?H&+eF;9kOT<I6O)#JUo&*/$O+%RIFo2U1FjP+7[%?H#!#^@UL9<IC65hn\jJ.\7%3EYT,Gq's,'kGrhMf;n\"Up3'i`CES;V:VdCTZS/OHklZBEK?U2I+lAO\(0OY(mQ_UOu-5Il<;?Y%n\l1Y?G>D1,_fdP^+>U2T7,h(E(;uO<lA9FCKh^7SYEfomGoPgVK8bcA,=R#p0G:r+-*N7MgP&]%WSd]qE)(<^([p0Ve:[djQ3`,%"_LHtQAeVr?"0ZEjW&K]I8ZX`cF7`i6Yp*l0?AnaI'%o-C'M,:n1*C._6'`rp:`(T?r)_s>IojU+Zj;j^g$B3,+YRdjQ-*-F-:BE%`cV(.?$P.>:Z#RIQpmrXpNl1$W56"e!g'0j/@t7Q8('.M/9\/''YF'bi]8[:@A>_-iH_FE2q+ZD[O_gWh3R8rmjH\^.Z?Z<6H!oJ%EVUj*B:`/%'YoROn>_;#PNu$+/D[=bm=K1!PN7uA&Ri.NqX$)XpQu)'i1bl%KS(@a]D!gVj?:fr#<_I`T.gU4]SqJqU[mP<!/WAJ%bnZ5P%0i^u->mQ1![H$BLu82"2@-"f=kJ<Lpg)FOPPD.l#j7%8N%^ccn(Nr]&EB%">'8T&&[q1Mo,_q)8!SSq:4YfJ!(pXg\>A(H%Uu1De@&`NfUK]t`/aNpI-,%qVPG/6uZGAO8H:/@'J@duTQm'.t#c$T(N/nINjokgZ1iYZ5-p@1D.W]&YniP$Z7g"]U#c)\nG@4G=%_9e@$HRrpq3^CXV[qTEU#FC#:p,@CD]CKiqWtOC,*1TE\aPXiIM.a%GR]VcKLCADZ5%@p0c=V.7Mn8NG0%92<[>G4fFZk(R"QkTn%N1acTW$?2oBM*>_*O;Id;Aa?N?jG9-<'a4FdO!\u^>Cab#Xaj2$dd(DI<<B:%RXbr,silk.d@+mQ4ER@fI3$(N!BGb%)1COWh#A1%L&lX]#Ioc^EAQad>KjE)p0E*TfTC-S8S4U53u\AloHXhMY$jGE'G:NJo\dVX\uCV34qP93L/brkF[>4&OP_Lq9<9lgcr<ZCSn21[%2&WZq2/F7(K=jJ%Zmm;^C)`dHYX$,r1$$.obCL:5m:qcnI+h:J!!TqNpHp1gm>_j9"9Ms8R6hKV&\D+nk8;nJG/JJr\ju1_\8fg9%ip=Blbg1jil5caIP(JNDFk\`RGdkkF#WeC1?+aO/10+#uI.rTIK*Z6c\?r;a']HEoDP'N]QXEH>W'Z.hc'&.$Z=BdZ-#B',Ns@Ho%7ENQF0S]eW8CJ<gBg-N'<+V3L3QCZ(b,KGbW=k3qq&ibS>cAp>X+Vg?L!0!bGsWY&[&KRorAop<*jWO'T#p8b^8f*XTMZ-&Jm%0o%)Cf*KAmF[mOp[E;Mj?j"P%3BDKSFm-FUll%3aWTRQpK#Sn4;:L%Q$K8El[(sM6blBE)N2FRqA#q[h\3[=<XlA*HjX9NNj`5\m5#_%,]SHTRd2GV9C;g78M\d^V0YDn]?*,r6?\8kYqIY!#$jlBWSIVo>!Cl\bqj0H2#l!Ini;$QFH;oNW)AfcRrSQhRS3+450,u/Qg&nN%EQP2sa@mr)l?G7EE++&F_oK3'af!>-9q/fOguF,[g70#En^UI:7;7YW401K&Sn&i*P[S>?k@U_>du+l;7.ZRKD,3bP1Lb&eggXQ"%mT]\X*N!7ED^flEo-V>o&koRYA<)Da;6%Kp;kQ)BI03=m:7'&-c/=LNo.f8-R?\A0T5saALaL&tTGs23kn?6;59NuqpMe[GQ1B)'%IJKWk3e,(Zje(iZkKDmm1H5$\%8lTb:tcSVT:%q*oeiscO$FiJ!b1>`QittXL0(0R&-dt0PdemYAQc=b*ZkB=(Yp9sS%Z:O=L`Pt%_k*S0W2h?@G+-E.G[K",2k;#NO%IN$X2mu1Q<q&IX":n#m1gK2.t@T;>3c)Z8p&\`.2AVWgN+l?Fs&uWJ;aNVO>/2q9:Ri5K&&n@%bfKCgq(!!G03[uFSLr!:j&QAtgFF[@2+,$Y\Od$P;[c&=%$jqflM`EZe8eiG`2F]^0]-QbgqMLq;)J8+kcnAU-eYd*dtB3FlbL0G%nr^\?ipGrF.Ge(r#??_OAoFgh_%+C=28f\?XVc,dUVoDF`gLZ8qE2Daf&L?Doa'Bc^F>jWs#IF!g:L@B]k-OA`T&QMp'sa1IDu+J%FN8MUlh2W5JbT7MXKjZchKe2Db6kgVM]@GFV%BtOKk[rNIChHOX32[DGi"O#:@BfP@3[6[\e4AI^k\7E#&^^CjWi==]q#fJGB@qM%6:4@I)+e>I9'&Nc+?m5aMuh=f1!+bM:)ZRHDPPltjCR1Q=N%t-Yi(68aO1-#N%?N7)+/,GT9rSsoGoZD<UI"r'1`Pc+kqFmODRh_%/p=L^jSR`3G$,C*)$0o6,pOcRF8>1bct#f*$LfG51rMtN,abK3\<M%[(99eT0>/NqWRb:>]LGgjB;7QNjE]l/2m`>PU(cBKk&O)k%G77hA\lcPI*aMNHX/)U=kOC:@/t3TDoX4!UbdBgP$bRY?.Fq_W:>PZ;DRn_Q:cG3[/FVA.`NoHCC%\jH+Yt*YDlVOr78)Og%]UP+%TfM2o[s"91hH=<`OVHS/Z=?4mB.\;1s%D(Z;cP\^-qiAXZ$Y*#:CD&XqUUHUbILbnOtGKTI*_oI-A[D(mn.5,k8HLgFd;%?\NZRh%F%=gqfK\rTG2A7lC66$,G1Z34<.!oeV2Z]SQO^R]nqLDX8RGX")*PfK,rqj^H+k=YF8-F/3-X18%1e\942nEgF7U_LVg/qTIs*W6%Cu45+^Y?Ce-m9pKC@I[Z2g$W,0W8P8&&cMC3eMg<D(P:KdLMsp'C41t-fq:^`aC-hRg1cY:#cYWV5e)4UV@ueaR>@n@d9^cc9kM>%!u[^S@Qm>WUjp>gLMCQ0Y:.5_9"i&C@?k<"$1A^NUH74^`977Y*^iZ@-gr[Tkp/:0NTumrkICs6a8\Sl)oTZ,"j\lE0oARUQC<BX%+ask_Be/j@BW_bl93!U!4%nUaHAOnm^XJPbBlZq5g<eI6]H_BCVai/V3Ob&RF[GYUM"M\8H'iLeP:fHqHo:PUj(QPL(oR@0$WLG(%<h`\(oJdK>JY^i]R#O<K1(JSRM2tDrF5%#q)0qXZa3@l#[8V4XL_nh01#.+;(XcK<]k-OaY?Lei*L;0OMI!;(0jBk.kiSi<<Qb)N%IDf;i14rNu"_;!.;bd,@'D<JNll/IC8or5NTXX"ZeGDnNfr6Hp5ml^+'mtC#G/0EB(YLNfR?SU.Enut,K7:OAAB-B:^!dumN%QgE%6*t0Mo'V*t:6KVPWV0J?RCd;*keDf;3.J.#s4U'K*B:WY0b5c\S<j)We5"m<GXI1=[sdiNP(r@kD8^*ZpSrG(2RLlm]ACYQaUhAh%ncM\Ccu\P\1$.@<5@@JUG6c$]lQKh_Oh?qmEmKlT@NBOckmb1V[I1=?2PNNA)rWM%cZAijR89"gd(VEogDn[('irnA1?^;U+Xo*/%PHV/lr,acDf*W&MLbbrtJKE)D98,"6dHl1NMk/Hcckp>XcIa)$[fL`\Sfo>rP<FIK;3(SiG'OU+%(ute*pID^n`!X[':TMh$2;L.%a0a/+OrbQDD!?ol'_fKr)eutZ-f'T]cH`dmR%T":=L8oLOWdY25WJlWStJJ:ra\A%bM4qh%kET*%dck2"u$fIJK3TB4m^?d=.1W,%:%*IaAql2;0%eZ!#FS3S3D?K`5C2N#EbB<&khPPtM.CXqnEN#>:,WYjZKG?cBL,t1C@B)2``_qFS<]q%Gg*1rQHCW+S7$`TJO]bD%R<#:*-CS?ufg(3L;stOM1gMe&h!/VcR].n5cr8Cbe:='r;2<^VPk@@QBCoa7d^)06=:!OIY%L'/)kF)U@=`k-]L^Q%jAJkS]T4-n%Hi'^I#TX/Q*)"PRO(3[r(/lCt(/pt(Z^\3FMs9fopK\&%SfWZQ.Xi1,"M04q5ibqC@u4HcQ%KNlmU*U$L7UqAjZ&!/q's[?W!23P%ZdOR7X)bA=Q:eHrUqboP25iRQY#<F0e^#)i@@@4=;!JSU/!`09%4ukh0(mdSIDXHIl<6:nkRJk-(YB#j9NrED%7tc#R7<?\go:!M%H(MWq.4"qF"TjF7`?Ytm)+H[44UaT-(h'a9R\N/@6SXth>toRTGjOp&ge@tui?*WH@67LI:b5d"l4o<X%Z*q\2M3D'#X[6,g!%C8%QXMBg97b5QqFViSMh\fV+h9Dao0?@`P42?LcHdUpOL/I;1DWAO`hqrQR-@"!bFNUEQ']%.gs"sQ*>&Lk#kE(-jOd\VG)9[QbJ1a.%dViKtf/o]X5O>Br<iTHG`+l_RS%RhLC+&_/?2p_6j%*?gNqkm2Q:fe:g0`R]:=TrbPu<'aAYJ,lq4STWkp*a%M0AOF-?j'G4$f%c%rrh#+`8C\9@A7I/,7Gd\/pQV+)8i"YS!02,HatHFd_kKW@\)eL9Isbe[`Jp6/pCc/fEG)fSNtW%*OBT"/_O0araJ56;7>_[CmPMa%m#W93h%F)JQ&IY4pGNgbV7/NXT]ln^&pfS6p$.nP:iFI0XS8&LYn7]PgB`jCH(MXgc$V_4'28d3?sf)i:.&@5<Y*qXhq__a&o)7u%ad]9noT7KUck5B]>Jo;1Q5YHX4t*Q$YbG!;l)-I:aL!)[%Z?r[4(rN).^ot-YJ[r*I^2TgcVBdsJZPQp)>7^GTEaX[:kS&ZDT7hS%eGSD=/#]["%ZORG2:&L'"_#h#WX=X##eT7r(V?Z30\['H=q]A,=HUHcR[#!fQj'Z`91;S-kjPaGpdEXEa1YBbMp7R-\%<C<Wa:(L%g0cb5)Ir'WeOla]<DTMSO;M82`e.sHq./;-Af=7dEMqN'ja$9#'i`hOOLSFZ29^3Z@I?ik(rp__M5un404u8`X.F_"pW,T<[:;Y#%k+a(1(@^b)H:6,eLL.,o>NTH):6DWN``K#F7SBU5VX@]mFJ<%7FM\,O9@biZ5r<+gMXH(a6'SW:#e*r^RCgMaI(h#-6Yl($"kBiY%TVC..^Sm\^8G_-mG,(QSg#4EPY>SF(I3lM2R$P@bPeJMMm>QJR86TYdq&]0oI%P_7BfA+R7i_4p\OhJl?cW`+oAV"F"MGi)(/nkK%;E@CPFun<-`8C\Q(.:g8-LWR3kp..aSS4LVQ^N2#:6XaX/^N%Il%-R-?!0jZh,R))'!?E3XpH3[g+h?4d?$jKG^$EXSL3+[6+4mg%(gKTAfCAbhf)r]4f+t]c17^2=RH^7cnf14/ehNA[hN/+Imk0H*-d%.N'CN3t4EljUq0WW\'"s@_?I^9o2sX?e"qTZBMTAG76XLE-%E_,"TqWm+2jcfAsYj[aIb%L,'ilR<lFn75QAFN#\LFls'mgq'II]$.ZicLpM\#59?mGVbTg\Y&NDFm`!3,P;bdo`)-eWP-!'BKN<%nN4^[$f7%fb54j0FK1ks::\]poDJDZL5WV/Z=7KF]k;.R`GErdQ&F*2f;@XsJB1cSKEWu!1HeTbR###B9Y%h[+P.`7SqD5T4T&JS%l!H.KJit:!Nq7(8Dc6=eQNma+Tj`.f:#<\J-Bd-U'@A2jrF3"S%37WqRS0CpgO!srb?!q0.@jO,U1j3*Lhj_;X'QDjCPg,D])8Um%o7rK3m/fUc;Nl2]]o+Qn+]e!c9MMa3gO[;K$;@LlZR(`)*c&g[K7eB\I^?g8?=8)32'q!,a[oi=+X]dHbguEO-K?G0gR*;9Oim&2%E4O'X.VgHSG=U(1i)l?3SKS;,#AY4udM]U^a.,aE3A?d8G!^<rdDB-\l7L+H9'Y/OQ`nt"<,TjLoeJP@0%YY"C2&\^^0[@\,ko"=%_T0pHr$*cH6EaG9QDm0"hY(as%WaOArp4bMadC?1rF#=n3Mo==>:PP@QL+`]lRD_.*<'&lA^(q%K%+kE9f_R+3KS<YFuNqH6VKg=%^H&d4gie!NLNNOj&G0(ueKB.(pAeZ-]9\0F'UJM`ZWs4BbD"&d=iQEL@nAODE?I!=^hiYjODu\[95J^ESC^NF:WN(&]qjL!`;FM>%e/O0*eHJ1(P?Y>$n2Cm-8#4uU3WrMVZiU!XM?uklG-"5cM.jt_5I@cqe$:U*2[))=b\e5[2\#\BE@LJJe=6)mB"Oj^Qk>OnZD<n]%7e:Ab?N3)=;1i]Cd>B[!3XQ&q0udb%fB2%'Z5tq<R&j?"BaWb+;ld;t!ki)^);?Ddm4JA3%SOQb`Ek.J/1JgBMkt,G@Otlm,kE3=%HS]LB[7ShjE?qY=a*d2u9=?pq]<m9_W'(Q?C0R=9+@bPb67p"J6qkO47*Wg.PM)C"NgZY.E?I!=^cWa[)_qnKDo"o@aE[(tHX+he%UqIVI=]1X[(J@^:`)sri7HUFa[Us=\ZU\NK"Hl7AR-qY$k_SFomEW2FP@U.FW&?pQ@gd!ZVI+^^k$bW-7V%fZC2#$bV8d1>3![ku%Fj,Q92rk%jHV7i"Bl_VfFShRjceRPm2SUL*VXSH?j0608-ub2DZTmLqM3dQBm9TK.VAg:7Bc=n@9PP9d&Imfkd'f5i[>mh3RQ%TX%</u13bLrk72M]T!Y),)([-^I-=_q>;09:%K"?o=+.s=!H[Ye82_B1$nm]H+Aje+R64tOa%nD96_BZ]t\Y]5OI*k\)QdX=$Fk:H=E%[n`EOj#n$LJ8$.YC"Cs=bQEHrcr;0`j&Kq*=^KqD"KNt^?#6TqN/2jSQj/g78M\*0e_AFtNmPXU8U%L!FqN&Vgs`LW.9-*EpOT4G%%V(j+`P5TbTtI3Jf@[VufF:2,R8@Il@o/a/)dd!mKt3TiAt22$T[8quaZ9HZk8IHhVIeINd)f2g;\#`EMiSn`.e,(@MNP7mX,)>"%8nHW)-]+<HE.rK^)9-hFfrE<LAhe^V*3(NG$t!J*(4F)*acsVXN%r8HXEK`=5'8#oZ%[PLMAi#nd7TT0b.48c#I[N/T./'An&G2d%H9-uVr"T\rG$)5=nWC59Q2e^<Lo[49?"`5Ddoj@6Y3EXCb#l]kmH>B)CU'UJUNP%E>7@/trGQ*9J'f)l`CQaLSB&mK,Ubh@orBP;%4K50an<3QU+EaDn1&E]Q*<6>BZEf<:U;<&MN(X9ACl$h;pM`u@j=%SUPjFgtL1P>,YTt"Z=3`.2WJA1Hr>EYH.%_2$r-@QK2q+1"%%=e=Tg^ONnDe$QW)[uU"G;o`ioJd!(TA>GPq],0n5O<KBPHaZ7]<L3&F!DdUh_j>TNW9N@:-JmgPcb4_*(r8NH?M:k=i=!M`stu!%U)ba.l<Wf*GOdarDL2r-4e(PfA>_eBAHok+jBdAdRJR>],53HEd=K6_!n6[06cPka0%fA53NJ]eT8i"oHhBD7)%Js(Hk$@7NK;-p%MBd6Gi;0-l>c6ps#'Fj2nh@l(>E0)S#47cn9h[-aoT]'X8PVSF3csso)UVlX_+/*.niF]ZB';`HiXAA+\\l5I0qX&]lp+aP#2.q0%).SbN'hi^iSC'g2cc+(\4`2V:q6h9=1Y=A:Q91CMb6oE\?tI"Gm2_LBqhfeNks*2s5)R++a0T8o):QS%-7M4<%iE8JJI=A0XRin`%dk0b]NM[Bt^YWJJYO053/.Yj<E<G<"]Kfi<)K/2PC&rq=T=UM%$YpW4[*@DpE*6T1&6rHC&Bca]P<@6S8LNsX7$nX`@a6FZSr`^n%/rf&Y/$2SYm:[)a94(T]+OQt'&/*6JUldZL_mafZ6/Ga`d0Xhg44-50cSP8m0Hgfsc,PSLC0-t2LS]_khWIr&+Cp&R63qiK8;oP_%P<@6U#Gc*Q+i'Tl(NN!Pb<[4Q&sc^N+FU%3$;rr:@rU[*9-#:(ZlDEZ*(ZMma)(\$;NH4GHKCo#'YIJ@@lg4Elu=hBJ&Hb7Kp;]U%;UY1Wqt!i"'Br=)'@i`2N$Tp/QS3imBL7DAXuQVcHGD6g:J_S8n$Eu;!'$=+W0pJCVWhks%ACYkZP-6!,-_31%geHjnYr3f!\I;o%Rq8]*8Xl9b7Q(Y0kGeTD4JH:OI&5p2U*2*sO?0^'#=4K;6?&Y$LlhjQj,\qR8)@B&dKq[@)p'fVca3=C/cl!XW[Ihn`coYm'*-F]%@'*nR:A+V=8faFh<CXbpj?7Y_4,m:'?2Q/9kF8>`7OO>Nl(js`V.mk7/m]g"m25Gna<O;'Up%-T6#&u,(ZbRs_Eh"0<=jcQ5gh-)%bW$.cp"WR:cO"VE44-5*0D"kHRD\2C$)!hqPZ0!GYuE'Db.DSkpq[E&J+nhK.9Af>@cBJW2#>T?Hcqd-gGf+PPBBPPEC,BrTu52m%E=`!Ta3ibX$VOb@\fL43(oL:3!i-pO6=532][Ju\9d%cs29=O]m-u#?e#E0(^oGrH-q.11P`E%snnKgr4<bmX@].P::6)0^0D,Q)%SXbU^?fhlnN%((^XQeeJbYf87d`I%se(AhLn!^PX=lPNKRZ*JmimD9H9m,RHPK?h/CT37uQ\D(%RRtf4ZS[<FEL]2WJ-kOg'\$Uk%p#Qi4Ooq'i(W\^Z[Mi"nZ=LPZ+D5EL!*#62P]9=VDOQJMC#*M>3B+EII8K/d/7Vg^=TWAApspdu1Dl&1K.qja8`X"sW!8VQEi'=p%1r5?rJQU'VV3-rbRsO.`+jS1PM1IKZRa7?p[,mEk0i[h.1E6or4oBN3l5F-6!6lb/]$oXFRS7%U2!#JV?T5b%2TqcW&t`1Qfm.E<%,i)AFYDCGs'dki-*/OHnT6KebAlo#^D"@5&kah_IB<=c1ku8t(mE]YUaJreMnctA$Wg*`YaZ>H-=q$MKM?)+"<cL'+7=R26VS]RA%HGYV!#-rLt,XDoC<K@XsgVr'3>1+cQUUs5+GXS]0m44&8$fQ=t[AM/Q"!3T('Al>]9PR!OB6%(>?K:Z[##:7"8.7&R)F]Ii+_Qr1%QM@Bm"ga3NR#pKFHcaa9<Z!%Bkr<981&1R53K^s01A707;e[uK4<9O0S)OFrW#aX#C.^>D_$/C19]'j3e)>qo>KS/q+P#+R3Ycp.%RSN]O1Ld(%9q07q=`R5uAGJ/MFs(M$3i3mQL5\^\?"0YZj:$7DI84*\mVt%Pc[JBCM.]BM4$*)$1$#<GDrMe#IeS_Rcd<VuI#a45%T;/UJjBnuUhOM/B?&m7lEicq(Rb>;t#Gk2?Q$&/`=D\0o5U-43qXPs(Q:"m.bZh.gk1%'*n*Vn.m;qElNA)[8k!;'C9j3SE4grIB%$('Q+@*T--n.j'[X!UR/Y[,i)gWQ8XO@p-[KuT'"lE\?hJ$Pb+;32fF93>1Gr.=<>Vl&I-?/u1=?/Nu2<O-nM55fS@YDUB?&5$9r%c(PfEWX%Tmr,jS8QlX$3$8WFVRtHT4C??)ho?s&@Kp!ji&I6jHkh$q8I.:chIO'1S7:5/):KZb>A#X*q6#m6mO]>#^iGU3*(OCuX%!>m.'+[@<m0:5[#m&k(MIJQR2BMqJAe8XX_q$T`(E1/?4,04pQZ,a)]7*_V<n'jLtb^-m0i'$5G[-DE`7t]Pf18q5l/<7CiXD3`(%?pj:-@XL26icSh.?rkJ!W+nU!RI^7i0M+m8ArE2c'2rYtLLM5?*q>=7aTebD@TF$3_.3p1]EGJ:Q9&l7QPKffO]M:e:8OPf5aZ<V%+D:KOP%2@Ga_$N>6F,4uoF`s9"DBC"W\I,]j;Gk80@Y%gjVb%\Bpc--LGoJeb$93I``[oG/>[aJ2Qcfg=<3hL$ph\g>IA6iM]oB*%iVuOm<U#/G0oP=%lEpSBR/<q!eHnuqkC-SiO/s:6Ih$gCdZGs^\uPNsn@-&9HNFJN!`(fdfmQ<Ofd\.T]j2E;lSA09SZ2lLB*el>%,(h&@$1S=iC5Fdt8mS/i=kcll_1W@`Lr64I6rljicT+79s"G[tSd/eo;ULMlp1]2OT15!2cW/L>-InS0o(6OQXkC=,YN(&C`@(^S%jAnj*L"_;_hpXi[^2letd]Maa79g;'/'qJD<"[.NY^Pd68kSc5aMS^C<6og4R-kP2apQ[,3?J*f932tKEW@I4aha6D4m0E*kDcKQ%`#8,:,1EbI7b]Ok%_e&LHGAmQo\5STnr+<':676.I,W^+*+.*$/R.rsT_6i\!](,t9\?4\SqcD93=#C>iX4:.S#NgJD+r!U.CgSO%,fHBjJQ2Q:DHbhOV<Jb4^m;q!Fd9Vq6!nXHFA3dRKg\'sQ4r%o%`rWD7R6-dX-Nf/c[j7HgOZZkqA)0>((.0=eR`98dHZCiOqGn#%$d8qZJp:PG"">egl2hJSpLpuA,lo'q%GuE2:#^#?M"d][&@3SlSr=XqHmEUIeBSb@m%lX6%h4t,^^&NsUp1*!%%)'`T9qHXs(>AI%Lid+97bjk4Z0YGZ3S?\\U+WdOfBVUe[\p^f3lNgU'khdQ/Bo\6KTbO0G3CYG#tan0ED=5']<Lt'&YUkZ1g-)R5kr3s$s=5&RmqR1%>&*6X;Kt"[ZFg">l=NXq<Ok=im1_Pm0>/+5)(-[aVpfhTe1q4$[m!'Dp@C$Ka#7O9mYk(hg(]\b*A^hD8<WS\>,Et-no;!9bprA'%'SW.iaV8anc`jJaSu20[J$eNp81d.j[&\kieLA*%74%;#$]V_a#htqHJ_Qpe(>\7@f>iM",'i(K%jDgBWQ_4Mp>PaYXq,]((J3/n%F''om9c`T1^c6/HM)o<P<X7ZOWXa?uV@E7gI^h:\;U'&#Mn.mH]Jcq6XtP\9f(Ac[?h1nq]8k0u+pUTg#(-/F`K9;8rD3a1l[jj:%>qeGtd>2BE4hjB$6t`64KeA1L*bn*KSSBOXrnT^.foVe+DAAJF)VQ>%lWQ(H=*,b4"WqW(D:"U2lN2Oc"u/\OE_.2Q,\iTYK66;?%l(kA+n>OUS+D-f06Mup*&Lga#8FrL>N(Lf`ZrFFYH&T"cXN:5\Db"G<#I2bQ*'t(:89Nq4c%+\hZ(qjfX&77*NKa+4+W6TR-75pS%T;FM>P.tD:e1,.?G,eQ2Z+:D^Y>h9r?4>Pu19)U#e=p++<RsJ:7;a$/\P()fLelIL$Ig)/<_)8HYY>((h@n4I`fb25<m.XslY!2k%XblJ'A6%'^$WAt2UpA^!Ml#=".[dQY9.AF!@&?+E8ZT!;:1!9(W<$u!SLCB=p`N3sp).T]b7OX@WV)5[WOAjb>k)4YjGELBOTINp%:2m,a?EOJgG:cB/:ZT/>W5m.,'AZM-F[jM<CRMqM:+;L>2g5l4Jl/E#@emLne+V;F<4A<)<-tEk8Fd@;!@iNmRto06ck)[8DiYEp%QuD#Bn?#UeR:(kJ>;isXrq<Y1QBYk:.3Om#:<RP>l+tRPQ6FW_l)kW8q'hKZ%L-0GmTkm.,Q<.&p.__T*uI2Fot$OZYk2.lhE*8_%a=A%_C)<L@TB(FHf[L_-?+Z_tDo*`Xf$taC2JtXoVnHLHm2dV!Hr9=p7Ch<T6HlOeZP!ceZC*pZl"gj7+1$8(U5kYK*72q8b8nsG%,rK>H7Vp>N/_j[\fnjfF@s*r09GJ!]Hb#;WK/5o?_@X3KQ#S6V11',BN8m3(ROP*2H1(Tf:PDT9;aK!sSe`g)TRdWHHWt9pB9U7-%]e!_'P+9\M3]%^.`iP!cb($<rc1mj<V!1U?r_*J'W_?-.\dc_:lBpDrGsb[uX=iSi9mq[tPrTI7]BljHI(gFOo4l(nn%sU[he>_I%25rh%Gn?gYjCDV1mI;rmG-tC1X`M",34[qWbAe"2neOc_=523]o&.@[[qMJ9l2-1EMVo@p,-EkpVg.N\`.AWhj8;hJ_:=27^A\"$%ZHBC&^X`rJ/'GY2/H+.qoIX,*Bthc/n$%sdY0q?GV;E>77sVpoaaA+;Lo@V[Rep`1]Fk5=IrDtQ`!Fl$nJQ.H%4i'=5ico@cYp9p%3pKL<+VnfRl5b5pR"TW/(>V=AQTWSHL`Z2Kq*>Mo-@h`[!9eNcEun0<X&4%l"-FB^!ias1l'Tdrl5I0djG+PMBI&t9nRXel[/Gdc%^`APtG[OF!^lEX^\q-(lLDLC-`[Q(>jt>*O1(AG0qQ3QZ*L<S^'iW_:2qkt/8RTFho7K\[=SDkE0C@_qdF[HU(WTF3]9md9=R,"Y%]mEG,ToFKP:sqHo__UJ'OjbK"bq561.l3_.>Ps5piWm=e#/9s.rSf0Z"Hj"MI:8`R*BOQfAB!]mT*_q$\]+3M(Ml$CWU53LOdFgM%$ga>cdcE'bDc5LE[_TUkf!$kus3=iaYfdg/1mZ<W]#!rUI<t@d1a0'TQYG":<V3c51A;QbbB\2b<=_9=C%!+TqYaO;@UB"^N[;GI%fsR2So(s"<amW:BJ%W)E%u@3n;A*K+JoIUQZ;*[8'e+["qFHFT<b5T%QLU>g.k5+s%aQo2?FSjS-\KA'LI"KoRd!kSg1*c_]mbtf%Y@%.&Gl=@Jp%krj>-4W0ogr1U:-T6+(:5<PJ.WV,as/?mi0ZXFAc+O@DA?,[e^*a[Q$ql&Icg0A,WpP?,PCg4=YkF&cr4uf;$q@1%>*i1\5Q!)N%/P1tGq`XX87;,bJQ^7RI:+\:H#iY!&rpr)q0IEo[4ffhcHUNPp9@j9j4)?,7hQ;kWfa-:S/R=H:iDR7b&WK0eY-1?%p2RTtheY?nWf>ESDD,2h&GL:cU#%u=eo!FGFFsO=(M(G$QKqUrT+Cbb(/+'Z'4FE%ofKT-:.NS?.GRaCc<-B]jUaG#_2;7@9g<JO%MCtNDWH<3tL.$#mO`p_Gm8oRP<,OhgS1u'(SSDD1I'n#e>p-k"p3&7cHgK;Y:gdgu,PrO>a`FqE$^BkOjqd>q+F\[><])S'@/(d8%=aY;:/33Yjq&TA@2=]@Qh13ia^lDTg`2od9Eo\]U70Y0Coa5)+8]mXZPr_6Hjj;_Rd?cm$PLBQ"]TD>6_ir25Iik"#am"o$EqX`N%cG\5)ZeDDLl#=e;k3U4QOJbtW9-@:4QR(X8&G_jP%6u0HfIUk^Ou!ZE<@#*odT85RV_)%/Q0?I\^QN)>6]gV)9VXtE-Ds9_Ru(tI%WN=8L6@'2Z2Nso0PUZ%VZof'pNe[1kZ,dk>0';#LceJ+,$)0(/om!&h=0*\hTsX2c9iQ7<Ml<;BdU!81S;=b=W7[Fd.S'nU!@0&(%"s!]*pF.mr6ddJCbpl\=Wb.0)$k*&H[GQdK3A#;DUQQ0(r2H"t)T(K)\p&*EbI4FiS$OBP`R8\TLO[,sKEW4!""]%X`7pP9:Mqs5%;?R@]?'@<HWi`26rN=N[LhRB%Z2(m0bMja(Jq]C:8t]LTVho!gMlh]RbNa>a5u\5pP4)G?eksR>\7&O"DL@<71(AG(qP@o$),i+)%(otbUrFB'AQEP\4a6N?)NKq:]<mLGe/#Kj'UhsUJ,XXXMF3AF%VSt.)SnblQHlBBoLuos/"&=`;M,/`>&/>W/p$n=3QdLoZQ`2pm%07tNQ/O?cCSHe54X0&ZSSNj]'1Cn>B#H*IokD76)?50)DqKPH<Inp;l1Ne2gYW7e<p^`H)f)r*Wf_jHO9)()0U[^&F)=D09W*7Q7%2cM(.3;(j5s6Ef>1g-,7ODP0>@Ve5C%tI8Z[G6R6D!FVG@1tpq9)o1DNl9!O[+i!K2Y7uWOSRNaT:K/TMPo]b][#H!HH\eSdZ^</%MCS(^aq?.NA(cI,oj#K:<0e?Of]\(qYh4j%];BWGLom2p"[TG!Adads9bbd-KeOZ[M_<U-<k-A*'Llp4;R)f`#XB%&IatGpL8^]T%qW4cT`AS<\2Dk&s^)J19db2Q&#>MeGp!+A0e-:J4;TKO&C6Dq\1=CAdiJ=s/,\'%a_B0%]PQA9cbBGTHj&>S`m8fgWfFlXO+@%c"%C^@_7aF:.UDj[ki^T$X!/B`o1idQ#AjdWE0TcmagEV-Q_N,8,]A/Pf1R&=$N>4jI9P`'cn4Ak\FhcBB(!rJfs$/)m`TZnH?0?T\k%EY(,(SLRfl0\Nesk"A#7rQ3:g,0bBW+t*YY&1U%M:gn8'&:iT:ZTTiM5R9=]5OGA7C;eE&Mfo\Fi:g-s[A6uc+sPr9o&VBn<G6'&%5?r@7<n=/6?&KJ@HfG7pW%6P$r1-lHY\WJ-=`#oi`WB;Qc*kp]jCYkGh+C'0il9d,=XhmUg6?mFp6(VZL+OZ./e,@-mhrDu<YJ)R%W?Nja+(S_R5PrBGJf3E>Qg._>khiug0+F_'E/E*>fe!3I:0hfsos?73&s8J"Kk?OTq'p5'2\K6c1eTMd55s/p82=e'nW-J,Ia*?@%XtP8mg@WQY:H?o(6dCnqIVK;+qlm9[L(+nc^SHg'`K<)LC2[EHb^Obk`@l/&s6g%@W<;O):sAek5&U53qo=3]`J4QI3_]$2m!2_n%k3u9F,etA=EVptkGlQBVaM.All\"W;EK2#-9)=R1"U8]O3hMeAYVW9S#-05"hU6?2YQeIW[M5JLJFD(=Cp$^R*(8j>*LOriPP4ZD%;IClEMmU5jdb5\;&_PYXaK^s4,5BiGX4/AB<M5^4D7kpM+uhGVi1Xk2o_H+.`?a.ars49\A/1QR3+jN\a=H#Gr_B`IR]];td[#t6%;JPV1nZfdtG=E=i?a_:AAjSLM)qC+lB*cLi>_oSB;(*`3XMdgi]pNLK4@a"&T9:cRo5Z&J?oI!8$8FCV`7@juM1NES%*qR`6Q!LK%-c75+[]iA"$)ZtjN@mk7+-#;EeI)-9S.*N,m&+M'7$b`qpAE;]i[cqi#NOI?]bM-L5uW`jkRJl82)#/T,*O<VWY3;gh<@$0PtD`?%!Em8al0]Go'SB=PGbQbYYDc-*:9ZL"$\g0'0dfH`bKN+eAi&]$88'GV)f1+;Lu&f2[X,hiheV(Y@c5K]L18Ls;LiB6Kl<jm3JcV[%!72\800lEN;9=s&PTdS$eTc1PJfK4*J`(aVqtHDk3Ye@e3[OE98Ul%RJ#JI.1bt1Y!V*FW.-)$](BjHpCAKa&Z4KEi_cH4\(7+0:%R(%9piA%R3.s@MhSO4li;+Q[I[dIhJ''hIO7dDXi'g$nhaossngpH9:a:@Qoern5hek:^_p^0g7/O;3$WlQ>RiN[.\mpK(2/SIpq%$0T@.0u'loa3BK7:AoeKF-eH.]#e\lU2`2::`5I.[tDj(\?`?ZR@B4S:30lB:`jr7W\F1"3ZKFHZY]cs/S+*tSJJa5c6^f$9Hk`U%p-s_Y&&4V'4q9S`QrO,\^@ien0Gk,0Nf0Q?@CMOdJgK)/Q'g`@?qL]c2@@$JJf7aD63/k-U$3l$egjGH\"d5k,rZAA;f9=_1>NSY%R:/p<QS!1E!DJ8YBt8ScG8Q&hg90)=^fo.q\qE/!C4O^<C-YZ+TUAX.1=ZBiEB@bnoN<5P>r2X7MZ$ZQ,A%Jm_C]r8o!D#sd?src%4<d"L:0hZiZUj?g@0(2XB4R?=?%/]=DCDprs(>N60QO`ID="^hAfl'?SD?b7dPuH>.!nr`[gj-JP/s*E>P/?m!gPM*1F=!6oO]X;%`irhs052(_5i50:b>7_ELcc`,B\$)s$%4G=-Fm%/S:Nf4=_WVfYGRkc?#(irpTX@H[4P'[_'`/M%LSs[-fV\2KUYX6mb?T`j%Eq@%=ImS^;Z)PL\j)nY0o:H)3\Bt!i%^srPe/GdHrQ6[a6\u_7F`t]7F\Z2=4t\V1Yb%b'mpFf@4\^jmZ!&bq\2esb=2+e4D(<BcFulq%Q>SOOVWY)U\ClmkOT-4g`OTUSO"`B4Nf`.Z\BA.Mlu>D?VfR3T<oHLUj2FUuS"lKcl/EF_fGoW;-*-Jh3(2jZ.#fs])B;t^K'c:?%=/[_OW/FK!4f,D+XdWGDg*oLI0ce2thU5LB#66V&"%6.l\@[W::8W-'1e&)C3Xfu3<4O:kASaFc'k4(8/;ihb=L,nDK`aW&h_;H1%0YE;dc[%nKD[V6U@AV00InRPi`ULa`+o24WiNSbCPM@B*D1eQ^RMB'm6&F"Af"Opi7Hn?(QYgiKb/YZ)BYAsaC]>4qN:4g7Y@$Pd%FL?<HK*<U0+nE5KgB(2c@Vt>IGM/*mH0C0QO..HeG)Lc?j_!$il]X!j^*bHdS*.kmpDA@+MYh%&[\4uqep_QUe?)>/Jn*if;;#MX%=>Q/Kjn0#e?BP%3Q$+Zu)Jg;B:"IsYUEk8AYcTA_>0[><Boq3$]>k6]/<+j_a$-<W8$<Is"m3pH6/_+lX_D12$g451TN9iVBc0Be%G?A%;.&Sh38.>WU[5"Vi@VN\k4i@pkA8,p]3C,NXbFm?SIS!,.=E@CtYKP'nEnc\i=u%UEHtWNfl7X918%<6OA(sJ7SsE832=Pm2%4`2$?el![G(XCBkkHt3FGo4ZFB,D<^H-d8hRp2XK]NAmRQmR2qAROgVg';c\SRQiqB;#FTUII+S_of-s,?$(DK^'o')br]NM4F:S%S<ql*X;@ug[1n^Q@W<M^!:ki)*7P^ZS?q7S4b%SqGM=Gr[A/Oi1CCLkZH9X)Vs;Q-K,>\)&MFg<1ZF]1:51!K38*D+NffND2]R#^%PntNjb5+?1,W-GB95E?f]u=A^[mRFLB%i+/>AGuN.1`Cr8W+K7P2?[?PS>ZA]B#I(d"%E%"k5mM1Nsk%WLW?hq(!.hW3T2f5;W0M%a;i(M,%i3X/B9A$)_YF*!h_%JEjG_P*pn0/m1S.TV!LTXUBmD-"Sr`96=]\j,($$!>/o!^4BX7Q*SL2#f0Cr%=fb$V"Zm6UI`3j(%'IsDi*B^7c'UFd`CU;N,ighu[aPKk-O\,ZG>\YHqq[uVOYHXQ,OaY#^&0L-Ek,p^P=q9"c<hHhdE,JO9b["@/VaqHsF2C\lO`B_T%H*16oBA\m:>e8Q08JL+%_BN2fMRPoK9!'FXf=gJ>]Q'+(g6aK.=WVNgKdR_Fk>ND0;/_&Bis<XS]iu'2Asr-+)UXMpe05s>f6j<a%GMhFm7qOXO<(5E\`C:#rs7_-qkmhQu`CiND2,)ia;LJ*u2,i('6TsR;DEZmV+X)Zp+f^9=K.tZ#'3/hK&;@_[K-j2t-S'C?A8^D*%;j+L/mKI#QO8@djD7lbui]Vu2[4MueU&SuQ,q/CM/Db64(\c_.1mg57jot""JO"`&TK_BC2a_t7W*Qe#G-Qi=8&9f`qG#6t$1SkN%cFkR-qhCrZUU'@9'!PS`6&*J&[i:(6ZplGqCc+oEdDVg<fJ_f*mO]?jK;LWTZ`\O^Vg^CbQ[".@7dh7+gMWTu8nGLGJK1?AYTEp'%VHVMEFULQI$@+37?PNk(.`dumVrs[5(qMq(ZQ"NPWm8teP?-u`DG,s`"*UcUAbQiB0mji=3?IK"@=0m::L7p5[VXp/!/)b+_d:-=%d7]]fE@NK#BCO9rR2M]AS=u\6%BPj!*pjB,OB&`4k[/ZO78-E9$FZKKUM>Vo#dM(c\]/t,4I,>jXF)IB*FGe(I';O0iInFmY;NF7%En4%BEBOF$Z7JlL8JH$`U>`FD.*.+uMR@8^m1ZM[hX%8_GQ0*;Qe#"J[<-?H2AFSDWR;Q)0UcYqC).FM%_WT:[=oNTZAJihHr]g+%7=X7T_<;LO`B1-EamZ8+@J4HUL$pdhXQP$+\ClciVg2`KQ/*s%b<$lXd_^*BoWuGY^r=e5"(hnW.ou4VlZQa.RUZm-YWrr4QB.2X%mO)>f2cG)&C8fel?:]>boD4%Th:ssn$3<+@e_.8i&Ng&!>"0!).e5[;P.6&b\ARsQ_m$hc??eG1e4,([;3lTlTlMtq=!c*\F^@e5%26idH6HrOeO)Z%H)e7>9%k'%,dnItQ^T(cWogMZLC*>Rd3?TTgM(tf,)^@O#)S,@]aE_$Xas^BS_]dao/XC\BR.KGOYAW@E+\"e1%%ElEOR5G9E-p8)e;jV00bpKo6nJ,k.>7eXijq/Wq_AX9aNNF.8(c/4e<EPFs@uY!oPT%ut/[dIB?Hd&#mg_^MQ*T-R;:@6o/%d9&%+@MLk.HImnF5%/7rb\,E586DQR(-VB`I?OkKZgt;Qd$b)FGLg'[dPB:.M-[]^qEI3*hm&+6@lQ0jG9md(+G;G.AI*U>S<:>R<NY<%dKE1tE\)4aIsZsiDh"2&C$A0fQYEuj$,]+C,W#Dm%SOQb`C.KOK[@.QKAI9-84P]8r\R$`dQS&_p)2'.k\_K520P)Q<)a&:\TPm'%jeWu3U[abb[&X1Ca11OnQ9r?B+Oi$<s4m>db%qOC_m[n&7W670lhu+$A]4;1@sM,0lTTA@YEJmrcN9#QL,*=G`N_D+:oB6gHIuje%ancQm4a3?`<d5sGjqcZ8eIe+XP+pmKMbY>A9p<'?ct>'1,Ld]?/"^`Ibmp=`6S;YA(.itQUo1V"`23FD\fNd\0"\IZ9#agJbf,V(%Lffh+oe1Y!J6bh$R;N4lC4PNHR>Ou)S3!`j4h<h"e!cETI11[Di\P+<<+S#!,A23(M\@FqGeu_0m!#Kaa9)-G-1HdG#%n3j2W]NA%I5TP2(C_thhPK*,1i\\E>^\!"*D'a^lqjTs[,bJtmP6GTW8P/t*jbE"GEu-lrhWaQiPF+Z=$?hCKX->mMhfkdq`ZIhF-G?8&r0J<%g.6O9*"o04O;N4M8-3]OUENaQEu_/@9SM7*)G)X8(g#Wp]B'ck)YP%U#hRtu='CD*[=khuAh@e:<Lk+)&o*ji`65(h+O-lq`W0qu%RH2%-<]Wt#E2Pe[jE]l/2m[e?q\uI&5!+@?V4<;;4=$R2[u@4I[/^1)I[78Nk.@pg`Ln:nCfj`#J;ErY%AVPX$ZE<'`Ntm4$h#fL%:GDZQ&e8"YVq&:g![>H)(**Xu'gB<*AFh@rA79XHqDqX[j#Q[d@)Mc^_YVnGY8Akd%u<\ZH\`e8B*<gA&XKuOR:+*&PkM7E;s4e-%5W#iE65$2\GBY6i9mB(-@6mm2K_ko2X(kLF+.aX:Lc%k5)5EMO(r8tSNF9,8N<`.i_*0TSaqf5-+YUZd2XhDr#k#b;\V7`u@5<NA%a>m$<*c&h3ZE*_PN`f&qBY6R[E'-W3*c%-,;D1p_8;$pp]kN.-ckK.&k`0*KX9Q%)N(#S1%]s=.h:XnT,1_hq'F1J_]emDa#%u"%%@L^dfasCuH=daSWL-&*a:Ib*MbWT8[1EJKZBL<!U'c&XTb8SDZnRIA$e7u&1)"]r[QJ>qppjU9k=Cqle>QL!?%]@S,[aDFqI9Pe_%Grac7G:pN&1)s.qW7o[^YOLb1!4-KICn[[ij(2Z1R5$/P[l9#kn&3bkY>)ah[>GgaM@FQ'8L1/3E5[0W[b^>bi=PCJJuj&;>XKrk%NQ*Ih4M&'NWJ*mcEt)GdS&J)K#mf'g[Y<M,,1Qepb06`_mgP??&iVfrc3G$%bJc^^hY#BVFN4mb_M2l0MJ,A$a1=f"?GE\/-/1Gn%A*Z]u+mKZ"N\&lAA3afuqFX-7>`Kg?P(ildaq"#pX(>[fKr_9IYSa\/2=6Q$;WZtMD0ta:8DE;Nqb"%W%r/0GR)/uV5(7[TiTce0%(j<\iJLn_*CPb$Dc^=n(XTfuU>&##@/%@uT.n31a2+9qi#H<[=RN+KG52:UC!?g>qJ5ap!0tPEMLu3))P6nlOR_8lMn)B:YqNM1B%`U]\?ip/V7UkRpH`H'2%/jie`PZW!n4)%c+7NHhF>[f_S1)g[24sAJhjiQB%VFSm5]=JDbH#TCB6YPIAL:jb,V<u,IgI=nEohC*@%1k_)EVDP1<&B>$.+c,Eqkd3Xb,;H]YG.F3*L7Con?/h[ojW&K]@of2amZF^6j^5%$2p?=+d,AI>,#W<Y,12aA_3RtZC&R`m$jL*[%hhGC+D3L6qDpYuqM/aI;okMN^onH0*7X(5W3K.=@a[Meb*O=.,29F,m.X_)-LmfD;+bB``;!s>eUGES&ON9QumRUNe4nM'LJN)Y+%o'We;0VY*!:3ak!kIGrpbbt?CG*=PWgXB`.E=Psq!9g,)j*,h/L-!Y9ho\s<mjE[]aQSsQNQ0,ro>s,Y)ROY'\m.G(?Y$tQX!.1.%T<rfW62MB9[OHA+C(gC*^<5QLQgrpB?d]c3\6fGob``d.$=1th_P%)q'8;l&&fbOIFdaU',J@&A8s/AX;o)F/Wud3JeI;]CCdWS>%5ZBO9"@#glTOVmXK1fo9`C+Si#YERrC_^G3E#*Yc9b&$RZ#QW*BS99`=MUj>P'5U`"-MamLAK32)+m^_MO,gSbT;&)a%D59AR61@%mL//^ST6+PVJ_E?SYq<R'Z\C8YHr>3Sb"l7Nf!nC8oQ:2\CR*Ddb-KB)[IDea)%GtO!;uR?j60X@N@Cj-R/Gna:ekYms#8VO/a0l%r^i*eSckU!UP)oLNb^&n6oC;Td_7<O[[tR>[HLNOlRa!JX&j`t=P@/(QO'*c/2Q#7]>IaaD(+NcLM85'`n#IA,A39lUMOdB$En90%c6`i.+iV7VdZRiK[a3t^f<9::&ALTqQX70^o&)@R?VV#EGg-$kCn"Dle^^A^^cu^;bhF]rG9/Ri9&_(]f4+[OQ&g[]3O%Dt@I`)Z%AotOQ0R=%d9OM.jeOtgE=ShD8Q="&giE?"=P-lBn)4!oK&&S*H>pX&;;,</9;&HU;:0_q0M64BH`%,'1$^Xbk:?kn\_Q6[/7JM&j%YGd^'<8i+;*fNk),CWfXjGKBbjGj?20"Ddg.!J!;iU3Z6i?`Ds1EjIf7R]ticJ5$H4fGZC$-JlPcW.[rG;oTKs(#_>3.Wd-Z)@P[%1!XpphAG=Ni^:0KdKo*i\>V+[XJD@RP*7]9)KJ[n`o<H2'$;!OJlcBWKa!,g!9&&.,UV%apYU6`mc1Y1OsA=FEd+4@mAcol/h*15%K)!L@j=X-dAb'm\^YKdm;rS;9=InHT\1H8D-u2m?q[Q9R5M!XkVJG35b@1N!R/Ofs_iSH&=41bbK"7oC,5"YgUgC%VU:(K2+![<$%/KWD9Q;T)B(FI(43$;H'D!2]^CbU$6[Nf!k,YH"[g2j&/iN7"h`TY/o"?+7Jq5Yk$AZ6u$g\B2;:8e%W<*)#De#bkRRiuM]7Ou;"%m4'p?kQuDObqUNjo4AUZrJMVKBT[MONe%`j.V'k5&3\1L79"e\WD7L>#]HHn,YCT9gE8;TU*2>.U:W,.Jg`G;JoKJ*BhEg*@O]Zm%87*B@MBc<Y,ocm4+,`KmW']@hEFd3$8],VjH!h'bT<,ZK9d;-4DM6'C4O;mEAk$nRQQ<Wh9tUs0k'Ts,#S<4_VNQ([_-8bZ'*aX@%'7gP!+X25-m.\1c)@h0tN@m\.9I"QU]^2Y;F7dL"aKB^XPY+b'Ia'GU+2Nk5PK-pCEiZB_VcF=!C:>_scEkTq)SeI+OFWc2pfrLL%N[6"p8@WL/*Xe5c[<ID:WX[\+PIad46N>Pf=&b;fgot#cZPjpIXNQ6`KtMBTH-CAg"SORZ2_U(p&,5]2;K%kK,n:4#1Q#YGGeXPq%R4&<jBbBSCcEGFVEO40!#$HGDeV<!P=L>dEbIh<OeiRE+.Kk=\'b(9bU3?%/hL!g4?npW:QO^YZ439NA/IOFk7/=*N1lHlM)q_NB%nM'u(&cD'YPlLC++jnT<]:lNN@>1\jjC#CW^<9BYp.`8!pPMNN8+7LUm#ZaL"%SOaFGm!g(`hC?;t:h0'>O&t,]OtI>%/1L8^hG1%Zd4b6(LYIQFo@'V\llr+V(&RHO"=Xlo*i?lY>Er`W9V5J>Tg1,Z^TEsb@@]Ta7a1E>$DfjABO3'Wd<I%1p4T60&ijsX0krB07b:i%Sr]nU7.RK"P6#a'hTW5%&2biPW'9r)S@t4Uet>&+:fge7\,/0jp13orS1beI*+'^Z$c)UqIe`l4gH?t!]\4^q9%uY\@0MJ3mR`3V%7h5(2Te7EY6ZYiLNT`"]O<D]r*[f`C,9L5iTUZ>YQ*SLGnDGV$-*qZEiP*'S;WcKP+.p-DiAZfSSS(l9&#Wd7)iLhbR5P@C0_ZC8%[Ep$hDOU,n:lf'rc%-aRX^BY*d0,`A,F/VbcnCJL[b7dZ8XZ8"eC<bo5kO&Xl,C=\BgNiGo?8/j0t:*I=EdkWOoS>hNPH)'U1h\l%*"eRb4e3HOT6i*a,?sm,G=d-KO/P17OC-&X3ok$u1A^9YHTl>UXDHtki\<_foOj4V?qD43Dssq.gK0>/Tu%LPoo&$FH,BJgS@-;S%D0Emsl.Bi5l8.c)KAMmr&J&Y<8<B?M;&/*577qf1a];ipCBTRXbpT?X043D?W*P_l@@22K/haW#5qM.GJ2pUS(Fm&X.&ZD%K_]b9%qOq5^Vmc90S.s%MRpVMGcI1cU&[s<3/BXQ%_LXD/,]>j\+;hNIYBJ#(M9X)2Z<f/R.U)>j0?f"Bk2V/@+E:h]0\+[7N+/9;U)Mk`%/Wfff3:3XYl:qm%0"77_Y7PQVDsO_+=M_5Fr)HZ)`genOo\.6%bW.P(M9!g#Zt/jLr,lH&NB(/nXf"8BGJWM$[i9Bd;E%SbVj;(1%6uTXl0=AfZV5XDlX>Lk[*4`#/ED.PcB?Sngg_>NM6>B0*UfXBCF)kGHnp4lmRd"&.]De[g&Cem_q<NjoDQt0M_i!=:l7HW@mAVgI%VRALN,`r'"%a3_gKSJiO?:')Ek+:Q(gH-s8H\7.]M3QpmKsk\lJV=<YL0\bf#1_KtBc7[8^T<i@APT\C*l1fR;q2punQBed`YE9a%[CGeTYI'B^W)0Ub0-sRGj>r7%-5EPG'Uq?&.M+ga*HDn;)fc\9]1XW<'BL^.'CPGELR2P81Eh7EO`70b3B'<\EgF<IjjW3MPYYW6%T`PTB.Xl(m'O#E2Gn*@HlT6I7MFE%HlA7P9m_hU*huj^<mUS&t3XN4WYDSd\0#eL>Ea2Tm<k'2&WDKO6m5Oc?"oIQH5!c&4Gse`$%=`6la!_J/R98Nkl>e:uUan[L.<J>0kNofhsY'\Wk@X!J8'miJo.*P:(-0\5Z)t\-VBsF-R5l"B2EDgUcVcnj(KdZoQ!9LKW^$cr6%XO*$/9N:K_1J5!Lb!a0K).&`0N$@e%?M]DtMB#>i-3D0oG9.nhZqcEY-?A/ZV2<W%>+<TIo%HJs4La#YA\:%Z;J@<bHtr/J,+HNS%5GFB=l.q91=W*r<ChTJ0.RS<=Gt,Q8-7Zo*5Zk$@&Bge[AKh,TBjjoGgkK'8G[VcrXJ"s+Y`:i?0[\u4SK6eaXr`:R*-ld;,!nX!%`-'pPPQTIdU%Me72_4%X(6cpG4J>NP^c;$?eT%NC,VD-DB#&nCLW+1]R8K5uQX1BL^#3Jk.`lDpgH-tbp(b2EhX[bamN6i0UMBS,%@W6kc&kFJJo?c)r&Qsrs\[&[g&[,AJP2'kX%XUU*$47@iTM^K=LkOkFg*D)Xk"i@;Z8g4';LbW)\AS(qU(@QToUb7V6q8Uh'<Ejh%0Bruid#$)qHZsmoH1CY@6no3i823j_]FW2P[c&)JELt%#prXEg/K$WkJ&_)Qb3$YlJ!iI7]oA-rU<((W_kuka10MhBPE7'IhbDYS%[(T<nPP9C3]b.,6KuGu'6<S)"><0````GTLhUqTUJ[]ZV4nS#9EhQ:Kf9g5P8DtQp6I*"s1(pqY=J&X*e64W!7Xpe^iPF>:<:;$W%KCBQ%3'S@R+i4t&6@<?llCE&gS<mN^88@KDq0c`ESAq'AfWDTMenis\LR0lfABNDkau_.I!+-%VR')HrllmnR*(Calc^Q\has=-+%_n<?,>:C1`b3Dn*BZ`qd,munWkLNoh3%dAm2?)!c1s(Kk#+4]9_'WT$3b+..fj(S&#tsg)A&GE9b20A$(7,)G:^kY]M&hj8lM,,G%gF7%INud`#NmqFf6;'UEf2FRUG9i/$0J*eS/NK`A^VipGb*_UMqn0ScSkFt9(Yu%Y&t@+$Eo4MP"KC54]F:mYM]Jk#g`eEemt][B%+^U@F13YBE[g/'#DHN6O=OBss;QA+bk+W@K1Ps!2Aa6?1mb9MZ2/QYOF.,"jQ8FSeTH>t]-M;!d9S4h5j;&Il,i!s`C`P;QGXKb(%mk/V/M/o1LiA!"3ZhLtt;%N*6bs)_h9qMB0:KS5SA(Ni.3t/mSJD.e^EEiO,N/M\36%;_3/Kt`C&1a0sOq6K>qUd&u&gtNF,^&W\%)Y.;6Y2m+2=&VF>6W$)m]:<Pi4ZRTQ!#W!k\&K]d&Xl%'`s%=JC5sSu@""8Vgg`o3N:u\Dd(0%<?jrXKNCiD6?%+bsGEhg<g>]7-%-ls<2?AR$/`G#X3L7Kt,jJ+MH-nUE%26tY#]/n<#rOR3p5%c<2oVQ4C0M)j5b0s8:.Y"X[lZ'8h,a-m@Kone7VseuL'#,!ebGSk=%Yc]b[Jg$gVo%NoB.KHFO5:eaMF&6B^N_`B4Z_$G!)?>L4cO+Chrb7Ps>q.IeFgb7ar^mPmLH7B%n2KH^B)>?*.pc=a@$AfKETinY%#[hpa]46[&o?b\T4"RMWB^ZEMP,p4%38.KZJTQ]@UMJ\%k&7#"IF_t)N#keoGK,k^Q6B4_ApYiGHh*PH-IPCiK-8Mt,1M1BiheB@%kAYI'>r34!(X\I>J$7&\EO40)!12Ei=Q4Fa]OqZL\jWnKJ*mlY+[s8G:/&`uWV&('a+-1>]):>@0X[okSB(,nM4P[WIL`?LR_I3j%j*n3W:mle2A-[DLq9\=g#+m!Z%'mY.85c7!8aL*m)G;#$oor,_-c`V:-eU@&+'?sdI/*Lfh4^j+#:$hr<.B9$G5KSU.Hs2mCA>Fr%j'tX<W+4YCj7m3;&s6+nJ,Ap^%=E4uf<gX"]ufr)49,@l:on'78F6PfFUg>WlLh!WRRSO3L4Ll`'I1oOAQHKuJE.i8<L+3`)Uu>+%,Yt=JG+NtH==B^PmFE:Y-%`(+)6bkbBGgB_QE9mj6?u.eNY+r5,>dr4]&q6D'0AQWW'$ckW_Hr+%R'!O>g1CRI,&O?fuD(5s(%Br%s+t5W%f1,4Yl*6W9WiCpM[Y.$Jj\N\@=:`Bb8]Jo=dS^dA)SJ(lJO-5;N6geN%_1^Wt^Z@O>S?)JGT@"b%!#_>-siS!($-.`r6'0%m4(<ReIN.C=j#L%2o')FDg=mdXP1[/M+TJ)Wo\VuP&Z2fRTiaJ2+VahbERidD]dC\]3`->lWlA96o%NFR'f=48/G8<(deH<'=mf]%[MFY2m8k$PR:bY%E"/f0&fYd!WVM]Ge`mdhK]+`oa&f*Fb'cu,.(-EMTabh)^gOV"`_:gi"R&qCCZb"d6f,n'QcMee>M3+o8R,fm%5)bh0h2[&-H;:Er#5g[7[6gEe_jHc]"R..sn?0h/bG+]G>g1bO7N:WL]aH#jhHeb$[VISbf`OPh!D(WV\fBO^<tDV%rgZf>\biXe%1!eE(LZ=65?#4mG2$MC0#jds;dL_\_8!Er9IDb45l>L<$/L%jHf"jLULAQ.H>jcMB8DR6]Wl#Z.`Y)kqC0G!gG2fuT=EYN/e-01D%`<B5Xgc:mRH\\HT^1%u^gb]-oPbs,%d_n+O#,%I6`9>TG6>%dLVDDH-R=KE;J)qs1og)EHDoAYN]?\f(_&1dIrCUET23j$GZf8T?%PmJ;NMRgk4KY2N*.3X/c#%i`kZt,%moG<B`&7p_t&FM=,LR/.Q1EjJ15+17AbRD2,3GrS19T#fD0ls$H--Xo:oLi2RfJnL`D7Pf4%^)-3P;dndnG(e_jYj=*-7T<LZ\R"!jN+23tjf^QoJ7;t,@FGkd'7(<Gab!O+WLta3:q9<6.?HBYJZ7K?%@Q&eh1a]RU5kYS@3g5c%Ua:"EeSm=\NTi"I,*-;R%^=S)Xu40&ZKIW1.84b:V<N,D5&N80G4Nt/nZ.*<gFrR#[ibY!.Cjp,bAY,iipXVXmFNH[KDbE<q\R$D%lF1-un+6#In`Tr4gTSBf=8VkZIuqiXQM:CGq9M;&X,m;MpE0D(i=Ato8h3j5JX^*I#7=Nqh%7bhn@p[RWUi6+'5pcu12'@4rl4AV%IrsG;T;U5S0NP@J@A3eY@SflFQAZ'^6QNR"H6\$>VP&h)U3@A-Jb>]I"p1*5"=Cs9I.[l^S30JAgpuc-[9c\/HV61d`7L$lZ:MB@%&t6BWm/SaS;'F#6>s)bgH--CKOPh5>Wj^<[@1BmYq/O\<MMYJ5p4)khkGbe;h/<8cPMb.h;$(6j55EHQ45'V>?[VP>=9#]TJI%VP%<p6CqGi&V@;`T@"HD$PN`&#=%l0lRcg_sEF;KM+#nZ7m;/K+\C[8:B:WS39q&9HW@V\o.$5lsb;\QP-d#HF,WBH3^']d=*5'Z($?%'Z97*bW06;_.Y58r%EceO;5U]H:\K[/UsT-h*amh"9&t8L7?jfW6ES[C+5ecCLO=0.3P<8^H2Rr+p%lHfYrBhXei;@!brV(_7!.Z%iDAPE@sMr+pmb4rJ^/Tb'-8FoP_pa9Yd,Yt6\`:&5W-;NG''!^^KIgcc']Kj4!LnXN<1reH!J.EgSBA#7e)<3R\^pX^-b6-(o&7)%nK!qnOd@KHL7ZH_DdNl2dh?+_d%>,3:]]N!cu`I(:]Ep<J7>!XTg\:f"]-TVWat)Z;(YCm.`o<nHBj5&dV_17,$#5<#)9f'lYC0s%G3&f]O9W4G[`/hK"1\&a!]1'pJ8aqkoIb()81sf#;`99L66R-@?WrYc;&\MV+:OVTC^n(:pJ8!nHq*23@nrWYr5U<-m7uWMo_[\'%Wdhmob+Go?is4?8]9@k3s2?qSrq5_%hu<W@Y<N!K?dD2+q$h'UrVY8SI/\;pp/gS?YMT<DlYjN9pt=8Kq!,?gr:/CRs4ongqc@EO%TDW:c-i?'@qjT7QeBcEor8""DmFV@`?_%8c4$WT.lYjQ:qH^i4)&t@*T>/84^A7_/^\df4cT_6Fj7.p!?[r%Ak88u%pn,n4qlkN)%f<ud^g)hhJi-3fc^KT]$q=?9'k5PYMZJ3d=,J[*Nb>)?<!%S``qbl[1hC)ZQl5HQX[%etR8=,mY`]aHN,=^q'duHWr`]dD6GiR:2%NYN8$.?Q5EMc?<aA>cSMRPh"Z-A#a".U@37M'?5Kd5CJb.UAdBQgt(0V9=!^oP^@g5@24n5IcaQk-GSjr8LfF2ui!?hu:m`s8'\n%s7&=&puIY=kO[SZn[ID'rqj/X^A791J,]@qIIZk!YJ.lbro0QqJ,/lODnc#0Zdg]mrpr@'r@^F]T@i>!I.CYDq_(23+)+hH*W~>%AI9_PrivateDataEnd