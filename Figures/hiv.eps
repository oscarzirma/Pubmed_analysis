%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: hiv.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Jason Schwarz
%%CreationDate: 8/7/14
%%BoundingBox: 0 0 576 432
%%HiResBoundingBox: 0 0 576 432
%%CropBox: 0 0 576 432
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 96 8%%BeginData: 11160 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDE0FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD57FFA87DFD27A87D%FD56FF7DFD0AFFFD04A8FD1AFFA8FD0AFFA8FFA8A8A8FD47FFA8A8FFFD05%A9FFFFFF7D52527D52FD19FFA8FD09FFA827A8527D277D7DA8A8A87DA87D%A87DA8A87D7DA87DA87DA87DA87DA87D7D7DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A7A87DA87D%A87DA87DFFFFFFA9FFA9FD04FFA8FD047DFD19FFA8FD09FFA87DA87D7DA8%7DA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8A8FFFFA8FFA8FFA8FFA8FFA8FF%FFFFCFA97E7FA8FFFFFFA8A8FD28FFA8FD0FFFA8A8FD21FFA8FD0BFFA8FD%0EFFA97EFFFF7FFD04FF7DFD1BFFA8FFFFFFA8FD08FFA8FD0FFFA8A8FD3B%FFA9A9FFFFFFA9A9FFFFFFA8FFFFAEFD07FF7D7D7DA87D7D7DFFA8A87DA8%7DFF52A87D7D52A87DA87DA87DFD06A8FD0FFFA8A8FD21FFA8FD0BFFA8FD%0CFFA9A9FD05FF7FFFFFFFA8FFFFAE83AE84AEFFFFFF52277D527DFD0452%277DFD04522752527D527D5227527D5252A8527DA8FD0FFFA8A8FD3AFF7F%FD06FFA9A9FFFFA8A8FD09FFA8A8A8FFA8FFA8A87DA8A8A87DA87DA87DFF%A8FF7DFF7DA8A8FF7DA852FFA8FD0FFFA8A8FD0BFFA8FD15FFA8FD0BFFA8%FD0BFF7EA9FD06FFA9A9A8FFA8FD25FFA8FFFFA8FD0FFFA8FD35FFA9FD04%FFA9FD08FFA9FFFFA8A8FD0BFFA8FFA8FD19FFA8FD09FFA852FF7D7D527D%A8FD0BFFA8FD15FFA8FD0BFFA8FD05FF7E7F7FFFFFA9A9FD08FFA97EFFA8%FFFFCACACAC3CAFFFFFF7D527D527D52A8FD17FFA8FD09FF7D52A87D5252%7DA8FD04FFA8FD05FFA8FD0BFFA8FD0DFFA8FFFFFFC3FFFFFFA8FD05FF7F%A9FFA97FA97EFFFFFFA8FD06FFA9A8A8FFFFCAFD07FF7D527D7D527D7DFD%17FFA8FD0AFFA8FFA8FFA8A8A8FD19FF527D7D7D52A8527DA8FD05FFCABD%CAFFFFFFA8FFFFFFA9A9FD06FFCFFD09FFA9A9A7A8A8FFA8FFA8FFA8FFA8%A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%A8FD0FFFA8A8FD19FF525227277D272752FD07FFC3FD08FFA9FD12FF7FFF%FD1CA87DFD0CA8FD0FFFA8A8FD1BFFA8FD05FFA8FD05FFCAC3CAFFFFFFA8%FFFF7FA9FD12FFA9A9FD1BFFA8A8FD1BFFA8A8FD13FFA8FFFFA8FD06FFA8%FFA8A8FFA8FFFFFFAFFFCACAFD05FFA9A9FD14FFA9FD1CFFA8FD1BFFA8A8%FD0BFFA8FD06FFA8F8275227275227272752F8F8F82752F8F82752524BFF%C4FFFFFFA8FF7EFD13FFA8FFA9A9FD08FFA8FD0BFFA8FD05FFA8A8FD1BFF%A8FD14FFA87DA87DA87DA8A8FD047DA8A8A87D7D7DA8599AFFCACAFFFFFF%A9A9FD16FF7FFD1BFFA8FD16FF7DFFA8A87D7DA8FD19FFA8FD04FFA8A87D%7DA8FD04FFC3FFC4FD04FFA9A9FD17FF7FFD07FFCFFFFFFF7FA9FD06FFA8%FD05FFA8A8FD15FFA852A8FD047DA8FD04FFA8FD12FFA82727525227A827%27F8527DFD04FFCAFFFFCAFFA8FF7FFD05FFA8FFFFFFA8FFFFFFA8FD07FF%A8FFFFA9A9FFA9FFA8FFA9A9A8A97FA9A8A9FD0BFFA8A8FD16FF7DA87DA8%7DA87DFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA87D7DA8%527DA8FD047DA8FFFFAFFFC3FFA8CAFFFFA8A9FFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFA8FFA8FFFF7F7EA97EA97EA9A8FFA8FFFFFF7EA9FF%FFA8FFCFFFCFFFFFFFA8A8FD1BFFA8A8FD27FFCAFFFFCAFFFFA9A9FD27FF%7FA9FFFFFD05A9FFFFFFA8FD1BFFA8A8FD17FF7D5252A8FD087D52A8FFFF%C4FFFFCAFFFF7EFD21FFA8FD07FF7FA97FA9A8FFA9FF7FA9A8A8FD1BFFA8%A8FD17FF525252277D2752F827F827277D7DFFCACAFFFFC3FFAFA9FD2AFF%A9FD08FF7F7EFD1BFFA8A8FD0BFFA8FD0BFFA8FFA8FFA8FFFFFFA8FFA8FF%A87DFFCACAFFFFFFC3A9A9FD15FFA8FD0BFFA8FD0BFFA8FD05FFA8A8FD1B%FFA8FD25FF7DFFCAFD05FF9BFD35FFA8FD13FFA8A8FD06FFA8A8FD21FFA8%FFA87DFFCACAFD04FFA9A1FD21FFA8FD0BFFA8FD05FFA8A8FD13FF52A8A8%7DFFFD047DA8FD24FF52FFCAFD05FF85CACAFD15FFA8FD1DFFA8FD12FF7D%527DA852A85252277D7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA87DA8CAAFFFA8FFA8A9AEC3A8FFA8%FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DA8FD13FF52A8FFFFA8FFA8FF%A8FD25FF59FFCAFD04FFA9A9FFFFCAFD32FFA8FD12FFA852A8FD06FFA8A8%FD21FFA8FFA827CACAFD04FF7FFFA8FFCACAFD1EFFA8FD0BFFA8FD05FFA8%A8FD13FF52A8FD06FFA8A8FD24FF7DFFCAFD04FFA9FD04FFC3FD31FFA8FD%12FFA8527DFD06FFA8A8FD0BFFA8FD15FFA8FFFFFFC3FD05FF7EFFA8FFFF%CACAFD11FFA8FD0BFFA8FD0BFFA8FD05FFA8A8FD13FF27A8FD06FFA8FD26%FFCACAFFFFFFA9A9FD05FFCAFD30FFA8FD12FFA87DA8FD06FFA8A8FD21FF%A8FFFFFFC3FD04FFA9A9FFA8FFFFFFCAC3CAFD1BFFA8FD0BFFA8FD05FFA8%A8FD13FFA8FFFFA8FFFD04A8FD25FFCACAFD04FF7FFD08FFCACAFD2DFFA8%FD12FFA8277DA852A85252527D7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CAA1FFA8FFA8A9CFFFA8%FFA8FFA8FFA8C3A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DA8FD12FFA852FFA8%7DA87D7DA87DA8FD0EFFA8FD0DFFA8FD07FFCAFD04FFA9FD0AFFC3FD2DFF%A8FD12FF7D527DFD07FFA8FD0EFF7D27527DA8527D7D7D52FFFD045227A8%FFFFA8FFFFCACAFFFFA97FFFFFFFA8FD06FFCAC3FD19FFA8FD0BFFA8FD05%FFA8A8FD12FFA852A8FD06FFA8A8FD0EFFA87D2727527DF85227527D5227%7D52527DFD05FFCAFFFFFFA9FD0CFFCAFD2CFFA8FD12FFA87DA8FD06FFA8%A8FD0BFFA8FD0FFFA8FFA8FFFFFFA8FFCACAFFFFA9A9FD04FFA8FFFFFFAF%FFFFFFC4CAFD0CFFA8FD0BFFA8FD0BFFA8FD05FFA8A8FD12FFA8A8FD07FF%A8FD15FFA8FFFFFFA8FD05FFA8FD05FFCAFFFFFFA9FD08FF83A8FFFFFFC3%FD2BFFA8FD12FF7D527DFD06FFA8A8FD0EFF27F827527D27F8F827F82727%5227272752FFFFA8FFCACAFFFFA9A9FD04FFA8FFFF84AE84A8FFFFCAC3FD%17FFA8FD0BFFA8FD05FFA8A8FD13FF52A8FD06FFA8A8FD0EFF7D7D7DA8A8%A852FD047DA852527DA8A8FD04FFCACAFFFFFFA9FD06FF84A8FFAEA8FD04%FFC3FD29FFA8FD15FFA852FF7D7D7DA8A8FFA8FFFFFFA8FFFFFFA8FFA8FF%A8FD0CFFA8A8FD05FFA8FFC3FFAFFFA9A9CFFFFFFF8384A8FFA8FF8384FF%FFAF839AFFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFF%FFA8FFFFFFA8FFA8FFA8FFFFFFA8A8FD12FFA852FFA852A87D52527DA8FD%1AFFA8A8FD07FFCACAFFFFA9A9FFFFFF83AEFD06FF83AEA8A884A8C3FD09%FFA8FD1CFFA8A8FD12FFA852A8FFA8FFFD05A8FD1AFF7DA8FD05FFA8FFCA%FFFFFFA9FFA8AE83FFCBFD07FFA8AEFFFF83AEC3FD25FFA8A8FD13FF52FD%07FFA8A8FD1AFF7DA8FD06FFCACAFFFFFFA984AEA8FD0FFF83CACAFD25FF%A8FD12FFA8527DFD06FFA8A8FD07FFA852527D527D7D5227A87D52527D52%A8527DFF7D7DFD05FFAFCACAFFFFFF7E84FD04FFA8FD0CFFAF83A1A8FD05%FFA8FD0BFFA8FD0BFFA8FD05FFA8A8FD13FF7DA8FD06FFA8FD09FF525227%527D7D527D7DFD04522752277DFF7DA8FD06FFCAFD04FF85AEFD13FFCAA1%A8FD23FFA8FD12FFA87DA8FD06FFA8A8FD1AFF7D7DFD05FFAFCACAFFFFFF%59FD05FFA8FD0FFFC48384FD0FFFA8FD0BFFA8FD05FFA8A8FD13FF52FD07%FFA8A8FD08FFA87D52A87D7D7DA87D7D52A87DA8A87D52FF7DA8FD06FFCA%FFFFFFAF84FD16FFC3A8AEFD21FFA8FD12FFA8527DFFA8FFFD05A8FD08FF%7D27522727F852FD052752527D277DFF7DA8FD05FFA8CAFFFFFFA983FD05%FFA8FD0BFFA8FD04FFCAA18AFD0EFFA8FD11FFA8A8FD12FFA852FFA852A8%FD047DA8FD0AFFA8FFA8FD0DFF7DA8FD06FFCAFFFFFF84AFFD17FFCA83FF%FFFFA8FD1CFFA8A8FD12FF527DA8A852A8FD047DA8FD0EFFA87DA87DA852%7D7D7D52FFFF7D7DFD05FFA1FD04FF84A8FD05FFA8FD0BFFA8FD05FFCAC3%83FFA8FD0BFFA8FD0BFFA8FD05FFA8A8FD13FFA8FD07FFA8FD0FFF272752%5227275227F852FFFF527DFD05FFCACAFFFFFF59FD19FFC3AE84AE84FD1D%FFA8FD1BFFA8A8FD0FFFA8FF7DA8FD04FFA8FFFF7D7DFD05FFA1FFFFFFA8%7EA9FD05FFA8FD12FFCAC4FFFF84A8FD09FFA8FD0BFFA8FD05FFA8A8FD1B%FFA8FD05FFA8FD05FFA8FFFFFFA8FF7DFFA8FFFFFFA8FD09FFCACAFFFFFF%AE7EFD1AFFCAFFFFFF8AFD1CFFA8FD1BFFA8A8FFFFFFA8F82727F8522752%27522727F8272752F8272752527DFD07FFCAA8FFFFFF8485FD06FFA8FD13%FFCACAFFFFA884FD08FFA8FD0BFFA8FD05FFA8A8FD1BFFA8A8FD04FF52A8%7DA8FD057DA87D7DA8A87D7D7DA87D7DA8FD07FFC3FD04FFA8A9FD1BFFC3%FFFFFFA8AEFD1AFFA8FD1BFFA8A8FD17FF7DFD07FFCACAAFFFFFFF7DA9FD%06FFA8FD0BFFA8FD09FFC3FFFFFF83AEFD06FFA8FD0BFFA8FD05FFA8A8FD%15FFA87DFFA87DA87DA8FD17FF7DA8FD06FFCACAFFFFFFAE84A9FD1CFFCA%C3FFFFFF83AE84FD17FFA8FD15FFA852A8527D527D7DFFA8FFA8FFA8FFFF%FFA8FFA8FFA8FFFFFFA8FFA8FFA8FF52A8FFFFA8FFA8FFC3FFA8FFFFA87E%FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFAE%C3A8FFFFFFA8FF83AECBFFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFF7D%A8FD16FFFD05A87DFD18FF7DA8FD06FFCAFD04FFAEA9A9FD1EFFCACAFD05%FF83FD15FFA8FD1BFFA8A8FD0BFFA8FD0BFF52FD06FFCAC3FFA8FFA8AE7F%FD07FFA8FD15FFA8FFCAC3CAFD04FFAE83FFA8FD0BFFA8FD05FFA8A8FD1B%FFA8FD18FF7DA8FD05FFC3FD05FF84A9FD21FFCACAFD04FFAF83AFFD12FF%A8FD1BFFA8A8FD17FF52FD05FFCACAFFFFA8FFA8A8A9FD07FFA8FD1AFFCA%C3FD05FF83A8A8FFA8FD07FFA8FD05FFA8A8FD1BFFA8A8FD17FF7DA8FD04%FFCAFD04FFAE84A9A9FD23FFCAC3FFCAFFFFFFAEAEA8AE83AFFD0CFFA8FD%1BFFA8A8FD17FF27A8FFFFFFCACAFFFFFF8384AECBA8FD07FFA8FD0BFFA8%FD11FFC3CAC3FFAFFD05FF83A883AEAEFFA8FD05FFA8A8FD19FFA8FFA8FD%18FF7DA8FFFFFFC3FFFFFF84AEFFFFA9FD29FFC3FD09FFA8AEFD08FFA8FD%15FFA852FF7D7D7DA87DFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8%FFA8FFA8FFA8FFA8CAA8FF83A8A8FFCFA9A8FFFFFFA8FFA8FFA8FFFFFFA8%FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFAFFFA1%CAA8CAAFFFA8FFFFFFA883A8FFCBFFFFFF7DA8FD15FFA87DA8FD047DA8FD%0AFFA8FD0BFFA8FD05FFA1AE83FD05FFA9FD2BFFCACAC3CACAFD05FFA8A8%A8AEA8FFFFFFA8FD16FFA8FFA8FFA8A8A8FD0BFFA8FD0FFFC383AEFFFFFF%A8FFA9A9FD08FFA8FD15FFA8FD0BFFA8FFFFFFCACAC3CACAFFFFFFA8FFA8%A883AE83A8FD1BFFA8FD1CFFC9A8FD07FFA9FD31FFFD05CAFD06FFAFA8FD%1BFFA8A8FD07FFCACAFD12FF7CFD05FFA8FFA9A9FD08FFA8FD21FFA8FD09%FFCACAA1CAC3CACAFFA8A8FD1BFFA8A8FD06FFFD04CAA7FFCBFFFD05CAFF%CBFD05FFC3A7FD08FFA9FD3AFFCACACAA8FD1BFFA8A1CAC3CACACAC3CAAE%AF83A77CA1A1CAA1A77DA7A0A1A1C9A1C9A1A1A8FD05FFA8FFA9A9FD08FF%A8FD0BFFA8FD15FFA8FD0BFFA8FD05FFA8A8FD1BFFA8FD04FFCAA8AEAEAE%A8FFFFFFAEAFAEAFFD04FFAFFFA7A8A7AEFD09FFA9FD3EFFA8FD15FFA87D%FF7DA87DA87DA87D84838484A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8A8A9%FFA8FFA8A9A8FFA8FF7D7FA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8%FFA8A8A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FD15FF7D52A87D52527D7D7D7E7DA8%7EA87EA87EA87D7E7E7E7DA87EA87DA87EA87DA87EA87DA87EA87DA87E7E%7DA87EFD0DA87DA8A8A87DA87DFD05A87DFD05A87DFD0DA87DFD07A87DFD%08A8FD16FF7DA87D7D5252A87D7DA8FD04FFA8A87DA87D7D7DFD05FF7DA8%7D7D527DA7FD04FFCF7DA8FD047DFD05FFFD067DA8FD04FFA8A8FD047D52%FD05FF7D7D7DA87D7D7DFD05FF7D7D7DA87D7DFD05FFA87D7D7DA87DA8FD%04FFA8FD18FF7DA827A87D7D7DFD05FF7D7D52A87D52A8FD04FF7D7DFD04%527DFD04FFA87D7D52277D52FD05FF7D7D527D27527DFD05FF7D7D525252%7DA8FD04FF7D527D5252527DFD04FFA87D7D52527D52FD05FF7D7D527D52%7D52FD1DFFFD04A8FFA8A8FD04FFFD05A8FF7DFD05FF7DFD06A8FD05FF7D%FD05A8FD05FFA87DFD04A8FD05FFFD06A87DFD05FF7DFD06A8FD04FFA87D%FD06A8FD04FFFD07A8FD4FFF7DA8FFFFA8FD7AFFA85227522752A8FD7BFF%A87DA8A8FDFCFFFDBFFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2014-08-07T21:52:35-07:00</xap:CreateDate>
         <xap:ModifyDate>2014-08-07T23:24:45-07:00</xap:ModifyDate>
         <xap:MetadataDate>2014-08-07T23:24:45-07:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>192</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYql+r6jdWhs4rS3juLi9nMCLLKYUWkMkxYsqSnpF&#xA;SnHFVL6z5q/6t1j/ANJ03/ZJirvrPmr/AKt1j/0nTf8AZJiqAuvM2pWjXS3EOmxvZRie6Q303JI2&#xA;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</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:A6AB30840920E4118EC0CEC0D3579FA0</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:CEF2D2641620E4118EC0CEC0D3579FA0</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>282.222222</stDim:w>
            <stDim:h>211.666667</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.062;PS 2.000;hotconv 1.0.57;makeotf.lib2.0.21895</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -432 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 432 li
576 432 li
576 0 li
cp
clp
[1 0 0 1 0 0 ]ct
0 432 mo
576 432 li
576 0 li
0 0 li
0 432 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
72 388.8 mo
82.3813 388.8 li
92.7627 388.8 li
103.144 388.8 li
113.526 388.8 li
123.907 388.65 li
134.288 388.8 li
144.67 388.8 li
155.051 388.8 li
165.433 388.8 li
175.814 388.8 li
186.195 388.8 li
196.577 388.8 li
206.958 388.8 li
217.34 388.8 li
227.721 388.8 li
238.102 378.172 li
248.484 299.571 li
258.865 210.713 li
269.247 188.452 li
279.628 137.906 li
290.009 104.211 li
300.391 89.9839 li
310.772 76.4492 li
321.153 83.2832 li
331.535 82.5649 li
341.916 59.248 li
352.298 51.4971 li
362.679 44.8652 li
373.06 63.334 li
383.442 91.0908 li
393.823 108.377 li
404.205 126.067 li
414.586 122.394 li
424.967 122.747 li
435.349 119.548 li
445.73 120.228 li
456.112 114.036 li
466.493 128.395 li
476.874 135.57 li
487.256 128.987 li
497.637 129.084 li
508.02 131.786 li
518.4 137.914 li
0 0 1 rgb
@
72 388.619 mo
82.3813 386.334 li
92.7627 383.861 li
103.144 381.234 li
113.526 379.088 li
123.907 374.861 li
134.288 378.58 li
144.67 378.633 li
155.051 374.839 li
165.433 376.134 li
175.814 378.481 li
186.195 379.96 li
196.577 377.174 li
206.958 353.845 li
217.34 351.215 li
227.721 341.998 li
238.102 334.068 li
248.484 282.383 li
258.865 245.601 li
269.247 242.014 li
279.628 234.48 li
290.009 229.097 li
300.391 216.517 li
310.772 232.896 li
321.153 240.028 li
331.535 231.907 li
341.916 248.783 li
352.298 250.927 li
362.679 261.889 li
373.06 281.412 li
383.442 280.695 li
393.823 296.562 li
404.205 310.064 li
414.586 309.157 li
424.967 323.757 li
435.349 329.791 li
445.73 334.152 li
456.112 335.125 li
466.493 340.806 li
476.874 342.54 li
487.256 352.99 li
497.637 355.162 li
508.02 357.708 li
518.4 359.729 li
0 0.501961 0 rgb
@
72 375.574 mo
82.3813 375.944 li
92.7627 378.411 li
103.144 376.135 li
113.526 368.103 li
123.907 373.362 li
134.288 374.783 li
144.67 373.407 li
155.051 372.671 li
165.433 374.828 li
175.814 375.901 li
186.195 377.056 li
196.577 374.146 li
206.958 339.654 li
217.34 319.598 li
227.721 283.521 li
238.102 228.877 li
248.484 167.7 li
258.865 81.4868 li
269.247 139.128 li
279.628 149.307 li
290.009 163.956 li
300.391 185.884 li
310.772 191.468 li
321.153 219.194 li
331.535 228.64 li
341.916 237.215 li
352.298 254.792 li
362.679 271.931 li
373.06 292.941 li
383.442 309.883 li
393.823 322.055 li
404.205 329.93 li
414.586 338.267 li
424.967 339.702 li
435.349 350.706 li
445.73 351.263 li
456.112 355.455 li
466.493 359.106 li
476.874 363.169 li
487.256 365.138 li
497.637 365.854 li
508.02 369.533 li
518.4 370.352 li
1 0 0 rgb
@
0.5 lw
0 lc
[1 3 ] 0 dsh
72 388.8 mo
72 43.2002 li
0 0 0 rgb
@
grestore
72 388.8 mo
72 384.8 li
0 0 0 rgb
f
0.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
72 388.8 mo
72 384.8 li
@
72 43.2002 mo
72 47.2002 li
f
72 43.2002 mo
72 47.2002 li
@
59.3281 400.764 mo
61.2598 400.764 li
61.2598 394.092 li
59.1602 394.512 li
59.1602 393.432 li
61.248 393.012 li
62.436 393.012 li
62.436 400.764 li
64.3682 400.764 li
64.3682 401.76 li
59.3281 401.76 li
59.3281 400.764 li
59.3281 400.764 li
cp
ef
69.1919 397.872 mo
69.7202 397.872 70.1401 397.692 70.4521 397.332 cv
70.7642 396.972 70.9199 396.468 70.9199 395.832 cv
70.9199 395.208 70.7642 394.704 70.4521 394.344 cv
70.1401 393.984 69.7202 393.792 69.1919 393.792 cv
68.6641 393.792 68.2441 393.984 67.9321 394.344 cv
67.6201 394.704 67.4639 395.208 67.4639 395.832 cv
67.4639 396.468 67.6201 396.972 67.9321 397.332 cv
68.2441 397.692 68.6641 397.872 69.1919 397.872 cv
69.1919 397.872 li
cp
66.8398 401.58 mo
66.8398 400.5 li
67.1279 400.644 67.4282 400.752 67.7402 400.824 cv
68.04 400.896 68.3398 400.932 68.6401 400.932 cv
69.4082 400.932 70.0078 400.68 70.416 400.152 cv
70.8242 399.624 71.064 398.832 71.1362 397.752 cv
70.896 398.088 70.6079 398.352 70.272 398.532 cv
69.9238 398.712 69.54 398.796 69.1201 398.796 cv
68.2319 398.796 67.5361 398.532 67.0322 398.004 cv
66.5278 397.476 66.2759 396.756 66.2759 395.832 cv
66.2759 394.944 66.54 394.224 67.0679 393.672 cv
67.5962 393.132 68.3042 392.856 69.1919 392.856 cv
70.2002 392.856 70.98 393.252 71.5078 394.02 cv
72.0361 394.8 72.312 395.928 72.312 397.392 cv
72.312 398.784 71.9761 399.876 71.3281 400.692 cv
70.668 401.508 69.792 401.916 68.688 401.916 cv
68.3882 401.916 68.0879 401.88 67.7881 401.832 cv
67.4761 401.784 67.1641 401.7 66.8398 401.58 cv
ef
73.9438 393.012 mo
79.5718 393.012 li
79.5718 393.516 li
76.3921 401.76 li
75.1558 401.76 li
78.144 394.008 li
73.9438 394.008 li
73.9438 393.012 li
73.9438 393.012 li
cp
ef
84.4561 392.856 mo
85.4282 392.856 86.1719 393.252 86.7002 394.02 cv
87.2158 394.8 87.48 395.928 87.48 397.392 cv
87.48 398.868 87.2158 399.996 86.7002 400.764 cv
86.1719 401.532 85.4282 401.916 84.4561 401.916 cv
83.4722 401.916 82.7158 401.532 82.2002 400.764 cv
81.6841 399.996 81.4321 398.868 81.4321 397.392 cv
81.4321 395.928 81.6841 394.8 82.2002 394.02 cv
82.7158 393.252 83.4722 392.856 84.4561 392.856 cv
84.4561 392.856 li
cp
84.4561 393.792 mo
83.8438 393.792 83.3882 394.092 83.0762 394.692 cv
82.7642 395.292 82.6201 396.192 82.6201 397.392 cv
82.6201 398.592 82.7642 399.492 83.0762 400.092 cv
83.3882 400.692 83.8438 400.992 84.4561 400.992 cv
85.0679 400.992 85.5239 400.692 85.8359 400.092 cv
86.1362 399.492 86.292 398.592 86.292 397.392 cv
86.292 396.192 86.1362 395.292 85.8359 394.692 cv
85.5239 394.092 85.0679 393.792 84.4561 393.792 cv
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
123.907 388.8 mo
123.907 43.2002 li
@
grestore
123.907 388.8 mo
123.907 384.8 li
f
123.907 388.8 mo
123.907 384.8 li
@
123.907 43.2002 mo
123.907 47.2002 li
f
123.907 43.2002 mo
123.907 47.2002 li
@
111.408 400.764 mo
113.34 400.764 li
113.34 394.092 li
111.24 394.512 li
111.24 393.432 li
113.328 393.012 li
114.516 393.012 li
114.516 400.764 li
116.448 400.764 li
116.448 401.76 li
111.408 401.76 li
111.408 400.764 li
111.408 400.764 li
cp
ef
121.032 397.872 mo
121.56 397.872 121.98 397.692 122.292 397.332 cv
122.604 396.972 122.76 396.468 122.76 395.832 cv
122.76 395.208 122.604 394.704 122.292 394.344 cv
121.98 393.984 121.56 393.792 121.032 393.792 cv
120.504 393.792 120.084 393.984 119.772 394.344 cv
119.46 394.704 119.304 395.208 119.304 395.832 cv
119.304 396.468 119.46 396.972 119.772 397.332 cv
120.084 397.692 120.504 397.872 121.032 397.872 cv
121.032 397.872 li
cp
118.68 401.58 mo
118.68 400.5 li
118.968 400.644 119.268 400.752 119.58 400.824 cv
119.88 400.896 120.18 400.932 120.48 400.932 cv
121.248 400.932 121.848 400.68 122.256 400.152 cv
122.664 399.624 122.904 398.832 122.976 397.752 cv
122.736 398.088 122.448 398.352 122.112 398.532 cv
121.764 398.712 121.38 398.796 120.96 398.796 cv
120.072 398.796 119.376 398.532 118.872 398.004 cv
118.368 397.476 118.116 396.756 118.116 395.832 cv
118.116 394.944 118.38 394.224 118.908 393.672 cv
119.436 393.132 120.144 392.856 121.032 392.856 cv
122.04 392.856 122.82 393.252 123.348 394.02 cv
123.876 394.8 124.152 395.928 124.152 397.392 cv
124.152 398.784 123.816 399.876 123.168 400.692 cv
122.508 401.508 121.632 401.916 120.528 401.916 cv
120.228 401.916 119.928 401.88 119.628 401.832 cv
119.316 401.784 119.004 401.7 118.68 401.58 cv
ef
126.024 393.012 mo
131.652 393.012 li
131.652 393.516 li
128.472 401.76 li
127.236 401.76 li
130.224 394.008 li
126.024 394.008 li
126.024 393.012 li
126.024 393.012 li
cp
ef
134.016 393.012 mo
138.66 393.012 li
138.66 394.008 li
135.096 394.008 li
135.096 396.156 li
135.264 396.096 135.444 396.048 135.612 396.024 cv
135.78 396 135.96 395.976 136.128 395.976 cv
137.1 395.976 137.868 396.252 138.444 396.78 cv
139.02 397.32 139.308 398.04 139.308 398.952 cv
139.308 399.9 139.008 400.632 138.42 401.148 cv
137.832 401.664 137.004 401.916 135.948 401.916 cv
135.576 401.916 135.204 401.88 134.82 401.832 cv
134.436 401.771 134.052 401.688 133.644 401.556 cv
133.644 400.368 li
133.992 400.56 134.352 400.704 134.736 400.8 cv
135.108 400.896 135.504 400.932 135.924 400.932 cv
136.596 400.932 137.136 400.764 137.532 400.404 cv
137.916 400.044 138.12 399.564 138.12 398.952 cv
138.12 398.352 137.916 397.872 137.532 397.512 cv
137.136 397.152 136.596 396.972 135.924 396.972 cv
135.612 396.972 135.288 397.008 134.976 397.08 cv
134.664 397.152 134.34 397.26 134.016 397.404 cv
134.016 393.012 li
134.016 393.012 li
cp
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
175.814 388.8 mo
175.814 43.2002 li
@
grestore
175.814 388.8 mo
175.814 384.8 li
f
175.814 388.8 mo
175.814 384.8 li
@
175.814 43.2002 mo
175.814 47.2002 li
f
175.814 43.2002 mo
175.814 47.2002 li
@
163.008 400.764 mo
164.94 400.764 li
164.94 394.092 li
162.84 394.512 li
162.84 393.432 li
164.928 393.012 li
166.116 393.012 li
166.116 400.764 li
168.048 400.764 li
168.048 401.76 li
163.008 401.76 li
163.008 400.764 li
163.008 400.764 li
cp
ef
172.872 397.872 mo
173.4 397.872 173.82 397.692 174.132 397.332 cv
174.444 396.972 174.6 396.468 174.6 395.832 cv
174.6 395.208 174.444 394.704 174.132 394.344 cv
173.82 393.984 173.4 393.792 172.872 393.792 cv
172.344 393.792 171.924 393.984 171.612 394.344 cv
171.3 394.704 171.144 395.208 171.144 395.832 cv
171.144 396.468 171.3 396.972 171.612 397.332 cv
171.924 397.692 172.344 397.872 172.872 397.872 cv
172.872 397.872 li
cp
170.52 401.58 mo
170.52 400.5 li
170.808 400.644 171.108 400.752 171.42 400.824 cv
171.72 400.896 172.02 400.932 172.32 400.932 cv
173.088 400.932 173.688 400.68 174.096 400.152 cv
174.504 399.624 174.744 398.832 174.816 397.752 cv
174.576 398.088 174.288 398.352 173.952 398.532 cv
173.604 398.712 173.22 398.796 172.8 398.796 cv
171.912 398.796 171.216 398.532 170.712 398.004 cv
170.208 397.476 169.956 396.756 169.956 395.832 cv
169.956 394.944 170.22 394.224 170.748 393.672 cv
171.276 393.132 171.984 392.856 172.872 392.856 cv
173.88 392.856 174.66 393.252 175.188 394.02 cv
175.716 394.8 175.992 395.928 175.992 397.392 cv
175.992 398.784 175.656 399.876 175.008 400.692 cv
174.348 401.508 173.472 401.916 172.368 401.916 cv
172.068 401.916 171.768 401.88 171.468 401.832 cv
171.156 401.784 170.844 401.7 170.52 401.58 cv
ef
179.076 395.232 mo
179.076 395.688 179.208 396.048 179.496 396.3 cv
179.784 396.552 180.18 396.672 180.696 396.672 cv
181.2 396.672 181.596 396.552 181.884 396.3 cv
182.172 396.048 182.316 395.688 182.316 395.232 cv
182.316 394.776 182.172 394.428 181.884 394.176 cv
181.596 393.924 181.2 393.792 180.696 393.792 cv
180.18 393.792 179.784 393.924 179.496 394.176 cv
179.208 394.428 179.076 394.776 179.076 395.232 cv
179.076 395.232 li
cp
179.508 397.104 mo
179.004 396.984 178.608 396.744 178.32 396.396 cv
178.032 396.048 177.9 395.628 177.9 395.124 cv
177.9 394.428 178.14 393.876 178.644 393.468 cv
179.136 393.06 179.82 392.856 180.696 392.856 cv
181.56 392.856 182.244 393.06 182.748 393.468 cv
183.24 393.876 183.492 394.428 183.492 395.124 cv
183.492 395.628 183.348 396.048 183.06 396.396 cv
182.772 396.744 182.388 396.984 181.884 397.104 cv
182.448 397.236 182.892 397.5 183.216 397.884 cv
183.528 398.268 183.696 398.748 183.696 399.3 cv
183.696 400.152 183.432 400.8 182.916 401.244 cv
182.388 401.7 181.656 401.916 180.696 401.916 cv
179.724 401.916 178.98 401.7 178.464 401.244 cv
177.948 400.8 177.696 400.152 177.696 399.3 cv
177.696 398.748 177.852 398.268 178.176 397.884 cv
178.488 397.5 178.932 397.236 179.508 397.104 cv
180.696 397.608 mo
180.132 397.608 179.688 397.764 179.364 398.064 cv
179.04 398.364 178.884 398.771 178.884 399.3 cv
178.884 399.828 179.04 400.248 179.364 400.548 cv
179.688 400.848 180.132 400.992 180.696 400.992 cv
181.248 400.992 181.692 400.848 182.016 400.536 cv
182.34 400.236 182.508 399.828 182.508 399.3 cv
182.508 398.771 182.34 398.364 182.028 398.064 cv
181.704 397.764 181.26 397.608 180.696 397.608 cv
ef
188.376 392.856 mo
189.348 392.856 190.092 393.252 190.62 394.02 cv
191.136 394.8 191.4 395.928 191.4 397.392 cv
191.4 398.868 191.136 399.996 190.62 400.764 cv
190.092 401.532 189.348 401.916 188.376 401.916 cv
187.392 401.916 186.636 401.532 186.12 400.764 cv
185.604 399.996 185.352 398.868 185.352 397.392 cv
185.352 395.928 185.604 394.8 186.12 394.02 cv
186.636 393.252 187.392 392.856 188.376 392.856 cv
188.376 392.856 li
cp
188.376 393.792 mo
187.764 393.792 187.308 394.092 186.996 394.692 cv
186.684 395.292 186.54 396.192 186.54 397.392 cv
186.54 398.592 186.684 399.492 186.996 400.092 cv
187.308 400.692 187.764 400.992 188.376 400.992 cv
188.988 400.992 189.444 400.692 189.756 400.092 cv
190.056 399.492 190.212 398.592 190.212 397.392 cv
190.212 396.192 190.056 395.292 189.756 394.692 cv
189.444 394.092 188.988 393.792 188.376 393.792 cv
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
227.721 388.8 mo
227.721 43.2002 li
@
grestore
227.721 388.8 mo
227.721 384.8 li
f
227.721 388.8 mo
227.721 384.8 li
@
227.721 43.2002 mo
227.721 47.2002 li
f
227.721 43.2002 mo
227.721 47.2002 li
@
215.088 400.764 mo
217.02 400.764 li
217.02 394.092 li
214.92 394.512 li
214.92 393.432 li
217.008 393.012 li
218.196 393.012 li
218.196 400.764 li
220.128 400.764 li
220.128 401.76 li
215.088 401.76 li
215.088 400.764 li
215.088 400.764 li
cp
ef
224.952 397.872 mo
225.48 397.872 225.9 397.692 226.212 397.332 cv
226.524 396.972 226.68 396.468 226.68 395.832 cv
226.68 395.208 226.524 394.704 226.212 394.344 cv
225.9 393.984 225.48 393.792 224.952 393.792 cv
224.424 393.792 224.004 393.984 223.692 394.344 cv
223.38 394.704 223.224 395.208 223.224 395.832 cv
223.224 396.468 223.38 396.972 223.692 397.332 cv
224.004 397.692 224.424 397.872 224.952 397.872 cv
224.952 397.872 li
cp
222.6 401.58 mo
222.6 400.5 li
222.888 400.644 223.188 400.752 223.5 400.824 cv
223.8 400.896 224.1 400.932 224.4 400.932 cv
225.168 400.932 225.768 400.68 226.176 400.152 cv
226.584 399.624 226.824 398.832 226.896 397.752 cv
226.656 398.088 226.368 398.352 226.032 398.532 cv
225.684 398.712 225.3 398.796 224.88 398.796 cv
223.992 398.796 223.296 398.532 222.792 398.004 cv
222.288 397.476 222.036 396.756 222.036 395.832 cv
222.036 394.944 222.3 394.224 222.828 393.672 cv
223.356 393.132 224.064 392.856 224.952 392.856 cv
225.96 392.856 226.74 393.252 227.268 394.02 cv
227.796 394.8 228.072 395.928 228.072 397.392 cv
228.072 398.784 227.736 399.876 227.088 400.692 cv
226.428 401.508 225.552 401.916 224.448 401.916 cv
224.148 401.916 223.848 401.88 223.548 401.832 cv
223.236 401.784 222.924 401.7 222.6 401.58 cv
ef
231.156 395.232 mo
231.156 395.688 231.288 396.048 231.576 396.3 cv
231.864 396.552 232.26 396.672 232.776 396.672 cv
233.28 396.672 233.676 396.552 233.964 396.3 cv
234.252 396.048 234.396 395.688 234.396 395.232 cv
234.396 394.776 234.252 394.428 233.964 394.176 cv
233.676 393.924 233.28 393.792 232.776 393.792 cv
232.26 393.792 231.864 393.924 231.576 394.176 cv
231.288 394.428 231.156 394.776 231.156 395.232 cv
231.156 395.232 li
cp
231.588 397.104 mo
231.084 396.984 230.688 396.744 230.4 396.396 cv
230.112 396.048 229.98 395.628 229.98 395.124 cv
229.98 394.428 230.22 393.876 230.724 393.468 cv
231.216 393.06 231.9 392.856 232.776 392.856 cv
233.64 392.856 234.324 393.06 234.828 393.468 cv
235.32 393.876 235.572 394.428 235.572 395.124 cv
235.572 395.628 235.428 396.048 235.14 396.396 cv
234.852 396.744 234.468 396.984 233.964 397.104 cv
234.528 397.236 234.972 397.5 235.296 397.884 cv
235.608 398.268 235.776 398.748 235.776 399.3 cv
235.776 400.152 235.512 400.8 234.996 401.244 cv
234.468 401.7 233.736 401.916 232.776 401.916 cv
231.804 401.916 231.06 401.7 230.544 401.244 cv
230.028 400.8 229.776 400.152 229.776 399.3 cv
229.776 398.748 229.932 398.268 230.256 397.884 cv
230.568 397.5 231.012 397.236 231.588 397.104 cv
232.776 397.608 mo
232.212 397.608 231.768 397.764 231.444 398.064 cv
231.12 398.364 230.964 398.771 230.964 399.3 cv
230.964 399.828 231.12 400.248 231.444 400.548 cv
231.768 400.848 232.212 400.992 232.776 400.992 cv
233.328 400.992 233.772 400.848 234.096 400.536 cv
234.42 400.236 234.588 399.828 234.588 399.3 cv
234.588 398.771 234.42 398.364 234.108 398.064 cv
233.784 397.764 233.34 397.608 232.776 397.608 cv
ef
237.936 393.012 mo
242.58 393.012 li
242.58 394.008 li
239.016 394.008 li
239.016 396.156 li
239.184 396.096 239.364 396.048 239.532 396.024 cv
239.7 396 239.88 395.976 240.048 395.976 cv
241.02 395.976 241.788 396.252 242.364 396.78 cv
242.94 397.32 243.228 398.04 243.228 398.952 cv
243.228 399.9 242.928 400.632 242.34 401.148 cv
241.752 401.664 240.924 401.916 239.868 401.916 cv
239.496 401.916 239.124 401.88 238.74 401.832 cv
238.356 401.771 237.972 401.688 237.564 401.556 cv
237.564 400.368 li
237.912 400.56 238.272 400.704 238.656 400.8 cv
239.028 400.896 239.424 400.932 239.844 400.932 cv
240.516 400.932 241.056 400.764 241.452 400.404 cv
241.836 400.044 242.04 399.564 242.04 398.952 cv
242.04 398.352 241.836 397.872 241.452 397.512 cv
241.056 397.152 240.516 396.972 239.844 396.972 cv
239.532 396.972 239.208 397.008 238.896 397.08 cv
238.584 397.152 238.26 397.26 237.936 397.404 cv
237.936 393.012 li
237.936 393.012 li
cp
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
279.628 388.8 mo
279.628 43.2002 li
@
grestore
279.628 388.8 mo
279.628 384.8 li
f
279.628 388.8 mo
279.628 384.8 li
@
279.628 43.2002 mo
279.628 47.2002 li
f
279.628 43.2002 mo
279.628 47.2002 li
@
266.928 400.764 mo
268.86 400.764 li
268.86 394.092 li
266.76 394.512 li
266.76 393.432 li
268.848 393.012 li
270.036 393.012 li
270.036 400.764 li
271.968 400.764 li
271.968 401.76 li
266.928 401.76 li
266.928 400.764 li
266.928 400.764 li
cp
ef
276.792 397.872 mo
277.32 397.872 277.74 397.692 278.052 397.332 cv
278.364 396.972 278.52 396.468 278.52 395.832 cv
278.52 395.208 278.364 394.704 278.052 394.344 cv
277.74 393.984 277.32 393.792 276.792 393.792 cv
276.264 393.792 275.844 393.984 275.532 394.344 cv
275.22 394.704 275.064 395.208 275.064 395.832 cv
275.064 396.468 275.22 396.972 275.532 397.332 cv
275.844 397.692 276.264 397.872 276.792 397.872 cv
276.792 397.872 li
cp
274.44 401.58 mo
274.44 400.5 li
274.728 400.644 275.028 400.752 275.34 400.824 cv
275.64 400.896 275.94 400.932 276.24 400.932 cv
277.008 400.932 277.608 400.68 278.016 400.152 cv
278.424 399.624 278.664 398.832 278.736 397.752 cv
278.496 398.088 278.208 398.352 277.872 398.532 cv
277.524 398.712 277.14 398.796 276.72 398.796 cv
275.832 398.796 275.136 398.532 274.632 398.004 cv
274.128 397.476 273.876 396.756 273.876 395.832 cv
273.876 394.944 274.14 394.224 274.668 393.672 cv
275.196 393.132 275.904 392.856 276.792 392.856 cv
277.8 392.856 278.58 393.252 279.108 394.02 cv
279.636 394.8 279.912 395.928 279.912 397.392 cv
279.912 398.784 279.576 399.876 278.928 400.692 cv
278.268 401.508 277.392 401.916 276.288 401.916 cv
275.988 401.916 275.688 401.88 275.388 401.832 cv
275.076 401.784 274.764 401.7 274.44 401.58 cv
ef
284.232 397.872 mo
284.76 397.872 285.18 397.692 285.492 397.332 cv
285.804 396.972 285.96 396.468 285.96 395.832 cv
285.96 395.208 285.804 394.704 285.492 394.344 cv
285.18 393.984 284.76 393.792 284.232 393.792 cv
283.704 393.792 283.284 393.984 282.972 394.344 cv
282.66 394.704 282.504 395.208 282.504 395.832 cv
282.504 396.468 282.66 396.972 282.972 397.332 cv
283.284 397.692 283.704 397.872 284.232 397.872 cv
284.232 397.872 li
cp
281.88 401.58 mo
281.88 400.5 li
282.168 400.644 282.468 400.752 282.78 400.824 cv
283.08 400.896 283.38 400.932 283.68 400.932 cv
284.448 400.932 285.048 400.68 285.456 400.152 cv
285.864 399.624 286.104 398.832 286.176 397.752 cv
285.936 398.088 285.648 398.352 285.312 398.532 cv
284.964 398.712 284.58 398.796 284.16 398.796 cv
283.272 398.796 282.576 398.532 282.072 398.004 cv
281.568 397.476 281.316 396.756 281.316 395.832 cv
281.316 394.944 281.58 394.224 282.108 393.672 cv
282.636 393.132 283.344 392.856 284.232 392.856 cv
285.24 392.856 286.02 393.252 286.548 394.02 cv
287.076 394.8 287.352 395.928 287.352 397.392 cv
287.352 398.784 287.016 399.876 286.368 400.692 cv
285.708 401.508 284.832 401.916 283.728 401.916 cv
283.428 401.916 283.128 401.88 282.828 401.832 cv
282.516 401.784 282.204 401.7 281.88 401.58 cv
ef
292.056 392.856 mo
293.028 392.856 293.772 393.252 294.3 394.02 cv
294.816 394.8 295.08 395.928 295.08 397.392 cv
295.08 398.868 294.816 399.996 294.3 400.764 cv
293.772 401.532 293.028 401.916 292.056 401.916 cv
291.072 401.916 290.316 401.532 289.8 400.764 cv
289.284 399.996 289.032 398.868 289.032 397.392 cv
289.032 395.928 289.284 394.8 289.8 394.02 cv
290.316 393.252 291.072 392.856 292.056 392.856 cv
292.056 392.856 li
cp
292.056 393.792 mo
291.444 393.792 290.988 394.092 290.676 394.692 cv
290.364 395.292 290.22 396.192 290.22 397.392 cv
290.22 398.592 290.364 399.492 290.676 400.092 cv
290.988 400.692 291.444 400.992 292.056 400.992 cv
292.668 400.992 293.124 400.692 293.436 400.092 cv
293.736 399.492 293.892 398.592 293.892 397.392 cv
293.892 396.192 293.736 395.292 293.436 394.692 cv
293.124 394.092 292.668 393.792 292.056 393.792 cv
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
331.535 388.8 mo
331.535 43.2002 li
@
grestore
331.535 388.8 mo
331.535 384.8 li
f
331.535 388.8 mo
331.535 384.8 li
@
331.535 43.2002 mo
331.535 47.2002 li
f
331.535 43.2002 mo
331.535 47.2002 li
@
319.008 400.764 mo
320.94 400.764 li
320.94 394.092 li
318.84 394.512 li
318.84 393.432 li
320.928 393.012 li
322.116 393.012 li
322.116 400.764 li
324.048 400.764 li
324.048 401.76 li
319.008 401.76 li
319.008 400.764 li
319.008 400.764 li
cp
ef
328.632 397.872 mo
329.16 397.872 329.58 397.692 329.892 397.332 cv
330.204 396.972 330.36 396.468 330.36 395.832 cv
330.36 395.208 330.204 394.704 329.892 394.344 cv
329.58 393.984 329.16 393.792 328.632 393.792 cv
328.104 393.792 327.684 393.984 327.372 394.344 cv
327.06 394.704 326.904 395.208 326.904 395.832 cv
326.904 396.468 327.06 396.972 327.372 397.332 cv
327.684 397.692 328.104 397.872 328.632 397.872 cv
328.632 397.872 li
cp
326.28 401.58 mo
326.28 400.5 li
326.568 400.644 326.868 400.752 327.18 400.824 cv
327.48 400.896 327.78 400.932 328.08 400.932 cv
328.848 400.932 329.448 400.68 329.856 400.152 cv
330.264 399.624 330.504 398.832 330.576 397.752 cv
330.336 398.088 330.048 398.352 329.712 398.532 cv
329.364 398.712 328.98 398.796 328.56 398.796 cv
327.672 398.796 326.976 398.532 326.472 398.004 cv
325.968 397.476 325.716 396.756 325.716 395.832 cv
325.716 394.944 325.98 394.224 326.508 393.672 cv
327.036 393.132 327.744 392.856 328.632 392.856 cv
329.64 392.856 330.42 393.252 330.948 394.02 cv
331.476 394.8 331.752 395.928 331.752 397.392 cv
331.752 398.784 331.416 399.876 330.768 400.692 cv
330.108 401.508 329.232 401.916 328.128 401.916 cv
327.828 401.916 327.528 401.88 327.228 401.832 cv
326.916 401.784 326.604 401.7 326.28 401.58 cv
ef
336.313 397.872 mo
336.84 397.872 337.26 397.692 337.572 397.332 cv
337.884 396.972 338.04 396.468 338.04 395.832 cv
338.04 395.208 337.884 394.704 337.572 394.344 cv
337.26 393.984 336.84 393.792 336.313 393.792 cv
335.784 393.792 335.364 393.984 335.052 394.344 cv
334.74 394.704 334.584 395.208 334.584 395.832 cv
334.584 396.468 334.74 396.972 335.052 397.332 cv
335.364 397.692 335.784 397.872 336.313 397.872 cv
336.313 397.872 li
cp
333.96 401.58 mo
333.96 400.5 li
334.248 400.644 334.548 400.752 334.86 400.824 cv
335.16 400.896 335.46 400.932 335.76 400.932 cv
336.528 400.932 337.128 400.68 337.536 400.152 cv
337.944 399.624 338.184 398.832 338.256 397.752 cv
338.016 398.088 337.728 398.352 337.392 398.532 cv
337.044 398.712 336.66 398.796 336.24 398.796 cv
335.352 398.796 334.656 398.532 334.152 398.004 cv
333.648 397.476 333.396 396.756 333.396 395.832 cv
333.396 394.944 333.66 394.224 334.188 393.672 cv
334.716 393.132 335.424 392.856 336.313 392.856 cv
337.32 392.856 338.1 393.252 338.628 394.02 cv
339.156 394.8 339.432 395.928 339.432 397.392 cv
339.432 398.784 339.096 399.876 338.448 400.692 cv
337.788 401.508 336.912 401.916 335.808 401.916 cv
335.508 401.916 335.208 401.88 334.908 401.832 cv
334.596 401.784 334.284 401.7 333.96 401.58 cv
ef
341.616 393.012 mo
346.26 393.012 li
346.26 394.008 li
342.696 394.008 li
342.696 396.156 li
342.864 396.096 343.044 396.048 343.212 396.024 cv
343.38 396 343.56 395.976 343.728 395.976 cv
344.7 395.976 345.468 396.252 346.044 396.78 cv
346.62 397.32 346.908 398.04 346.908 398.952 cv
346.908 399.9 346.608 400.632 346.02 401.148 cv
345.432 401.664 344.604 401.916 343.548 401.916 cv
343.176 401.916 342.804 401.88 342.42 401.832 cv
342.036 401.771 341.652 401.688 341.244 401.556 cv
341.244 400.368 li
341.592 400.56 341.952 400.704 342.336 400.8 cv
342.708 400.896 343.104 400.932 343.524 400.932 cv
344.196 400.932 344.736 400.764 345.132 400.404 cv
345.516 400.044 345.72 399.564 345.72 398.952 cv
345.72 398.352 345.516 397.872 345.132 397.512 cv
344.736 397.152 344.196 396.972 343.524 396.972 cv
343.212 396.972 342.888 397.008 342.576 397.08 cv
342.264 397.152 341.94 397.26 341.616 397.404 cv
341.616 393.012 li
341.616 393.012 li
cp
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
383.442 388.8 mo
383.442 43.2002 li
@
grestore
383.442 388.8 mo
383.442 384.8 li
f
383.442 388.8 mo
383.442 384.8 li
@
383.442 43.2002 mo
383.442 47.2002 li
f
383.442 43.2002 mo
383.442 47.2002 li
@
371.184 400.764 mo
375.313 400.764 li
375.313 401.76 li
369.756 401.76 li
369.756 400.764 li
370.2 400.308 370.813 399.684 371.592 398.892 cv
372.36 398.112 372.852 397.608 373.056 397.38 cv
373.44 396.96 373.704 396.6 373.848 396.3 cv
373.992 396.012 374.076 395.712 374.076 395.424 cv
374.076 394.968 373.908 394.584 373.584 394.296 cv
373.26 394.008 372.84 393.852 372.313 393.852 cv
371.94 393.852 371.544 393.924 371.136 394.044 cv
370.728 394.176 370.284 394.368 369.816 394.632 cv
369.816 393.432 li
370.296 393.24 370.74 393.096 371.148 393 cv
371.556 392.904 371.94 392.856 372.288 392.856 cv
373.188 392.856 373.908 393.084 374.448 393.54 cv
374.988 393.996 375.264 394.596 375.264 395.352 cv
375.264 395.712 375.192 396.06 375.06 396.372 cv
374.928 396.696 374.688 397.08 374.328 397.512 cv
374.232 397.632 373.92 397.956 373.392 398.496 cv
372.864 399.036 372.132 399.792 371.184 400.764 cv
371.184 400.764 li
cp
ef
380.376 392.856 mo
381.348 392.856 382.092 393.252 382.62 394.02 cv
383.136 394.8 383.4 395.928 383.4 397.392 cv
383.4 398.868 383.136 399.996 382.62 400.764 cv
382.092 401.532 381.348 401.916 380.376 401.916 cv
379.392 401.916 378.636 401.532 378.12 400.764 cv
377.604 399.996 377.352 398.868 377.352 397.392 cv
377.352 395.928 377.604 394.8 378.12 394.02 cv
378.636 393.252 379.392 392.856 380.376 392.856 cv
380.376 392.856 li
cp
380.376 393.792 mo
379.764 393.792 379.308 394.092 378.996 394.692 cv
378.684 395.292 378.54 396.192 378.54 397.392 cv
378.54 398.592 378.684 399.492 378.996 400.092 cv
379.308 400.692 379.764 400.992 380.376 400.992 cv
380.988 400.992 381.444 400.692 381.756 400.092 cv
382.056 399.492 382.212 398.592 382.212 397.392 cv
382.212 396.192 382.056 395.292 381.756 394.692 cv
381.444 394.092 380.988 393.792 380.376 393.792 cv
ef
388.056 392.856 mo
389.028 392.856 389.772 393.252 390.3 394.02 cv
390.816 394.8 391.08 395.928 391.08 397.392 cv
391.08 398.868 390.816 399.996 390.3 400.764 cv
389.772 401.532 389.028 401.916 388.056 401.916 cv
387.072 401.916 386.316 401.532 385.8 400.764 cv
385.284 399.996 385.032 398.868 385.032 397.392 cv
385.032 395.928 385.284 394.8 385.8 394.02 cv
386.316 393.252 387.072 392.856 388.056 392.856 cv
388.056 392.856 li
cp
388.056 393.792 mo
387.444 393.792 386.988 394.092 386.676 394.692 cv
386.364 395.292 386.22 396.192 386.22 397.392 cv
386.22 398.592 386.364 399.492 386.676 400.092 cv
386.988 400.692 387.444 400.992 388.056 400.992 cv
388.668 400.992 389.124 400.692 389.436 400.092 cv
389.736 399.492 389.892 398.592 389.892 397.392 cv
389.892 396.192 389.736 395.292 389.436 394.692 cv
389.124 394.092 388.668 393.792 388.056 393.792 cv
ef
395.736 392.856 mo
396.708 392.856 397.452 393.252 397.98 394.02 cv
398.496 394.8 398.76 395.928 398.76 397.392 cv
398.76 398.868 398.496 399.996 397.98 400.764 cv
397.452 401.532 396.708 401.916 395.736 401.916 cv
394.752 401.916 393.996 401.532 393.48 400.764 cv
392.964 399.996 392.712 398.868 392.712 397.392 cv
392.712 395.928 392.964 394.8 393.48 394.02 cv
393.996 393.252 394.752 392.856 395.736 392.856 cv
395.736 392.856 li
cp
395.736 393.792 mo
395.124 393.792 394.668 394.092 394.356 394.692 cv
394.044 395.292 393.9 396.192 393.9 397.392 cv
393.9 398.592 394.044 399.492 394.356 400.092 cv
394.668 400.692 395.124 400.992 395.736 400.992 cv
396.348 400.992 396.804 400.692 397.116 400.092 cv
397.416 399.492 397.572 398.592 397.572 397.392 cv
397.572 396.192 397.416 395.292 397.116 394.692 cv
396.804 394.092 396.348 393.792 395.736 393.792 cv
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
435.349 388.8 mo
435.349 43.2002 li
@
grestore
435.349 388.8 mo
435.349 384.8 li
f
435.349 388.8 mo
435.349 384.8 li
@
435.349 43.2002 mo
435.349 47.2002 li
f
435.349 43.2002 mo
435.349 47.2002 li
@
423.264 400.764 mo
427.392 400.764 li
427.392 401.76 li
421.836 401.76 li
421.836 400.764 li
422.28 400.308 422.892 399.684 423.672 398.892 cv
424.44 398.112 424.932 397.608 425.136 397.38 cv
425.52 396.96 425.784 396.6 425.928 396.3 cv
426.072 396.012 426.156 395.712 426.156 395.424 cv
426.156 394.968 425.988 394.584 425.664 394.296 cv
425.34 394.008 424.92 393.852 424.392 393.852 cv
424.02 393.852 423.624 393.924 423.216 394.044 cv
422.808 394.176 422.364 394.368 421.896 394.632 cv
421.896 393.432 li
422.376 393.24 422.82 393.096 423.229 393 cv
423.636 392.904 424.02 392.856 424.368 392.856 cv
425.268 392.856 425.988 393.084 426.528 393.54 cv
427.068 393.996 427.344 394.596 427.344 395.352 cv
427.344 395.712 427.271 396.06 427.14 396.372 cv
427.008 396.696 426.768 397.08 426.408 397.512 cv
426.313 397.632 426 397.956 425.472 398.496 cv
424.944 399.036 424.212 399.792 423.264 400.764 cv
423.264 400.764 li
cp
ef
432.456 392.856 mo
433.428 392.856 434.172 393.252 434.7 394.02 cv
435.216 394.8 435.48 395.928 435.48 397.392 cv
435.48 398.868 435.216 399.996 434.7 400.764 cv
434.172 401.532 433.428 401.916 432.456 401.916 cv
431.472 401.916 430.716 401.532 430.2 400.764 cv
429.684 399.996 429.432 398.868 429.432 397.392 cv
429.432 395.928 429.684 394.8 430.2 394.02 cv
430.716 393.252 431.472 392.856 432.456 392.856 cv
432.456 392.856 li
cp
432.456 393.792 mo
431.844 393.792 431.388 394.092 431.076 394.692 cv
430.764 395.292 430.62 396.192 430.62 397.392 cv
430.62 398.592 430.764 399.492 431.076 400.092 cv
431.388 400.692 431.844 400.992 432.456 400.992 cv
433.068 400.992 433.524 400.692 433.836 400.092 cv
434.136 399.492 434.292 398.592 434.292 397.392 cv
434.292 396.192 434.136 395.292 433.836 394.692 cv
433.524 394.092 433.068 393.792 432.456 393.792 cv
ef
440.136 392.856 mo
441.108 392.856 441.852 393.252 442.38 394.02 cv
442.896 394.8 443.16 395.928 443.16 397.392 cv
443.16 398.868 442.896 399.996 442.38 400.764 cv
441.852 401.532 441.108 401.916 440.136 401.916 cv
439.152 401.916 438.396 401.532 437.88 400.764 cv
437.364 399.996 437.112 398.868 437.112 397.392 cv
437.112 395.928 437.364 394.8 437.88 394.02 cv
438.396 393.252 439.152 392.856 440.136 392.856 cv
440.136 392.856 li
cp
440.136 393.792 mo
439.524 393.792 439.068 394.092 438.756 394.692 cv
438.444 395.292 438.3 396.192 438.3 397.392 cv
438.3 398.592 438.444 399.492 438.756 400.092 cv
439.068 400.692 439.524 400.992 440.136 400.992 cv
440.748 400.992 441.204 400.692 441.516 400.092 cv
441.816 399.492 441.972 398.592 441.972 397.392 cv
441.972 396.192 441.816 395.292 441.516 394.692 cv
441.204 394.092 440.748 393.792 440.136 393.792 cv
ef
445.296 393.012 mo
449.94 393.012 li
449.94 394.008 li
446.376 394.008 li
446.376 396.156 li
446.544 396.096 446.724 396.048 446.892 396.024 cv
447.06 396 447.24 395.976 447.408 395.976 cv
448.38 395.976 449.148 396.252 449.724 396.78 cv
450.3 397.32 450.588 398.04 450.588 398.952 cv
450.588 399.9 450.288 400.632 449.7 401.148 cv
449.112 401.664 448.284 401.916 447.229 401.916 cv
446.856 401.916 446.484 401.88 446.1 401.832 cv
445.716 401.771 445.332 401.688 444.924 401.556 cv
444.924 400.368 li
445.271 400.56 445.632 400.704 446.016 400.8 cv
446.388 400.896 446.784 400.932 447.204 400.932 cv
447.876 400.932 448.416 400.764 448.813 400.404 cv
449.196 400.044 449.4 399.564 449.4 398.952 cv
449.4 398.352 449.196 397.872 448.813 397.512 cv
448.416 397.152 447.876 396.972 447.204 396.972 cv
446.892 396.972 446.568 397.008 446.256 397.08 cv
445.944 397.152 445.62 397.26 445.296 397.404 cv
445.296 393.012 li
445.296 393.012 li
cp
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
487.256 388.8 mo
487.256 43.2002 li
@
grestore
487.256 388.8 mo
487.256 384.8 li
f
487.256 388.8 mo
487.256 384.8 li
@
487.256 43.2002 mo
487.256 47.2002 li
f
487.256 43.2002 mo
487.256 47.2002 li
@
475.104 400.764 mo
479.232 400.764 li
479.232 401.76 li
473.676 401.76 li
473.676 400.764 li
474.12 400.308 474.732 399.684 475.512 398.892 cv
476.28 398.112 476.771 397.608 476.976 397.38 cv
477.36 396.96 477.624 396.6 477.768 396.3 cv
477.912 396.012 477.996 395.712 477.996 395.424 cv
477.996 394.968 477.828 394.584 477.504 394.296 cv
477.18 394.008 476.76 393.852 476.232 393.852 cv
475.86 393.852 475.464 393.924 475.056 394.044 cv
474.648 394.176 474.204 394.368 473.736 394.632 cv
473.736 393.432 li
474.216 393.24 474.66 393.096 475.068 393 cv
475.476 392.904 475.86 392.856 476.208 392.856 cv
477.108 392.856 477.828 393.084 478.368 393.54 cv
478.908 393.996 479.184 394.596 479.184 395.352 cv
479.184 395.712 479.112 396.06 478.98 396.372 cv
478.848 396.696 478.608 397.08 478.248 397.512 cv
478.152 397.632 477.84 397.956 477.313 398.496 cv
476.784 399.036 476.052 399.792 475.104 400.764 cv
475.104 400.764 li
cp
ef
484.296 392.856 mo
485.268 392.856 486.012 393.252 486.54 394.02 cv
487.056 394.8 487.32 395.928 487.32 397.392 cv
487.32 398.868 487.056 399.996 486.54 400.764 cv
486.012 401.532 485.268 401.916 484.296 401.916 cv
483.313 401.916 482.556 401.532 482.04 400.764 cv
481.524 399.996 481.271 398.868 481.271 397.392 cv
481.271 395.928 481.524 394.8 482.04 394.02 cv
482.556 393.252 483.313 392.856 484.296 392.856 cv
484.296 392.856 li
cp
484.296 393.792 mo
483.684 393.792 483.229 394.092 482.916 394.692 cv
482.604 395.292 482.46 396.192 482.46 397.392 cv
482.46 398.592 482.604 399.492 482.916 400.092 cv
483.229 400.692 483.684 400.992 484.296 400.992 cv
484.908 400.992 485.364 400.692 485.676 400.092 cv
485.976 399.492 486.132 398.592 486.132 397.392 cv
486.132 396.192 485.976 395.292 485.676 394.692 cv
485.364 394.092 484.908 393.792 484.296 393.792 cv
ef
489.648 400.764 mo
491.58 400.764 li
491.58 394.092 li
489.48 394.512 li
489.48 393.432 li
491.568 393.012 li
492.756 393.012 li
492.756 400.764 li
494.688 400.764 li
494.688 401.76 li
489.648 401.76 li
489.648 400.764 li
489.648 400.764 li
cp
ef
499.416 392.856 mo
500.388 392.856 501.132 393.252 501.66 394.02 cv
502.176 394.8 502.44 395.928 502.44 397.392 cv
502.44 398.868 502.176 399.996 501.66 400.764 cv
501.132 401.532 500.388 401.916 499.416 401.916 cv
498.432 401.916 497.676 401.532 497.16 400.764 cv
496.644 399.996 496.392 398.868 496.392 397.392 cv
496.392 395.928 496.644 394.8 497.16 394.02 cv
497.676 393.252 498.432 392.856 499.416 392.856 cv
499.416 392.856 li
cp
499.416 393.792 mo
498.804 393.792 498.348 394.092 498.036 394.692 cv
497.724 395.292 497.58 396.192 497.58 397.392 cv
497.58 398.592 497.724 399.492 498.036 400.092 cv
498.348 400.692 498.804 400.992 499.416 400.992 cv
500.028 400.992 500.484 400.692 500.796 400.092 cv
501.096 399.492 501.252 398.592 501.252 397.392 cv
501.252 396.192 501.096 395.292 500.796 394.692 cv
500.484 394.092 500.028 393.792 499.416 393.792 cv
ef
282.468 406.932 mo
283.728 406.932 li
286.152 410.532 li
288.564 406.932 li
289.836 406.932 li
286.74 411.516 li
286.74 415.68 li
285.552 415.68 li
285.552 411.516 li
282.468 406.932 li
282.468 406.932 li
cp
ef
293.904 411.816 mo
293.892 411.228 293.724 410.76 293.412 410.4 cv
293.088 410.052 292.656 409.872 292.128 409.872 cv
291.528 409.872 291.048 410.052 290.688 410.388 cv
290.328 410.724 290.112 411.204 290.064 411.816 cv
293.904 411.816 li
293.904 411.816 li
cp
294.984 412.128 mo
294.984 412.656 li
290.028 412.656 li
290.076 413.4 290.292 413.976 290.7 414.36 cv
291.096 414.744 291.648 414.936 292.368 414.936 cv
292.776 414.936 293.184 414.888 293.568 414.792 cv
293.952 414.696 294.348 414.54 294.732 414.324 cv
294.732 415.344 li
294.348 415.512 293.952 415.644 293.544 415.716 cv
293.136 415.788 292.716 415.836 292.308 415.836 cv
291.252 415.836 290.424 415.536 289.813 414.936 cv
289.2 414.336 288.9 413.508 288.9 412.464 cv
288.9 411.396 289.188 410.544 289.764 409.908 cv
290.34 409.284 291.132 408.96 292.116 408.96 cv
293.004 408.96 293.7 409.248 294.216 409.812 cv
294.72 410.388 294.984 411.156 294.984 412.128 cv
ef
301.944 411.936 mo
301.944 415.68 li
300.864 415.68 li
300.864 414.684 li
300.612 415.092 300.3 415.38 299.94 415.56 cv
299.58 415.74 299.124 415.836 298.596 415.836 cv
297.924 415.836 297.384 415.656 296.988 415.284 cv
296.592 414.912 296.4 414.408 296.4 413.771 cv
296.4 413.04 296.64 412.488 297.144 412.104 cv
297.636 411.732 298.368 411.54 299.352 411.54 cv
300.864 411.54 li
300.864 411.432 li
300.864 410.94 300.696 410.556 300.372 410.28 cv
300.048 410.016 299.592 409.872 299.004 409.872 cv
298.62 409.872 298.26 409.92 297.9 410.016 cv
297.54 410.112 297.204 410.244 296.88 410.412 cv
296.88 409.416 li
297.264 409.271 297.648 409.152 298.02 409.08 cv
298.392 409.008 298.752 408.96 299.112 408.96 cv
300.06 408.96 300.768 409.212 301.236 409.704 cv
301.704 410.196 301.944 410.94 301.944 411.936 cv
301.944 411.936 li
cp
299.796 412.38 mo
298.92 412.38 298.32 412.488 297.984 412.68 cv
297.648 412.884 297.48 413.22 297.48 413.7 cv
297.48 414.084 297.6 414.396 297.852 414.612 cv
298.104 414.84 298.452 414.948 298.884 414.948 cv
299.484 414.948 299.964 414.744 300.324 414.312 cv
300.684 413.892 300.864 413.328 300.864 412.62 cv
300.864 412.38 li
299.796 412.38 li
ef
307.813 410.124 mo
307.692 410.052 307.56 410.004 307.416 409.968 cv
307.272 409.944 307.116 409.92 306.948 409.92 cv
306.336 409.92 305.868 410.124 305.544 410.52 cv
305.208 410.916 305.052 411.48 305.052 412.224 cv
305.052 415.68 li
303.972 415.68 li
303.972 409.116 li
305.052 409.116 li
305.052 410.136 li
305.268 409.74 305.568 409.44 305.928 409.248 cv
306.288 409.056 306.732 408.96 307.26 408.96 cv
307.332 408.96 307.416 408.972 307.512 408.972 cv
307.596 408.984 307.692 408.996 307.813 409.02 cv
307.813 410.124 li
307.813 410.124 li
cp
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
72 388.8 mo
518.4 388.8 li
@
grestore
72 388.8 mo
76 388.8 li
f
72 388.8 mo
76 388.8 li
@
518.4 388.8 mo
514.4 388.8 li
f
518.4 388.8 mo
514.4 388.8 li
@
46.7759 384.216 mo
47.748 384.216 48.4922 384.612 49.02 385.38 cv
49.5361 386.16 49.7998 387.288 49.7998 388.752 cv
49.7998 390.228 49.5361 391.356 49.02 392.124 cv
48.4922 392.892 47.748 393.276 46.7759 393.276 cv
45.792 393.276 45.0361 392.892 44.52 392.124 cv
44.0039 391.356 43.752 390.228 43.752 388.752 cv
43.752 387.288 44.0039 386.16 44.52 385.38 cv
45.0361 384.612 45.792 384.216 46.7759 384.216 cv
46.7759 384.216 li
cp
46.7759 385.152 mo
46.1641 385.152 45.708 385.452 45.396 386.052 cv
45.084 386.652 44.9399 387.552 44.9399 388.752 cv
44.9399 389.952 45.084 390.852 45.396 391.452 cv
45.708 392.052 46.1641 392.352 46.7759 392.352 cv
47.3882 392.352 47.8438 392.052 48.1558 391.452 cv
48.4561 390.852 48.6118 389.952 48.6118 388.752 cv
48.6118 387.552 48.4561 386.652 48.1558 386.052 cv
47.8438 385.452 47.3882 385.152 46.7759 385.152 cv
ef
51.6841 391.632 mo
52.9199 391.632 li
52.9199 393.12 li
51.6841 393.12 li
51.6841 391.632 li
51.6841 391.632 li
cp
ef
58.0562 384.216 mo
59.0278 384.216 59.772 384.612 60.2998 385.38 cv
60.8159 386.16 61.0801 387.288 61.0801 388.752 cv
61.0801 390.228 60.8159 391.356 60.2998 392.124 cv
59.772 392.892 59.0278 393.276 58.0562 393.276 cv
57.0718 393.276 56.3159 392.892 55.7998 392.124 cv
55.2842 391.356 55.0322 390.228 55.0322 388.752 cv
55.0322 387.288 55.2842 386.16 55.7998 385.38 cv
56.3159 384.612 57.0718 384.216 58.0562 384.216 cv
58.0562 384.216 li
cp
58.0562 385.152 mo
57.4438 385.152 56.9878 385.452 56.6758 386.052 cv
56.3638 386.652 56.2202 387.552 56.2202 388.752 cv
56.2202 389.952 56.3638 390.852 56.6758 391.452 cv
56.9878 392.052 57.4438 392.352 58.0562 392.352 cv
58.668 392.352 59.124 392.052 59.436 391.452 cv
59.7358 390.852 59.8921 389.952 59.8921 388.752 cv
59.8921 387.552 59.7358 386.652 59.436 386.052 cv
59.124 385.452 58.668 385.152 58.0562 385.152 cv
ef
65.7358 384.216 mo
66.708 384.216 67.4521 384.612 67.98 385.38 cv
68.4961 386.16 68.7598 387.288 68.7598 388.752 cv
68.7598 390.228 68.4961 391.356 67.98 392.124 cv
67.4521 392.892 66.708 393.276 65.7358 393.276 cv
64.752 393.276 63.9961 392.892 63.48 392.124 cv
62.9639 391.356 62.7119 390.228 62.7119 388.752 cv
62.7119 387.288 62.9639 386.16 63.48 385.38 cv
63.9961 384.612 64.752 384.216 65.7358 384.216 cv
65.7358 384.216 li
cp
65.7358 385.152 mo
65.124 385.152 64.668 385.452 64.356 386.052 cv
64.0439 386.652 63.8999 387.552 63.8999 388.752 cv
63.8999 389.952 64.0439 390.852 64.356 391.452 cv
64.668 392.052 65.124 392.352 65.7358 392.352 cv
66.3481 392.352 66.8042 392.052 67.1162 391.452 cv
67.416 390.852 67.5718 389.952 67.5718 388.752 cv
67.5718 387.552 67.416 386.652 67.1162 386.052 cv
66.8042 385.452 66.3481 385.152 65.7358 385.152 cv
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
72 350.4 mo
518.4 350.4 li
@
grestore
72 350.4 mo
76 350.4 li
f
72 350.4 mo
76 350.4 li
@
518.4 350.4 mo
514.4 350.4 li
f
518.4 350.4 mo
514.4 350.4 li
@
47.0161 345.816 mo
47.9878 345.816 48.7319 346.212 49.2598 346.98 cv
49.7759 347.76 50.04 348.888 50.04 350.352 cv
50.04 351.828 49.7759 352.956 49.2598 353.724 cv
48.7319 354.492 47.9878 354.876 47.0161 354.876 cv
46.0322 354.876 45.2759 354.492 44.7598 353.724 cv
44.2441 352.956 43.9922 351.828 43.9922 350.352 cv
43.9922 348.888 44.2441 347.76 44.7598 346.98 cv
45.2759 346.212 46.0322 345.816 47.0161 345.816 cv
47.0161 345.816 li
cp
47.0161 346.752 mo
46.4038 346.752 45.9482 347.052 45.6362 347.652 cv
45.3242 348.252 45.1802 349.152 45.1802 350.352 cv
45.1802 351.552 45.3242 352.452 45.6362 353.052 cv
45.9482 353.652 46.4038 353.952 47.0161 353.952 cv
47.6279 353.952 48.084 353.652 48.396 353.052 cv
48.6958 352.452 48.8521 351.552 48.8521 350.352 cv
48.8521 349.152 48.6958 348.252 48.396 347.652 cv
48.084 347.052 47.6279 346.752 47.0161 346.752 cv
ef
52.1641 353.232 mo
53.3999 353.232 li
53.3999 354.72 li
52.1641 354.72 li
52.1641 353.232 li
52.1641 353.232 li
cp
ef
58.5361 345.816 mo
59.5078 345.816 60.252 346.212 60.7798 346.98 cv
61.2959 347.76 61.5601 348.888 61.5601 350.352 cv
61.5601 351.828 61.2959 352.956 60.7798 353.724 cv
60.252 354.492 59.5078 354.876 58.5361 354.876 cv
57.5518 354.876 56.7959 354.492 56.2798 353.724 cv
55.7642 352.956 55.5122 351.828 55.5122 350.352 cv
55.5122 348.888 55.7642 347.76 56.2798 346.98 cv
56.7959 346.212 57.5518 345.816 58.5361 345.816 cv
58.5361 345.816 li
cp
58.5361 346.752 mo
57.9238 346.752 57.4678 347.052 57.1558 347.652 cv
56.8438 348.252 56.7002 349.152 56.7002 350.352 cv
56.7002 351.552 56.8438 352.452 57.1558 353.052 cv
57.4678 353.652 57.9238 353.952 58.5361 353.952 cv
59.1479 353.952 59.604 353.652 59.916 353.052 cv
60.2158 352.452 60.3721 351.552 60.3721 350.352 cv
60.3721 349.152 60.2158 348.252 59.916 347.652 cv
59.604 347.052 59.1479 346.752 58.5361 346.752 cv
ef
63.6479 353.724 mo
65.5801 353.724 li
65.5801 347.052 li
63.48 347.472 li
63.48 346.392 li
65.5679 345.972 li
66.7559 345.972 li
66.7559 353.724 li
68.688 353.724 li
68.688 354.72 li
63.6479 354.72 li
63.6479 353.724 li
63.6479 353.724 li
cp
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
72 312 mo
518.4 312 li
@
grestore
72 312 mo
76 312 li
f
72 312 mo
76 312 li
@
518.4 312 mo
514.4 312 li
f
518.4 312 mo
514.4 312 li
@
47.0161 307.416 mo
47.9878 307.416 48.7319 307.812 49.2598 308.58 cv
49.7759 309.36 50.04 310.488 50.04 311.952 cv
50.04 313.428 49.7759 314.556 49.2598 315.324 cv
48.7319 316.092 47.9878 316.476 47.0161 316.476 cv
46.0322 316.476 45.2759 316.092 44.7598 315.324 cv
44.2441 314.556 43.9922 313.428 43.9922 311.952 cv
43.9922 310.488 44.2441 309.36 44.7598 308.58 cv
45.2759 307.812 46.0322 307.416 47.0161 307.416 cv
47.0161 307.416 li
cp
47.0161 308.352 mo
46.4038 308.352 45.9482 308.652 45.6362 309.252 cv
45.3242 309.852 45.1802 310.752 45.1802 311.952 cv
45.1802 313.152 45.3242 314.052 45.6362 314.652 cv
45.9482 315.252 46.4038 315.552 47.0161 315.552 cv
47.6279 315.552 48.084 315.252 48.396 314.652 cv
48.6958 314.052 48.8521 313.152 48.8521 311.952 cv
48.8521 310.752 48.6958 309.852 48.396 309.252 cv
48.084 308.652 47.6279 308.352 47.0161 308.352 cv
ef
52.1641 314.832 mo
53.3999 314.832 li
53.3999 316.32 li
52.1641 316.32 li
52.1641 314.832 li
52.1641 314.832 li
cp
ef
58.5361 307.416 mo
59.5078 307.416 60.252 307.812 60.7798 308.58 cv
61.2959 309.36 61.5601 310.488 61.5601 311.952 cv
61.5601 313.428 61.2959 314.556 60.7798 315.324 cv
60.252 316.092 59.5078 316.476 58.5361 316.476 cv
57.5518 316.476 56.7959 316.092 56.2798 315.324 cv
55.7642 314.556 55.5122 313.428 55.5122 311.952 cv
55.5122 310.488 55.7642 309.36 56.2798 308.58 cv
56.7959 307.812 57.5518 307.416 58.5361 307.416 cv
58.5361 307.416 li
cp
58.5361 308.352 mo
57.9238 308.352 57.4678 308.652 57.1558 309.252 cv
56.8438 309.852 56.7002 310.752 56.7002 311.952 cv
56.7002 313.152 56.8438 314.052 57.1558 314.652 cv
57.4678 315.252 57.9238 315.552 58.5361 315.552 cv
59.1479 315.552 59.604 315.252 59.916 314.652 cv
60.2158 314.052 60.3721 313.152 60.3721 311.952 cv
60.3721 310.752 60.2158 309.852 59.916 309.252 cv
59.604 308.652 59.1479 308.352 58.5361 308.352 cv
ef
64.7041 315.324 mo
68.832 315.324 li
68.832 316.32 li
63.2759 316.32 li
63.2759 315.324 li
63.7202 314.868 64.332 314.244 65.1118 313.452 cv
65.8799 312.672 66.3721 312.168 66.5762 311.94 cv
66.96 311.52 67.2241 311.16 67.3682 310.86 cv
67.5122 310.572 67.5962 310.271 67.5962 309.984 cv
67.5962 309.528 67.4282 309.144 67.104 308.855 cv
66.7798 308.568 66.3599 308.412 65.832 308.412 cv
65.46 308.412 65.064 308.484 64.6558 308.604 cv
64.248 308.736 63.8042 308.928 63.3359 309.192 cv
63.3359 307.992 li
63.8159 307.8 64.2598 307.656 64.668 307.56 cv
65.0762 307.464 65.46 307.416 65.8081 307.416 cv
66.708 307.416 67.4282 307.644 67.9678 308.1 cv
68.5078 308.556 68.7842 309.156 68.7842 309.912 cv
68.7842 310.271 68.7119 310.62 68.5801 310.932 cv
68.4482 311.256 68.208 311.64 67.8481 312.072 cv
67.752 312.192 67.4399 312.516 66.9121 313.056 cv
66.3838 313.596 65.6519 314.352 64.7041 315.324 cv
64.7041 315.324 li
cp
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
72 273.6 mo
518.4 273.6 li
@
grestore
72 273.6 mo
76 273.6 li
f
72 273.6 mo
76 273.6 li
@
518.4 273.6 mo
514.4 273.6 li
f
518.4 273.6 mo
514.4 273.6 li
@
46.7759 269.016 mo
47.748 269.016 48.4922 269.412 49.02 270.18 cv
49.5361 270.96 49.7998 272.088 49.7998 273.552 cv
49.7998 275.028 49.5361 276.156 49.02 276.924 cv
48.4922 277.692 47.748 278.076 46.7759 278.076 cv
45.792 278.076 45.0361 277.692 44.52 276.924 cv
44.0039 276.156 43.752 275.028 43.752 273.552 cv
43.752 272.088 44.0039 270.96 44.52 270.18 cv
45.0361 269.412 45.792 269.016 46.7759 269.016 cv
46.7759 269.016 li
cp
46.7759 269.952 mo
46.1641 269.952 45.708 270.252 45.396 270.852 cv
45.084 271.452 44.9399 272.352 44.9399 273.552 cv
44.9399 274.752 45.084 275.652 45.396 276.252 cv
45.708 276.852 46.1641 277.152 46.7759 277.152 cv
47.3882 277.152 47.8438 276.852 48.1558 276.252 cv
48.4561 275.652 48.6118 274.752 48.6118 273.552 cv
48.6118 272.352 48.4561 271.452 48.1558 270.852 cv
47.8438 270.252 47.3882 269.952 46.7759 269.952 cv
ef
51.9238 276.432 mo
53.1602 276.432 li
53.1602 277.92 li
51.9238 277.92 li
51.9238 276.432 li
51.9238 276.432 li
cp
ef
58.2959 269.016 mo
59.2681 269.016 60.0122 269.412 60.54 270.18 cv
61.0562 270.96 61.3198 272.088 61.3198 273.552 cv
61.3198 275.028 61.0562 276.156 60.54 276.924 cv
60.0122 277.692 59.2681 278.076 58.2959 278.076 cv
57.312 278.076 56.5562 277.692 56.04 276.924 cv
55.5239 276.156 55.272 275.028 55.272 273.552 cv
55.272 272.088 55.5239 270.96 56.04 270.18 cv
56.5562 269.412 57.312 269.016 58.2959 269.016 cv
58.2959 269.016 li
cp
58.2959 269.952 mo
57.6841 269.952 57.228 270.252 56.916 270.852 cv
56.604 271.452 56.46 272.352 56.46 273.552 cv
56.46 274.752 56.604 275.652 56.916 276.252 cv
57.228 276.852 57.6841 277.152 58.2959 277.152 cv
58.9082 277.152 59.3638 276.852 59.6758 276.252 cv
59.9761 275.652 60.1318 274.752 60.1318 273.552 cv
60.1318 272.352 59.9761 271.452 59.6758 270.852 cv
59.3638 270.252 58.9082 269.952 58.2959 269.952 cv
ef
67.0322 273.204 mo
67.5962 273.324 68.04 273.576 68.3521 273.96 cv
68.6641 274.344 68.832 274.824 68.832 275.376 cv
68.832 276.24 68.5322 276.912 67.9438 277.38 cv
67.3438 277.848 66.5039 278.076 65.4121 278.076 cv
65.04 278.076 64.6558 278.04 64.272 277.968 cv
63.8882 277.908 63.48 277.8 63.0718 277.656 cv
63.0718 276.516 li
63.396 276.708 63.7559 276.852 64.1519 276.948 cv
64.5361 277.044 64.9438 277.092 65.376 277.092 cv
66.1201 277.092 66.6841 276.948 67.0679 276.66 cv
67.4521 276.372 67.6558 275.94 67.6558 275.376 cv
67.6558 274.872 67.4761 274.464 67.1162 274.176 cv
66.7559 273.888 66.252 273.732 65.604 273.732 cv
64.584 273.732 li
64.584 272.76 li
65.6519 272.76 li
66.228 272.76 66.6719 272.652 66.9839 272.412 cv
67.2959 272.184 67.4521 271.848 67.4521 271.404 cv
67.4521 270.96 67.2842 270.612 66.9722 270.372 cv
66.6479 270.132 66.1919 270.012 65.604 270.012 cv
65.2798 270.012 64.9321 270.048 64.5601 270.12 cv
64.188 270.192 63.7798 270.3 63.3359 270.444 cv
63.3359 269.388 li
63.7798 269.268 64.2002 269.172 64.5962 269.112 cv
64.98 269.052 65.3521 269.016 65.7119 269.016 cv
66.6001 269.016 67.3081 269.22 67.8359 269.628 cv
68.3638 270.036 68.6279 270.588 68.6279 271.284 cv
68.6279 271.764 68.4839 272.172 68.208 272.508 cv
67.9321 272.844 67.5361 273.084 67.0322 273.204 cv
67.0322 273.204 li
cp
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
72 235.2 mo
518.4 235.2 li
@
grestore
72 235.2 mo
76 235.2 li
f
72 235.2 mo
76 235.2 li
@
518.4 235.2 mo
514.4 235.2 li
f
518.4 235.2 mo
514.4 235.2 li
@
46.5361 230.616 mo
47.5078 230.616 48.252 231.012 48.7798 231.78 cv
49.2959 232.56 49.5601 233.688 49.5601 235.152 cv
49.5601 236.628 49.2959 237.756 48.7798 238.524 cv
48.252 239.292 47.5078 239.676 46.5361 239.676 cv
45.5518 239.676 44.7959 239.292 44.2798 238.524 cv
43.7642 237.756 43.5122 236.628 43.5122 235.152 cv
43.5122 233.688 43.7642 232.56 44.2798 231.78 cv
44.7959 231.012 45.5518 230.616 46.5361 230.616 cv
46.5361 230.616 li
cp
46.5361 231.552 mo
45.9238 231.552 45.4678 231.852 45.1558 232.452 cv
44.8438 233.052 44.7002 233.952 44.7002 235.152 cv
44.7002 236.352 44.8438 237.252 45.1558 237.852 cv
45.4678 238.452 45.9238 238.752 46.5361 238.752 cv
47.1479 238.752 47.604 238.452 47.916 237.852 cv
48.2158 237.252 48.3721 236.352 48.3721 235.152 cv
48.3721 233.952 48.2158 233.052 47.916 232.452 cv
47.604 231.852 47.1479 231.552 46.5361 231.552 cv
ef
51.6841 238.032 mo
52.9199 238.032 li
52.9199 239.52 li
51.6841 239.52 li
51.6841 238.032 li
51.6841 238.032 li
cp
ef
58.0562 230.616 mo
59.0278 230.616 59.772 231.012 60.2998 231.78 cv
60.8159 232.56 61.0801 233.688 61.0801 235.152 cv
61.0801 236.628 60.8159 237.756 60.2998 238.524 cv
59.772 239.292 59.0278 239.676 58.0562 239.676 cv
57.0718 239.676 56.3159 239.292 55.7998 238.524 cv
55.2842 237.756 55.0322 236.628 55.0322 235.152 cv
55.0322 233.688 55.2842 232.56 55.7998 231.78 cv
56.3159 231.012 57.0718 230.616 58.0562 230.616 cv
58.0562 230.616 li
cp
58.0562 231.552 mo
57.4438 231.552 56.9878 231.852 56.6758 232.452 cv
56.3638 233.052 56.2202 233.952 56.2202 235.152 cv
56.2202 236.352 56.3638 237.252 56.6758 237.852 cv
56.9878 238.452 57.4438 238.752 58.0562 238.752 cv
58.668 238.752 59.124 238.452 59.436 237.852 cv
59.7358 237.252 59.8921 236.352 59.8921 235.152 cv
59.8921 233.952 59.7358 233.052 59.436 232.452 cv
59.124 231.852 58.668 231.552 58.0562 231.552 cv
ef
66.144 230.771 mo
67.6318 230.771 li
67.6318 236.472 li
68.8799 236.472 li
68.8799 237.456 li
67.6318 237.456 li
67.6318 239.52 li
66.4561 239.52 li
66.4561 237.456 li
62.5078 237.456 li
62.5078 236.316 li
66.144 230.771 li
66.144 230.771 li
cp
66.4561 231.804 mo
63.4678 236.472 li
66.4561 236.472 li
66.4561 231.804 li
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
72 196.8 mo
518.4 196.8 li
@
grestore
72 196.8 mo
76 196.8 li
f
72 196.8 mo
76 196.8 li
@
518.4 196.8 mo
514.4 196.8 li
f
518.4 196.8 mo
514.4 196.8 li
@
47.0161 192.216 mo
47.9878 192.216 48.7319 192.612 49.2598 193.38 cv
49.7759 194.16 50.04 195.288 50.04 196.752 cv
50.04 198.228 49.7759 199.356 49.2598 200.124 cv
48.7319 200.892 47.9878 201.276 47.0161 201.276 cv
46.0322 201.276 45.2759 200.892 44.7598 200.124 cv
44.2441 199.356 43.9922 198.228 43.9922 196.752 cv
43.9922 195.288 44.2441 194.16 44.7598 193.38 cv
45.2759 192.612 46.0322 192.216 47.0161 192.216 cv
47.0161 192.216 li
cp
47.0161 193.152 mo
46.4038 193.152 45.9482 193.452 45.6362 194.052 cv
45.3242 194.652 45.1802 195.552 45.1802 196.752 cv
45.1802 197.952 45.3242 198.852 45.6362 199.452 cv
45.9482 200.052 46.4038 200.352 47.0161 200.352 cv
47.6279 200.352 48.084 200.052 48.396 199.452 cv
48.6958 198.852 48.8521 197.952 48.8521 196.752 cv
48.8521 195.552 48.6958 194.652 48.396 194.052 cv
48.084 193.452 47.6279 193.152 47.0161 193.152 cv
ef
51.9238 199.632 mo
53.1602 199.632 li
53.1602 201.12 li
51.9238 201.12 li
51.9238 199.632 li
51.9238 199.632 li
cp
ef
58.2959 192.216 mo
59.2681 192.216 60.0122 192.612 60.54 193.38 cv
61.0562 194.16 61.3198 195.288 61.3198 196.752 cv
61.3198 198.228 61.0562 199.356 60.54 200.124 cv
60.0122 200.892 59.2681 201.276 58.2959 201.276 cv
57.312 201.276 56.5562 200.892 56.04 200.124 cv
55.5239 199.356 55.272 198.228 55.272 196.752 cv
55.272 195.288 55.5239 194.16 56.04 193.38 cv
56.5562 192.612 57.312 192.216 58.2959 192.216 cv
58.2959 192.216 li
cp
58.2959 193.152 mo
57.6841 193.152 57.228 193.452 56.916 194.052 cv
56.604 194.652 56.46 195.552 56.46 196.752 cv
56.46 197.952 56.604 198.852 56.916 199.452 cv
57.228 200.052 57.6841 200.352 58.2959 200.352 cv
58.9082 200.352 59.3638 200.052 59.6758 199.452 cv
59.9761 198.852 60.1318 197.952 60.1318 196.752 cv
60.1318 195.552 59.9761 194.652 59.6758 194.052 cv
59.3638 193.452 58.9082 193.152 58.2959 193.152 cv
ef
63.4561 192.372 mo
68.1001 192.372 li
68.1001 193.368 li
64.5361 193.368 li
64.5361 195.516 li
64.7041 195.456 64.8838 195.408 65.0518 195.384 cv
65.2202 195.36 65.3999 195.336 65.5679 195.336 cv
66.54 195.336 67.3081 195.612 67.8838 196.14 cv
68.46 196.68 68.748 197.4 68.748 198.312 cv
68.748 199.26 68.4482 199.992 67.8599 200.508 cv
67.272 201.024 66.4438 201.276 65.3882 201.276 cv
65.0161 201.276 64.644 201.24 64.2598 201.192 cv
63.876 201.132 63.4922 201.048 63.084 200.916 cv
63.084 199.728 li
63.4321 199.92 63.792 200.064 64.1758 200.16 cv
64.5479 200.256 64.9438 200.292 65.3638 200.292 cv
66.0361 200.292 66.5762 200.124 66.9722 199.764 cv
67.356 199.404 67.5601 198.924 67.5601 198.312 cv
67.5601 197.712 67.356 197.232 66.9722 196.872 cv
66.5762 196.512 66.0361 196.332 65.3638 196.332 cv
65.0518 196.332 64.728 196.368 64.416 196.44 cv
64.104 196.512 63.7798 196.62 63.4561 196.764 cv
63.4561 192.372 li
63.4561 192.372 li
cp
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
72 158.4 mo
518.4 158.4 li
@
grestore
72 158.4 mo
76 158.4 li
f
72 158.4 mo
76 158.4 li
@
518.4 158.4 mo
514.4 158.4 li
f
518.4 158.4 mo
514.4 158.4 li
@
46.5361 153.816 mo
47.5078 153.816 48.252 154.212 48.7798 154.98 cv
49.2959 155.76 49.5601 156.888 49.5601 158.352 cv
49.5601 159.828 49.2959 160.956 48.7798 161.724 cv
48.252 162.492 47.5078 162.876 46.5361 162.876 cv
45.5518 162.876 44.7959 162.492 44.2798 161.724 cv
43.7642 160.956 43.5122 159.828 43.5122 158.352 cv
43.5122 156.888 43.7642 155.76 44.2798 154.98 cv
44.7959 154.212 45.5518 153.816 46.5361 153.816 cv
46.5361 153.816 li
cp
46.5361 154.752 mo
45.9238 154.752 45.4678 155.052 45.1558 155.652 cv
44.8438 156.252 44.7002 157.152 44.7002 158.352 cv
44.7002 159.552 44.8438 160.452 45.1558 161.052 cv
45.4678 161.652 45.9238 161.952 46.5361 161.952 cv
47.1479 161.952 47.604 161.652 47.916 161.052 cv
48.2158 160.452 48.3721 159.552 48.3721 158.352 cv
48.3721 157.152 48.2158 156.252 47.916 155.652 cv
47.604 155.052 47.1479 154.752 46.5361 154.752 cv
ef
51.6841 161.232 mo
52.9199 161.232 li
52.9199 162.72 li
51.6841 162.72 li
51.6841 161.232 li
51.6841 161.232 li
cp
ef
58.0562 153.816 mo
59.0278 153.816 59.772 154.212 60.2998 154.98 cv
60.8159 155.76 61.0801 156.888 61.0801 158.352 cv
61.0801 159.828 60.8159 160.956 60.2998 161.724 cv
59.772 162.492 59.0278 162.876 58.0562 162.876 cv
57.0718 162.876 56.3159 162.492 55.7998 161.724 cv
55.2842 160.956 55.0322 159.828 55.0322 158.352 cv
55.0322 156.888 55.2842 155.76 55.7998 154.98 cv
56.3159 154.212 57.0718 153.816 58.0562 153.816 cv
58.0562 153.816 li
cp
58.0562 154.752 mo
57.4438 154.752 56.9878 155.052 56.6758 155.652 cv
56.3638 156.252 56.2202 157.152 56.2202 158.352 cv
56.2202 159.552 56.3638 160.452 56.6758 161.052 cv
56.9878 161.652 57.4438 161.952 58.0562 161.952 cv
58.668 161.952 59.124 161.652 59.436 161.052 cv
59.7358 160.452 59.8921 159.552 59.8921 158.352 cv
59.8921 157.152 59.7358 156.252 59.436 155.652 cv
59.124 155.052 58.668 154.752 58.0562 154.752 cv
ef
68.2319 154.164 mo
68.2319 155.244 li
67.9321 155.1 67.6318 154.992 67.332 154.92 cv
67.02 154.848 66.7202 154.812 66.4321 154.812 cv
65.6401 154.812 65.04 155.076 64.6318 155.604 cv
64.2241 156.132 63.9839 156.936 63.936 157.992 cv
64.1641 157.656 64.4521 157.392 64.7998 157.212 cv
65.1479 157.032 65.5322 156.936 65.9521 156.936 cv
66.8281 156.936 67.5239 157.212 68.0278 157.74 cv
68.5322 158.268 68.7959 159 68.7959 159.912 cv
68.7959 160.812 68.52 161.532 67.9922 162.072 cv
67.4639 162.612 66.7559 162.876 65.8799 162.876 cv
64.8721 162.876 64.0918 162.492 63.564 161.724 cv
63.0239 160.956 62.7598 159.828 62.7598 158.352 cv
62.7598 156.972 63.084 155.868 63.7441 155.052 cv
64.3921 154.236 65.2798 153.816 66.3838 153.816 cv
66.6719 153.816 66.9722 153.852 67.2842 153.9 cv
67.584 153.96 67.896 154.044 68.2319 154.164 cv
68.2319 154.164 li
cp
65.8799 157.872 mo
65.3521 157.872 64.9321 158.064 64.6201 158.424 cv
64.3081 158.784 64.1519 159.288 64.1519 159.912 cv
64.1519 160.548 64.3081 161.052 64.6201 161.412 cv
64.9321 161.772 65.3521 161.952 65.8799 161.952 cv
66.4082 161.952 66.8281 161.772 67.1401 161.412 cv
67.4521 161.052 67.6079 160.548 67.6079 159.912 cv
67.6079 159.288 67.4521 158.784 67.1401 158.424 cv
66.8281 158.064 66.4082 157.872 65.8799 157.872 cv
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
72 120 mo
518.4 120 li
@
grestore
72 120 mo
76 120 li
f
72 120 mo
76 120 li
@
518.4 120 mo
514.4 120 li
f
518.4 120 mo
514.4 120 li
@
47.0161 115.416 mo
47.9878 115.416 48.7319 115.812 49.2598 116.58 cv
49.7759 117.36 50.04 118.488 50.04 119.952 cv
50.04 121.428 49.7759 122.556 49.2598 123.324 cv
48.7319 124.092 47.9878 124.476 47.0161 124.476 cv
46.0322 124.476 45.2759 124.092 44.7598 123.324 cv
44.2441 122.556 43.9922 121.428 43.9922 119.952 cv
43.9922 118.488 44.2441 117.36 44.7598 116.58 cv
45.2759 115.812 46.0322 115.416 47.0161 115.416 cv
47.0161 115.416 li
cp
47.0161 116.352 mo
46.4038 116.352 45.9482 116.652 45.6362 117.252 cv
45.3242 117.852 45.1802 118.752 45.1802 119.952 cv
45.1802 121.152 45.3242 122.052 45.6362 122.652 cv
45.9482 123.252 46.4038 123.552 47.0161 123.552 cv
47.6279 123.552 48.084 123.252 48.396 122.652 cv
48.6958 122.052 48.8521 121.152 48.8521 119.952 cv
48.8521 118.752 48.6958 117.852 48.396 117.252 cv
48.084 116.652 47.6279 116.352 47.0161 116.352 cv
ef
51.9238 122.832 mo
53.1602 122.832 li
53.1602 124.32 li
51.9238 124.32 li
51.9238 122.832 li
51.9238 122.832 li
cp
ef
58.2959 115.416 mo
59.2681 115.416 60.0122 115.812 60.54 116.58 cv
61.0562 117.36 61.3198 118.488 61.3198 119.952 cv
61.3198 121.428 61.0562 122.556 60.54 123.324 cv
60.0122 124.092 59.2681 124.476 58.2959 124.476 cv
57.312 124.476 56.5562 124.092 56.04 123.324 cv
55.5239 122.556 55.272 121.428 55.272 119.952 cv
55.272 118.488 55.5239 117.36 56.04 116.58 cv
56.5562 115.812 57.312 115.416 58.2959 115.416 cv
58.2959 115.416 li
cp
58.2959 116.352 mo
57.6841 116.352 57.228 116.652 56.916 117.252 cv
56.604 117.852 56.46 118.752 56.46 119.952 cv
56.46 121.152 56.604 122.052 56.916 122.652 cv
57.228 123.252 57.6841 123.552 58.2959 123.552 cv
58.9082 123.552 59.3638 123.252 59.6758 122.652 cv
59.9761 122.052 60.1318 121.152 60.1318 119.952 cv
60.1318 118.752 59.9761 117.852 59.6758 117.252 cv
59.3638 116.652 58.9082 116.352 58.2959 116.352 cv
ef
63.144 115.572 mo
68.772 115.572 li
68.772 116.076 li
65.5918 124.32 li
64.356 124.32 li
67.3438 116.568 li
63.144 116.568 li
63.144 115.572 li
63.144 115.572 li
cp
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
72 81.6001 mo
518.4 81.6001 li
@
grestore
72 81.6001 mo
76 81.6001 li
f
72 81.6001 mo
76 81.6001 li
@
518.4 81.6001 mo
514.4 81.6001 li
f
518.4 81.6001 mo
514.4 81.6001 li
@
46.7759 77.0161 mo
47.748 77.0161 48.4922 77.4121 49.02 78.1797 cv
49.5361 78.96 49.7998 80.0879 49.7998 81.5518 cv
49.7998 83.0278 49.5361 84.1563 49.02 84.9238 cv
48.4922 85.6919 47.748 86.0762 46.7759 86.0762 cv
45.792 86.0762 45.0361 85.6919 44.52 84.9238 cv
44.0039 84.1563 43.752 83.0278 43.752 81.5518 cv
43.752 80.0879 44.0039 78.96 44.52 78.1797 cv
45.0361 77.4121 45.792 77.0161 46.7759 77.0161 cv
46.7759 77.0161 li
cp
46.7759 77.9521 mo
46.1641 77.9521 45.708 78.252 45.396 78.8521 cv
45.084 79.4521 44.9399 80.3521 44.9399 81.5518 cv
44.9399 82.752 45.084 83.6519 45.396 84.252 cv
45.708 84.8521 46.1641 85.1519 46.7759 85.1519 cv
47.3882 85.1519 47.8438 84.8521 48.1558 84.252 cv
48.4561 83.6519 48.6118 82.752 48.6118 81.5518 cv
48.6118 80.3521 48.4561 79.4521 48.1558 78.8521 cv
47.8438 78.252 47.3882 77.9521 46.7759 77.9521 cv
ef
51.9238 84.4321 mo
53.1602 84.4321 li
53.1602 85.9199 li
51.9238 85.9199 li
51.9238 84.4321 li
51.9238 84.4321 li
cp
ef
58.0562 77.0161 mo
59.0278 77.0161 59.772 77.4121 60.2998 78.1797 cv
60.8159 78.96 61.0801 80.0879 61.0801 81.5518 cv
61.0801 83.0278 60.8159 84.1563 60.2998 84.9238 cv
59.772 85.6919 59.0278 86.0762 58.0562 86.0762 cv
57.0718 86.0762 56.3159 85.6919 55.7998 84.9238 cv
55.2842 84.1563 55.0322 83.0278 55.0322 81.5518 cv
55.0322 80.0879 55.2842 78.96 55.7998 78.1797 cv
56.3159 77.4121 57.0718 77.0161 58.0562 77.0161 cv
58.0562 77.0161 li
cp
58.0562 77.9521 mo
57.4438 77.9521 56.9878 78.252 56.6758 78.8521 cv
56.3638 79.4521 56.2202 80.3521 56.2202 81.5518 cv
56.2202 82.752 56.3638 83.6519 56.6758 84.252 cv
56.9878 84.8521 57.4438 85.1519 58.0562 85.1519 cv
58.668 85.1519 59.124 84.8521 59.436 84.252 cv
59.7358 83.6519 59.8921 82.752 59.8921 81.5518 cv
59.8921 80.3521 59.7358 79.4521 59.436 78.8521 cv
59.124 78.252 58.668 77.9521 58.0562 77.9521 cv
ef
64.1162 79.3921 mo
64.1162 79.8481 64.248 80.208 64.5361 80.46 cv
64.8242 80.7119 65.2202 80.832 65.7358 80.832 cv
66.2402 80.832 66.6362 80.7119 66.9238 80.46 cv
67.2119 80.208 67.356 79.8481 67.356 79.3921 cv
67.356 78.936 67.2119 78.5879 66.9238 78.3359 cv
66.6362 78.084 66.2402 77.9521 65.7358 77.9521 cv
65.2202 77.9521 64.8242 78.084 64.5361 78.3359 cv
64.248 78.5879 64.1162 78.936 64.1162 79.3921 cv
64.1162 79.3921 li
cp
64.5479 81.2642 mo
64.0439 81.144 63.6479 80.9038 63.3599 80.5562 cv
63.0718 80.208 62.9399 79.7881 62.9399 79.2842 cv
62.9399 78.5879 63.1802 78.0361 63.6841 77.6279 cv
64.1758 77.2197 64.8599 77.0161 65.7358 77.0161 cv
66.6001 77.0161 67.2842 77.2197 67.7881 77.6279 cv
68.2798 78.0361 68.5322 78.5879 68.5322 79.2842 cv
68.5322 79.7881 68.3882 80.208 68.1001 80.5562 cv
67.812 80.9038 67.4282 81.144 66.9238 81.2642 cv
67.4878 81.396 67.9321 81.6602 68.2559 82.0439 cv
68.5679 82.4277 68.7358 82.9082 68.7358 83.46 cv
68.7358 84.312 68.4722 84.96 67.9561 85.4038 cv
67.4282 85.8599 66.6958 86.0762 65.7358 86.0762 cv
64.7642 86.0762 64.02 85.8599 63.5039 85.4038 cv
62.9878 84.96 62.7358 84.312 62.7358 83.46 cv
62.7358 82.9082 62.8921 82.4277 63.2158 82.0439 cv
63.5278 81.6602 63.9722 81.396 64.5479 81.2642 cv
65.7358 81.7681 mo
65.1719 81.7681 64.728 81.9238 64.4038 82.2241 cv
64.0801 82.5239 63.9238 82.9321 63.9238 83.46 cv
63.9238 83.9878 64.0801 84.4082 64.4038 84.708 cv
64.728 85.0078 65.1719 85.1519 65.7358 85.1519 cv
66.2881 85.1519 66.7319 85.0078 67.0562 84.6958 cv
67.3799 84.396 67.5479 83.9878 67.5479 83.46 cv
67.5479 82.9321 67.3799 82.5239 67.0679 82.2241 cv
66.7441 81.9238 66.2998 81.7681 65.7358 81.7681 cv
ef
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2002 li
72 43.2002 li
72 388.8 li
cp
clp
[1 3 ] 0 dsh
72 43.2002 mo
518.4 43.2002 li
@
grestore
72 43.2002 mo
76 43.2002 li
f
72 43.2002 mo
76 43.2002 li
@
518.4 43.2002 mo
514.4 43.2002 li
f
518.4 43.2002 mo
514.4 43.2002 li
@
46.7759 38.6162 mo
47.748 38.6162 48.4922 39.0117 49.02 39.7798 cv
49.5361 40.5601 49.7998 41.688 49.7998 43.1519 cv
49.7998 44.6279 49.5361 45.7559 49.02 46.5239 cv
48.4922 47.292 47.748 47.6758 46.7759 47.6758 cv
45.792 47.6758 45.0361 47.292 44.52 46.5239 cv
44.0039 45.7559 43.752 44.6279 43.752 43.1519 cv
43.752 41.688 44.0039 40.5601 44.52 39.7798 cv
45.0361 39.0117 45.792 38.6162 46.7759 38.6162 cv
46.7759 38.6162 li
cp
46.7759 39.5518 mo
46.1641 39.5518 45.708 39.8521 45.396 40.4521 cv
45.084 41.0518 44.9399 41.9521 44.9399 43.1519 cv
44.9399 44.3521 45.084 45.252 45.396 45.8521 cv
45.708 46.4521 46.1641 46.752 46.7759 46.752 cv
47.3882 46.752 47.8438 46.4521 48.1558 45.8521 cv
48.4561 45.252 48.6118 44.3521 48.6118 43.1519 cv
48.6118 41.9521 48.4561 41.0518 48.1558 40.4521 cv
47.8438 39.8521 47.3882 39.5518 46.7759 39.5518 cv
ef
51.9238 46.0322 mo
53.1602 46.0322 li
53.1602 47.52 li
51.9238 47.52 li
51.9238 46.0322 li
51.9238 46.0322 li
cp
ef
58.0562 38.6162 mo
59.0278 38.6162 59.772 39.0117 60.2998 39.7798 cv
60.8159 40.5601 61.0801 41.688 61.0801 43.1519 cv
61.0801 44.6279 60.8159 45.7559 60.2998 46.5239 cv
59.772 47.292 59.0278 47.6758 58.0562 47.6758 cv
57.0718 47.6758 56.3159 47.292 55.7998 46.5239 cv
55.2842 45.7559 55.0322 44.6279 55.0322 43.1519 cv
55.0322 41.688 55.2842 40.5601 55.7998 39.7798 cv
56.3159 39.0117 57.0718 38.6162 58.0562 38.6162 cv
58.0562 38.6162 li
cp
58.0562 39.5518 mo
57.4438 39.5518 56.9878 39.8521 56.6758 40.4521 cv
56.3638 41.0518 56.2202 41.9521 56.2202 43.1519 cv
56.2202 44.3521 56.3638 45.252 56.6758 45.8521 cv
56.9878 46.4521 57.4438 46.752 58.0562 46.752 cv
58.668 46.752 59.124 46.4521 59.436 45.8521 cv
59.7358 45.252 59.8921 44.3521 59.8921 43.1519 cv
59.8921 41.9521 59.7358 41.0518 59.436 40.4521 cv
59.124 39.8521 58.668 39.5518 58.0562 39.5518 cv
ef
65.5918 43.6318 mo
66.1201 43.6318 66.54 43.4521 66.8521 43.0918 cv
67.1641 42.7319 67.3198 42.228 67.3198 41.5918 cv
67.3198 40.9678 67.1641 40.4639 66.8521 40.104 cv
66.54 39.7441 66.1201 39.5518 65.5918 39.5518 cv
65.064 39.5518 64.644 39.7441 64.332 40.104 cv
64.02 40.4639 63.8638 40.9678 63.8638 41.5918 cv
63.8638 42.228 64.02 42.7319 64.332 43.0918 cv
64.644 43.4521 65.064 43.6318 65.5918 43.6318 cv
65.5918 43.6318 li
cp
63.2402 47.3398 mo
63.2402 46.2598 li
63.5278 46.4038 63.8281 46.5117 64.1401 46.584 cv
64.4399 46.6563 64.7402 46.6919 65.04 46.6919 cv
65.8081 46.6919 66.4082 46.4399 66.8159 45.9121 cv
67.2241 45.3838 67.4639 44.5918 67.5361 43.5117 cv
67.2959 43.8481 67.0078 44.1118 66.6719 44.292 cv
66.3242 44.4717 65.9399 44.5562 65.52 44.5562 cv
64.6318 44.5562 63.936 44.292 63.4321 43.7642 cv
62.9282 43.2358 62.6758 42.5161 62.6758 41.5918 cv
62.6758 40.7041 62.9399 39.9839 63.4678 39.4321 cv
63.9961 38.8921 64.7041 38.6162 65.5918 38.6162 cv
66.6001 38.6162 67.3799 39.0117 67.9082 39.7798 cv
68.436 40.5601 68.7119 41.688 68.7119 43.1519 cv
68.7119 44.5439 68.376 45.6357 67.728 46.4521 cv
67.0679 47.2681 66.1919 47.6758 65.0879 47.6758 cv
64.7881 47.6758 64.4878 47.6401 64.188 47.5918 cv
63.876 47.5439 63.564 47.46 63.2402 47.3398 cv
ef
28.9321 278.184 mo
28.9321 275.508 li
28.9321 274.536 29.1602 273.792 29.604 273.288 cv
30.0479 272.784 30.6958 272.532 31.5479 272.532 cv
32.4121 272.532 33.0718 272.784 33.5039 273.288 cv
33.9478 273.792 34.1641 274.536 34.1641 275.508 cv
34.1641 276.996 li
37.6802 276.996 li
37.6802 278.184 li
28.9321 278.184 li
28.9321 278.184 li
cp
29.9038 276.996 mo
33.1919 276.996 li
33.1919 275.508 li
33.1919 274.956 33.0601 274.536 32.772 274.236 cv
32.4839 273.936 32.0762 273.78 31.5479 273.78 cv
31.02 273.78 30.624 273.936 30.3359 274.236 cv
30.0479 274.536 29.9038 274.956 29.9038 275.508 cv
29.9038 276.996 li
ef
33.8159 266.976 mo
33.228 266.988 32.7598 267.156 32.3999 267.468 cv
32.0518 267.792 31.8721 268.224 31.8721 268.752 cv
31.8721 269.352 32.0518 269.832 32.3882 270.192 cv
32.7241 270.552 33.2041 270.768 33.8159 270.816 cv
33.8159 266.976 li
33.8159 266.976 li
cp
34.1279 265.896 mo
34.6558 265.896 li
34.6558 270.852 li
35.3999 270.804 35.9761 270.588 36.3599 270.18 cv
36.7441 269.784 36.936 269.232 36.936 268.512 cv
36.936 268.104 36.8882 267.696 36.792 267.312 cv
36.6958 266.928 36.54 266.532 36.3242 266.148 cv
37.3438 266.148 li
37.5122 266.532 37.644 266.928 37.7158 267.336 cv
37.7881 267.744 37.8359 268.164 37.8359 268.572 cv
37.8359 269.628 37.5361 270.456 36.936 271.068 cv
36.3359 271.68 35.5078 271.98 34.4639 271.98 cv
33.396 271.98 32.5439 271.692 31.9082 271.116 cv
31.2842 270.54 30.96 269.748 30.96 268.764 cv
30.96 267.876 31.248 267.18 31.812 266.664 cv
32.3882 266.16 33.1558 265.896 34.1279 265.896 cv
ef
32.124 260.268 mo
32.0518 260.388 32.0039 260.52 31.9678 260.664 cv
31.9438 260.808 31.9199 260.964 31.9199 261.132 cv
31.9199 261.744 32.124 262.212 32.52 262.536 cv
32.916 262.872 33.48 263.028 34.2241 263.028 cv
37.6802 263.028 li
37.6802 264.108 li
31.1162 264.108 li
31.1162 263.028 li
32.1362 263.028 li
31.7402 262.812 31.4399 262.512 31.248 262.152 cv
31.0562 261.792 30.96 261.348 30.96 260.82 cv
30.96 260.748 30.9722 260.664 30.9722 260.568 cv
30.9839 260.484 30.9961 260.388 31.02 260.268 cv
32.124 260.268 li
32.124 260.268 li
cp
ef
31.3682 254.544 mo
32.376 254.544 li
32.208 254.855 32.0879 255.156 32.0039 255.468 cv
31.9199 255.78 31.8721 256.08 31.8721 256.392 cv
31.8721 257.088 32.1001 257.64 32.5439 258.024 cv
32.9878 258.408 33.6118 258.6 34.4038 258.6 cv
35.208 258.6 35.832 258.408 36.2759 258.024 cv
36.7202 257.64 36.936 257.088 36.936 256.392 cv
36.936 256.08 36.8999 255.78 36.8159 255.468 cv
36.7319 255.156 36.6001 254.855 36.4321 254.544 cv
37.4277 254.544 li
37.5718 254.855 37.6802 255.168 37.7402 255.48 cv
37.7998 255.804 37.8359 256.152 37.8359 256.512 cv
37.8359 257.496 37.5361 258.288 36.9121 258.864 cv
36.2998 259.452 35.46 259.74 34.4038 259.74 cv
33.3359 259.74 32.4961 259.452 31.8838 258.864 cv
31.272 258.276 30.96 257.472 30.96 256.44 cv
30.96 256.104 30.9961 255.78 31.0679 255.468 cv
31.1401 255.156 31.2358 254.844 31.3682 254.544 cv
31.3682 254.544 li
cp
ef
33.8159 248.256 mo
33.228 248.268 32.7598 248.436 32.3999 248.748 cv
32.0518 249.072 31.8721 249.504 31.8721 250.032 cv
31.8721 250.632 32.0518 251.112 32.3882 251.472 cv
32.7241 251.832 33.2041 252.048 33.8159 252.096 cv
33.8159 248.256 li
33.8159 248.256 li
cp
34.1279 247.176 mo
34.6558 247.176 li
34.6558 252.132 li
35.3999 252.084 35.9761 251.868 36.3599 251.46 cv
36.7441 251.064 36.936 250.512 36.936 249.792 cv
36.936 249.384 36.8882 248.976 36.792 248.592 cv
36.6958 248.208 36.54 247.812 36.3242 247.428 cv
37.3438 247.428 li
37.5122 247.812 37.644 248.208 37.7158 248.616 cv
37.7881 249.024 37.8359 249.444 37.8359 249.852 cv
37.8359 250.908 37.5361 251.736 36.936 252.348 cv
36.3359 252.96 35.5078 253.26 34.4639 253.26 cv
33.396 253.26 32.5439 252.972 31.9082 252.396 cv
31.2842 251.82 30.96 251.028 30.96 250.044 cv
30.96 249.156 31.248 248.46 31.812 247.944 cv
32.3882 247.44 33.1558 247.176 34.1279 247.176 cv
ef
33.7202 239.892 mo
37.6802 239.892 li
37.6802 240.972 li
33.7559 240.972 li
33.1318 240.972 32.6758 241.104 32.3638 241.344 cv
32.0518 241.584 31.896 241.944 31.896 242.424 cv
31.896 243.012 32.0879 243.468 32.46 243.804 cv
32.832 244.14 33.3359 244.308 33.9722 244.308 cv
37.6802 244.308 li
37.6802 245.388 li
31.1162 245.388 li
31.1162 244.308 li
32.1362 244.308 li
31.752 244.056 31.4521 243.756 31.2598 243.396 cv
31.0679 243.048 30.96 242.64 30.96 242.184 cv
30.96 241.44 31.2002 240.864 31.668 240.48 cv
32.1362 240.096 32.8198 239.892 33.7202 239.892 cv
33.7202 239.892 li
cp
ef
29.2559 236.604 mo
31.1162 236.604 li
31.1162 234.384 li
31.9561 234.384 li
31.9561 236.604 li
35.52 236.604 li
36.0601 236.604 36.4082 236.532 36.5518 236.388 cv
36.708 236.244 36.7798 235.944 36.7798 235.488 cv
36.7798 234.384 li
37.6802 234.384 li
37.6802 235.488 li
37.6802 236.328 37.5239 236.904 37.2119 237.216 cv
36.8999 237.528 36.3359 237.684 35.52 237.684 cv
31.9561 237.684 li
31.9561 238.476 li
31.1162 238.476 li
31.1162 237.684 li
29.2559 237.684 li
29.2559 236.604 li
29.2559 236.604 li
cp
ef
30.96 226.728 mo
30.96 225.792 31.272 225.06 31.8721 224.52 cv
32.4839 223.992 33.3242 223.716 34.4038 223.716 cv
35.4839 223.716 36.3242 223.992 36.9238 224.52 cv
37.5361 225.06 37.8359 225.792 37.8359 226.728 cv
37.8359 227.676 37.5361 228.42 36.9238 228.948 cv
36.3242 229.476 35.4839 229.74 34.4038 229.74 cv
33.3242 229.74 32.4839 229.476 31.8721 228.948 cv
31.272 228.42 30.96 227.676 30.96 226.728 cv
30.96 226.728 li
cp
31.8721 226.728 mo
31.8721 227.304 32.1001 227.76 32.5562 228.096 cv
33.0122 228.432 33.624 228.6 34.4038 228.6 cv
35.1958 228.6 35.8081 228.444 36.2642 228.108 cv
36.7202 227.771 36.936 227.316 36.936 226.728 cv
36.936 226.152 36.7202 225.696 36.2642 225.36 cv
35.8081 225.024 35.1958 224.855 34.4038 224.855 cv
33.6362 224.855 33.0122 225.024 32.5562 225.36 cv
32.1001 225.696 31.8721 226.152 31.8721 226.728 cv
ef
28.5601 218.508 mo
29.46 218.508 li
29.46 219.54 li
29.46 219.924 29.5439 220.2 29.7002 220.344 cv
29.856 220.5 30.1318 220.572 30.54 220.572 cv
31.1162 220.572 li
31.1162 218.796 li
31.9561 218.796 li
31.9561 220.572 li
37.6802 220.572 li
37.6802 221.652 li
31.9561 221.652 li
31.9561 222.684 li
31.1162 222.684 li
31.1162 221.652 li
30.6602 221.652 li
29.9399 221.652 29.3999 221.484 29.064 221.148 cv
28.728 220.812 28.5601 220.271 28.5601 219.528 cv
28.5601 218.508 li
28.5601 218.508 li
cp
ef
29.2559 212.844 mo
31.1162 212.844 li
31.1162 210.624 li
31.9561 210.624 li
31.9561 212.844 li
35.52 212.844 li
36.0601 212.844 36.4082 212.772 36.5518 212.628 cv
36.708 212.484 36.7798 212.184 36.7798 211.728 cv
36.7798 210.624 li
37.6802 210.624 li
37.6802 211.728 li
37.6802 212.568 37.5239 213.144 37.2119 213.456 cv
36.8999 213.768 36.3359 213.924 35.52 213.924 cv
31.9561 213.924 li
31.9561 214.716 li
31.1162 214.716 li
31.1162 213.924 li
29.2559 213.924 li
29.2559 212.844 li
29.2559 212.844 li
cp
ef
28.5601 209.112 mo
28.5601 208.032 li
29.9277 208.032 li
29.9277 209.112 li
28.5601 209.112 li
28.5601 209.112 li
cp
31.1162 209.112 mo
31.1162 208.032 li
37.6802 208.032 li
37.6802 209.112 li
31.1162 209.112 li
ef
29.2559 204.684 mo
31.1162 204.684 li
31.1162 202.464 li
31.9561 202.464 li
31.9561 204.684 li
35.52 204.684 li
36.0601 204.684 36.4082 204.612 36.5518 204.468 cv
36.708 204.324 36.7798 204.024 36.7798 203.568 cv
36.7798 202.464 li
37.6802 202.464 li
37.6802 203.568 li
37.6802 204.408 37.5239 204.984 37.2119 205.296 cv
36.8999 205.608 36.3359 205.764 35.52 205.764 cv
31.9561 205.764 li
31.9561 206.556 li
31.1162 206.556 li
31.1162 205.764 li
29.2559 205.764 li
29.2559 204.684 li
29.2559 204.684 li
cp
ef
28.5601 201.192 mo
28.5601 200.112 li
37.6802 200.112 li
37.6802 201.192 li
28.5601 201.192 li
28.5601 201.192 li
cp
ef
33.8159 193.296 mo
33.228 193.308 32.7598 193.476 32.3999 193.788 cv
32.0518 194.112 31.8721 194.544 31.8721 195.072 cv
31.8721 195.672 32.0518 196.152 32.3882 196.512 cv
32.7241 196.872 33.2041 197.088 33.8159 197.136 cv
33.8159 193.296 li
33.8159 193.296 li
cp
34.1279 192.216 mo
34.6558 192.216 li
34.6558 197.172 li
35.3999 197.124 35.9761 196.908 36.3599 196.5 cv
36.7441 196.104 36.936 195.552 36.936 194.832 cv
36.936 194.424 36.8882 194.016 36.792 193.632 cv
36.6958 193.248 36.54 192.852 36.3242 192.468 cv
37.3438 192.468 li
37.5122 192.852 37.644 193.248 37.7158 193.656 cv
37.7881 194.064 37.8359 194.484 37.8359 194.892 cv
37.8359 195.948 37.5361 196.776 36.936 197.388 cv
36.3359 198 35.5078 198.3 34.4639 198.3 cv
33.396 198.3 32.5439 198.012 31.9082 197.436 cv
31.2842 196.86 30.96 196.068 30.96 195.084 cv
30.96 194.196 31.248 193.5 31.812 192.984 cv
32.3882 192.48 33.1558 192.216 34.1279 192.216 cv
ef
31.1162 187.176 mo
31.1162 186.096 li
36.2402 184.752 li
31.1162 183.408 li
31.1162 182.136 li
36.2402 180.792 li
31.1162 179.448 li
31.1162 178.368 li
37.6802 180.084 li
37.6802 181.356 li
32.3042 182.772 li
37.6802 184.188 li
37.6802 185.46 li
31.1162 187.176 li
31.1162 187.176 li
cp
ef
30.96 174.168 mo
30.96 173.232 31.272 172.5 31.8721 171.96 cv
32.4839 171.432 33.3242 171.156 34.4038 171.156 cv
35.4839 171.156 36.3242 171.432 36.9238 171.96 cv
37.5361 172.5 37.8359 173.232 37.8359 174.168 cv
37.8359 175.116 37.5361 175.86 36.9238 176.388 cv
36.3242 176.916 35.4839 177.18 34.4038 177.18 cv
33.3242 177.18 32.4839 176.916 31.8721 176.388 cv
31.272 175.86 30.96 175.116 30.96 174.168 cv
30.96 174.168 li
cp
31.8721 174.168 mo
31.8721 174.744 32.1001 175.2 32.5562 175.536 cv
33.0122 175.872 33.624 176.04 34.4038 176.04 cv
35.1958 176.04 35.8081 175.884 36.2642 175.548 cv
36.7202 175.212 36.936 174.756 36.936 174.168 cv
36.936 173.592 36.7202 173.136 36.2642 172.8 cv
35.8081 172.464 35.1958 172.296 34.4038 172.296 cv
33.6362 172.296 33.0122 172.464 32.5562 172.8 cv
32.1001 173.136 31.8721 173.592 31.8721 174.168 cv
ef
32.124 165.708 mo
32.0518 165.828 32.0039 165.96 31.9678 166.104 cv
31.9438 166.248 31.9199 166.404 31.9199 166.572 cv
31.9199 167.184 32.124 167.652 32.52 167.976 cv
32.916 168.312 33.48 168.468 34.2241 168.468 cv
37.6802 168.468 li
37.6802 169.548 li
31.1162 169.548 li
31.1162 168.468 li
32.1362 168.468 li
31.7402 168.252 31.4399 167.952 31.248 167.592 cv
31.0562 167.232 30.96 166.788 30.96 166.26 cv
30.96 166.188 30.9722 166.104 30.9722 166.008 cv
30.9839 165.924 30.9961 165.828 31.02 165.708 cv
32.124 165.708 li
32.124 165.708 li
cp
ef
34.4038 164.064 mo
35.1958 164.064 35.8198 163.908 36.2759 163.584 cv
36.7319 163.26 36.9478 162.804 36.9478 162.228 cv
36.9478 161.664 36.7319 161.22 36.2759 160.884 cv
35.8198 160.56 35.1958 160.392 34.4038 160.392 cv
33.6118 160.392 33 160.56 32.5439 160.884 cv
32.0879 161.22 31.8599 161.664 31.8599 162.228 cv
31.8599 162.804 32.0879 163.26 32.5439 163.584 cv
33 163.908 33.6118 164.064 34.4038 164.064 cv
34.4038 164.064 li
cp
32.1118 160.392 mo
28.5601 160.392 li
28.5601 159.312 li
37.6802 159.312 li
37.6802 160.392 li
36.6958 160.392 li
37.0918 160.62 37.3799 160.908 37.5601 161.256 cv
37.7402 161.604 37.8359 162.012 37.8359 162.492 cv
37.8359 163.284 37.5239 163.932 36.8999 164.436 cv
36.2759 164.94 35.436 165.18 34.4038 165.18 cv
33.3721 165.18 32.5439 164.94 31.9082 164.436 cv
31.2842 163.932 30.96 163.284 30.96 162.492 cv
30.96 162.012 31.0562 161.604 31.248 161.256 cv
31.4399 160.908 31.728 160.62 32.1118 160.392 cv
ef
31.3081 152.844 mo
32.3281 152.844 li
32.1841 153.156 32.064 153.468 31.98 153.792 cv
31.9082 154.128 31.8599 154.464 31.8599 154.812 cv
31.8599 155.352 31.9438 155.76 32.1118 156.024 cv
32.2798 156.288 32.52 156.42 32.8438 156.42 cv
33.0962 156.42 33.2881 156.324 33.4321 156.132 cv
33.5762 155.94 33.7202 155.556 33.8398 154.98 cv
33.9238 154.608 li
34.0918 153.84 34.332 153.3 34.6201 152.976 cv
34.9199 152.664 35.3398 152.496 35.8682 152.496 cv
36.48 152.496 36.96 152.736 37.3081 153.216 cv
37.668 153.696 37.8359 154.368 37.8359 155.208 cv
37.8359 155.568 37.7998 155.928 37.7402 156.312 cv
37.6802 156.696 37.584 157.092 37.4399 157.512 cv
36.3242 157.512 li
36.54 157.116 36.6958 156.72 36.792 156.336 cv
36.8999 155.952 36.9478 155.568 36.9478 155.184 cv
36.9478 154.68 36.8638 154.284 36.6958 154.008 cv
36.5278 153.744 36.2759 153.6 35.9521 153.6 cv
35.6641 153.6 35.436 153.708 35.2798 153.9 cv
35.124 154.092 34.9678 154.524 34.8242 155.196 cv
34.7402 155.568 li
34.5962 156.24 34.3799 156.732 34.0918 157.02 cv
33.8042 157.32 33.4082 157.464 32.8921 157.464 cv
32.2798 157.464 31.7998 157.248 31.4639 156.816 cv
31.1279 156.384 30.96 155.76 30.96 154.944 cv
30.96 154.548 30.9961 154.176 31.0562 153.816 cv
31.1162 153.468 31.2002 153.144 31.3081 152.844 cv
31.3081 152.844 li
cp
ef
1 lw
2 lc
72 388.8 mo
72 43.2002 li
72 388.8 mo
518.4 388.8 li
518.4 388.8 mo
518.4 43.2002 li
72 43.2002 mo
518.4 43.2002 li
@
391.211 91.2207 mo
573.582 91.2207 li
573.582 27.3638 li
391.211 27.3638 li
391.211 91.2207 li
391.211 91.2207 li
cp
1 1 1 rgb
f
391.211 91.2207 mo
573.582 91.2207 li
573.582 27.3638 li
391.211 27.3638 li
391.211 91.2207 li
391.211 91.2207 li
cp
0 0 0 rgb
@
401.291 38.7246 mo
421.451 38.7246 li
0 0 1 rgb
@
445.167 38.9316 mo
445.167 43.6836 li
443.871 43.6836 li
443.871 38.9751 li
443.871 38.2261 443.713 37.6792 443.425 37.3047 cv
443.137 36.9302 442.705 36.7432 442.129 36.7432 cv
441.424 36.7432 440.876 36.9736 440.473 37.4199 cv
440.069 37.8662 439.868 38.4712 439.868 39.2344 cv
439.868 43.6836 li
438.572 43.6836 li
438.572 32.7397 li
439.868 32.7397 li
439.868 37.0313 li
440.171 36.5703 440.53 36.21 440.963 35.98 cv
441.38 35.7495 441.87 35.6201 442.417 35.6201 cv
443.31 35.6201 444.001 35.9077 444.462 36.4692 cv
444.923 37.0313 445.167 37.8516 445.167 38.9316 cv
445.167 38.9316 li
cp
0 0 0 rgb
ef
447.735 32.7397 mo
449.031 32.7397 li
449.031 34.3813 li
447.735 34.3813 li
447.735 32.7397 li
447.735 32.7397 li
cp
447.735 35.8071 mo
449.031 35.8071 li
449.031 43.6836 li
447.735 43.6836 li
447.735 35.8071 li
ef
450.894 35.8071 mo
452.262 35.8071 li
454.725 42.4165 li
457.187 35.8071 li
458.555 35.8071 li
455.603 43.6836 li
453.846 43.6836 li
450.894 35.8071 li
450.894 35.8071 li
cp
ef
401.291 59.4707 mo
421.451 59.4707 li
0 0.501961 0 rgb
@
438.615 53.6201 mo
439.911 53.6201 li
439.911 55.2612 li
438.615 55.2612 li
438.615 53.6201 li
438.615 53.6201 li
cp
438.615 56.687 mo
439.911 56.687 li
439.911 64.564 li
438.615 64.564 li
438.615 56.687 li
0 0 0 rgb
ef
448.83 58.1992 mo
449.146 57.623 449.535 57.2056 449.981 56.9175 cv
450.429 56.6436 450.961 56.5 451.58 56.5 cv
452.387 56.5 453.021 56.7881 453.467 57.3638 cv
453.913 57.9399 454.144 58.7607 454.144 59.812 cv
454.144 64.564 li
452.848 64.564 li
452.848 59.855 li
452.848 59.1064 452.703 58.5444 452.444 58.1704 cv
452.171 57.8101 451.768 57.623 451.221 57.623 cv
450.544 57.623 450.011 57.8535 449.622 58.2998 cv
449.233 58.7461 449.046 59.3511 449.046 60.1143 cv
449.046 64.564 li
447.75 64.564 li
447.75 59.855 li
447.75 59.1064 447.605 58.5444 447.347 58.1704 cv
447.073 57.8101 446.655 57.623 446.108 57.623 cv
445.446 57.623 444.913 57.8535 444.524 58.2998 cv
444.136 58.7461 443.948 59.3511 443.948 60.1143 cv
443.948 64.564 li
442.652 64.564 li
442.652 56.687 li
443.948 56.687 li
443.948 57.9111 li
444.236 57.4355 444.597 57.0757 445.014 56.8457 cv
445.417 56.6152 445.906 56.5 446.482 56.5 cv
447.059 56.5 447.534 56.6436 447.938 56.9316 cv
448.34 57.2197 448.628 57.6519 448.83 58.1992 cv
448.83 58.1992 li
cp
ef
462.75 58.1992 mo
463.066 57.623 463.455 57.2056 463.901 56.9175 cv
464.349 56.6436 464.881 56.5 465.5 56.5 cv
466.307 56.5 466.94 56.7881 467.387 57.3638 cv
467.833 57.9399 468.063 58.7607 468.063 59.812 cv
468.063 64.564 li
466.768 64.564 li
466.768 59.855 li
466.768 59.1064 466.623 58.5444 466.364 58.1704 cv
466.091 57.8101 465.688 57.623 465.141 57.623 cv
464.464 57.623 463.931 57.8535 463.542 58.2998 cv
463.153 58.7461 462.966 59.3511 462.966 60.1143 cv
462.966 64.564 li
461.67 64.564 li
461.67 59.855 li
461.67 59.1064 461.525 58.5444 461.267 58.1704 cv
460.993 57.8101 460.575 57.623 460.028 57.623 cv
459.366 57.623 458.833 57.8535 458.444 58.2998 cv
458.056 58.7461 457.868 59.3511 457.868 60.1143 cv
457.868 64.564 li
456.572 64.564 li
456.572 56.687 li
457.868 56.687 li
457.868 57.9111 li
458.156 57.4355 458.517 57.0757 458.934 56.8457 cv
459.337 56.6152 459.826 56.5 460.402 56.5 cv
460.979 56.5 461.454 56.6436 461.857 56.9316 cv
462.261 57.2197 462.548 57.6519 462.75 58.1992 cv
462.75 58.1992 li
cp
ef
470.406 61.4536 mo
470.406 56.687 li
471.702 56.687 li
471.702 61.4102 li
471.702 62.1592 471.846 62.7061 472.134 63.0806 cv
472.422 63.4551 472.854 63.6421 473.444 63.6421 cv
474.136 63.6421 474.697 63.4263 475.101 62.98 cv
475.503 62.5332 475.705 61.9287 475.705 61.1509 cv
475.705 56.687 li
477.001 56.687 li
477.001 64.564 li
475.705 64.564 li
475.705 63.3545 li
475.389 63.8438 475.014 64.1895 474.61 64.4199 cv
474.193 64.6357 473.718 64.751 473.171 64.751 cv
472.264 64.751 471.572 64.4775 471.111 63.916 cv
470.636 63.3687 470.406 62.5479 470.406 61.4536 cv
470.406 61.4536 li
cp
ef
486.207 59.812 mo
486.207 64.564 li
484.911 64.564 li
484.911 59.855 li
484.911 59.1064 484.753 58.5591 484.465 58.1846 cv
484.177 57.8101 483.745 57.623 483.169 57.623 cv
482.464 57.623 481.916 57.8535 481.513 58.2998 cv
481.11 58.7461 480.908 59.3511 480.908 60.1143 cv
480.908 64.564 li
479.612 64.564 li
479.612 56.687 li
480.908 56.687 li
480.908 57.9111 li
481.211 57.4502 481.57 57.0903 482.003 56.8599 cv
482.42 56.6294 482.91 56.5 483.457 56.5 cv
484.35 56.5 485.041 56.7881 485.502 57.3496 cv
485.963 57.9111 486.207 58.7319 486.207 59.812 cv
486.207 59.812 li
cp
ef
491.828 56.5 mo
492.951 56.5 493.83 56.874 494.478 57.5942 cv
495.111 58.3286 495.442 59.3364 495.442 60.6328 cv
495.442 61.9287 495.111 62.9365 494.478 63.6567 cv
493.83 64.3911 492.951 64.751 491.828 64.751 cv
490.69 64.751 489.798 64.3911 489.164 63.6567 cv
488.53 62.9365 488.214 61.9287 488.214 60.6328 cv
488.214 59.3364 488.53 58.3286 489.164 57.5942 cv
489.798 56.874 490.69 56.5 491.828 56.5 cv
491.828 56.5 li
cp
491.828 57.5942 mo
491.137 57.5942 490.59 57.8677 490.187 58.415 cv
489.783 58.9624 489.582 59.6968 489.582 60.6328 cv
489.582 61.583 489.769 62.3174 490.172 62.8647 cv
490.575 63.4121 491.123 63.6709 491.828 63.6709 cv
492.52 63.6709 493.066 63.4121 493.47 62.8647 cv
493.873 62.3174 494.074 61.583 494.074 60.6328 cv
494.074 59.7109 493.873 58.9624 493.47 58.415 cv
493.066 57.8677 492.52 57.5942 491.828 57.5942 cv
ef
498.433 60.6328 mo
498.433 61.583 498.62 62.332 499.009 62.8789 cv
499.397 63.4263 499.945 63.6855 500.636 63.6855 cv
501.313 63.6855 501.846 63.4263 502.249 62.8789 cv
502.638 62.332 502.84 61.583 502.84 60.6328 cv
502.84 59.6821 502.638 58.9478 502.249 58.4004 cv
501.846 57.8535 501.313 57.5801 500.636 57.5801 cv
499.945 57.5801 499.397 57.8535 499.009 58.4004 cv
498.62 58.9478 498.433 59.6821 498.433 60.6328 cv
498.433 60.6328 li
cp
502.84 57.8823 mo
502.84 53.6201 li
504.136 53.6201 li
504.136 64.564 li
502.84 64.564 li
502.84 63.3828 li
502.565 63.8584 502.22 64.2041 501.803 64.4199 cv
501.385 64.6357 500.896 64.751 500.319 64.751 cv
499.369 64.751 498.592 64.3765 497.986 63.6279 cv
497.382 62.8789 497.094 61.8711 497.094 60.6328 cv
497.094 59.394 497.382 58.4004 497.986 57.6377 cv
498.592 56.8887 499.369 56.5 500.319 56.5 cv
500.896 56.5 501.385 56.6152 501.803 56.8457 cv
502.22 57.0757 502.565 57.4214 502.84 57.8823 cv
ef
512.219 59.9268 mo
512.204 59.2217 512.003 58.6597 511.628 58.228 cv
511.239 57.8101 510.721 57.5942 510.088 57.5942 cv
509.367 57.5942 508.791 57.8101 508.359 58.2134 cv
507.928 58.6167 507.668 59.1924 507.61 59.9268 cv
512.219 59.9268 li
512.219 59.9268 li
cp
513.515 60.3013 mo
513.515 60.9351 li
507.567 60.9351 li
507.625 61.8276 507.884 62.519 508.374 62.98 cv
508.849 63.4404 509.512 63.6709 510.375 63.6709 cv
510.865 63.6709 511.354 63.6133 511.815 63.498 cv
512.276 63.3828 512.751 63.1958 513.212 62.9365 cv
513.212 64.1606 li
512.751 64.3623 512.276 64.5205 511.786 64.6069 cv
511.297 64.6934 510.793 64.751 510.304 64.751 cv
509.036 64.751 508.043 64.3911 507.309 63.6709 cv
506.574 62.9512 506.214 61.9575 506.214 60.7046 cv
506.214 59.4229 506.56 58.4004 507.251 57.6377 cv
507.941 56.8887 508.893 56.5 510.073 56.5 cv
511.139 56.5 511.974 56.8457 512.593 57.5225 cv
513.198 58.2134 513.515 59.1348 513.515 60.3013 cv
ef
519.645 53.6201 mo
519.645 54.6997 li
518.406 54.6997 li
517.945 54.6997 517.614 54.8008 517.441 54.9878 cv
517.254 55.1748 517.167 55.5063 517.167 55.9961 cv
517.167 56.687 li
519.299 56.687 li
519.299 57.6953 li
517.167 57.6953 li
517.167 64.564 li
515.871 64.564 li
515.871 57.6953 li
514.633 57.6953 li
514.633 56.687 li
515.871 56.687 li
515.871 56.1396 li
515.871 55.2759 516.073 54.6279 516.477 54.2246 cv
516.88 53.8213 517.527 53.6201 518.42 53.6201 cv
519.645 53.6201 li
519.645 53.6201 li
cp
ef
520.695 53.6201 mo
521.991 53.6201 li
521.991 55.2612 li
520.695 55.2612 li
520.695 53.6201 li
520.695 53.6201 li
cp
520.695 56.687 mo
521.991 56.687 li
521.991 64.564 li
520.695 64.564 li
520.695 56.687 li
ef
530.449 56.9893 mo
530.449 58.1992 li
530.074 57.9976 529.715 57.8535 529.34 57.7524 cv
528.966 57.6519 528.605 57.5942 528.231 57.5942 cv
527.396 57.5942 526.733 57.8677 526.273 58.4004 cv
525.813 58.9336 525.582 59.6821 525.582 60.6328 cv
525.582 61.5977 525.813 62.3462 526.273 62.8789 cv
526.733 63.4121 527.396 63.6709 528.231 63.6709 cv
528.605 63.6709 528.966 63.6279 529.34 63.5269 cv
529.715 63.4263 530.074 63.2676 530.449 63.0664 cv
530.449 64.2612 li
530.074 64.4341 529.7 64.564 529.326 64.6357 cv
528.937 64.708 528.52 64.751 528.088 64.751 cv
526.906 64.751 525.956 64.3911 525.265 63.6421 cv
524.56 62.9077 524.214 61.8999 524.214 60.6328 cv
524.214 59.3511 524.56 58.3428 525.265 57.6084 cv
525.971 56.874 526.936 56.5 528.174 56.5 cv
528.577 56.5 528.966 56.543 529.34 56.6294 cv
529.715 56.7158 530.089 56.8311 530.449 56.9893 cv
530.449 56.9893 li
cp
ef
532.695 53.6201 mo
533.991 53.6201 li
533.991 55.2612 li
532.695 55.2612 li
532.695 53.6201 li
532.695 53.6201 li
cp
532.695 56.687 mo
533.991 56.687 li
533.991 64.564 li
532.695 64.564 li
532.695 56.687 li
ef
541.979 59.9268 mo
541.964 59.2217 541.763 58.6597 541.389 58.228 cv
540.999 57.8101 540.481 57.5942 539.848 57.5942 cv
539.128 57.5942 538.552 57.8101 538.119 58.2134 cv
537.688 58.6167 537.429 59.1924 537.37 59.9268 cv
541.979 59.9268 li
541.979 59.9268 li
cp
543.274 60.3013 mo
543.274 60.9351 li
537.327 60.9351 li
537.385 61.8276 537.645 62.519 538.134 62.98 cv
538.609 63.4404 539.271 63.6709 540.136 63.6709 cv
540.625 63.6709 541.114 63.6133 541.575 63.498 cv
542.036 63.3828 542.512 63.1958 542.973 62.9365 cv
542.973 64.1606 li
542.512 64.3623 542.036 64.5205 541.547 64.6069 cv
541.057 64.6934 540.553 64.751 540.063 64.751 cv
538.796 64.751 537.803 64.3911 537.068 63.6709 cv
536.334 62.9512 535.974 61.9575 535.974 60.7046 cv
535.974 59.4229 536.319 58.4004 537.011 57.6377 cv
537.702 56.8887 538.652 56.5 539.833 56.5 cv
540.898 56.5 541.733 56.8457 542.353 57.5225 cv
542.958 58.2134 543.274 59.1348 543.274 60.3013 cv
ef
551.968 59.812 mo
551.968 64.564 li
550.672 64.564 li
550.672 59.855 li
550.672 59.1064 550.513 58.5591 550.225 58.1846 cv
549.937 57.8101 549.505 57.623 548.929 57.623 cv
548.224 57.623 547.677 57.8535 547.273 58.2998 cv
546.87 58.7461 546.668 59.3511 546.668 60.1143 cv
546.668 64.564 li
545.372 64.564 li
545.372 56.687 li
546.668 56.687 li
546.668 57.9111 li
546.971 57.4502 547.331 57.0903 547.763 56.8599 cv
548.181 56.6294 548.67 56.5 549.217 56.5 cv
550.11 56.5 550.801 56.7881 551.262 57.3496 cv
551.723 57.9111 551.968 58.7319 551.968 59.812 cv
551.968 59.812 li
cp
ef
560.209 56.9893 mo
560.209 58.1992 li
559.835 57.9976 559.475 57.8535 559.101 57.7524 cv
558.726 57.6519 558.366 57.5942 557.991 57.5942 cv
557.156 57.5942 556.494 57.8677 556.033 58.4004 cv
555.572 58.9336 555.342 59.6821 555.342 60.6328 cv
555.342 61.5977 555.572 62.3462 556.033 62.8789 cv
556.494 63.4121 557.156 63.6709 557.991 63.6709 cv
558.366 63.6709 558.726 63.6279 559.101 63.5269 cv
559.475 63.4263 559.835 63.2676 560.209 63.0664 cv
560.209 64.2612 li
559.835 64.4341 559.46 64.564 559.086 64.6357 cv
558.697 64.708 558.279 64.751 557.848 64.751 cv
556.667 64.751 555.716 64.3911 555.025 63.6421 cv
554.319 62.9077 553.974 61.8999 553.974 60.6328 cv
553.974 59.3511 554.319 58.3428 555.025 57.6084 cv
555.73 56.874 556.695 56.5 557.934 56.5 cv
558.337 56.5 558.726 56.543 559.101 56.6294 cv
559.475 56.7158 559.849 56.8311 560.209 56.9893 cv
560.209 56.9893 li
cp
ef
565.738 65.2837 mo
565.364 66.2056 565.004 66.8247 564.658 67.1128 cv
564.313 67.4004 563.853 67.5444 563.276 67.5444 cv
562.239 67.5444 li
562.239 66.4648 li
563.003 66.4648 li
563.349 66.4648 563.622 66.3784 563.823 66.2056 cv
564.025 66.0327 564.241 65.6436 564.485 65.0103 cv
564.716 64.4341 li
561.534 56.687 li
562.901 56.687 li
565.364 62.8501 li
567.827 56.687 li
569.194 56.687 li
565.738 65.2837 li
565.738 65.2837 li
cp
ef
401.291 80.2178 mo
421.451 80.2178 li
1 0 0 rgb
@
444.778 80.7109 mo
444.778 85.2036 li
443.482 85.2036 li
443.482 84.0088 li
443.181 84.498 442.806 84.8438 442.374 85.0596 cv
441.941 85.2759 441.395 85.3911 440.761 85.3911 cv
439.955 85.3911 439.307 85.1748 438.831 84.7285 cv
438.356 84.2822 438.126 83.6772 438.126 82.9141 cv
438.126 82.0356 438.414 81.3735 439.019 80.9126 cv
439.609 80.4663 440.487 80.2358 441.668 80.2358 cv
443.482 80.2358 li
443.482 80.1064 li
443.482 79.5156 443.281 79.0552 442.893 78.7236 cv
442.504 78.4072 441.956 78.2344 441.251 78.2344 cv
440.79 78.2344 440.357 78.292 439.926 78.4072 cv
439.494 78.5225 439.091 78.6807 438.702 78.8823 cv
438.702 77.687 li
439.163 77.5142 439.623 77.3701 440.069 77.2837 cv
440.517 77.1973 440.948 77.1396 441.38 77.1396 cv
442.518 77.1396 443.367 77.4424 443.929 78.0327 cv
444.49 78.623 444.778 79.5156 444.778 80.7109 cv
444.778 80.7109 li
cp
442.201 81.2437 mo
441.149 81.2437 440.43 81.3735 440.026 81.604 cv
439.623 81.8486 439.422 82.252 439.422 82.8276 cv
439.422 83.2886 439.565 83.6631 439.868 83.9224 cv
440.171 84.1958 440.588 84.3252 441.106 84.3252 cv
441.826 84.3252 442.402 84.0806 442.835 83.562 cv
443.267 83.0581 443.482 82.3813 443.482 81.5317 cv
443.482 81.2437 li
442.201 81.2437 li
0 0 0 rgb
ef
447.495 74.2598 mo
448.791 74.2598 li
448.791 75.9014 li
447.495 75.9014 li
447.495 74.2598 li
447.495 74.2598 li
cp
447.495 77.3271 mo
448.791 77.3271 li
448.791 85.2036 li
447.495 85.2036 li
447.495 77.3271 li
ef
452.113 81.2725 mo
452.113 82.2231 452.3 82.9717 452.689 83.519 cv
453.078 84.0664 453.625 84.3252 454.316 84.3252 cv
454.993 84.3252 455.525 84.0664 455.929 83.519 cv
456.317 82.9717 456.52 82.2231 456.52 81.2725 cv
456.52 80.3223 456.317 79.5879 455.929 79.0405 cv
455.525 78.4937 454.993 78.2197 454.316 78.2197 cv
453.625 78.2197 453.078 78.4937 452.689 79.0405 cv
452.3 79.5879 452.113 80.3223 452.113 81.2725 cv
452.113 81.2725 li
cp
456.52 78.5225 mo
456.52 74.2598 li
457.815 74.2598 li
457.815 85.2036 li
456.52 85.2036 li
456.52 84.0229 li
456.246 84.498 455.9 84.8438 455.482 85.0596 cv
455.065 85.2759 454.575 85.3911 453.999 85.3911 cv
453.049 85.3911 452.271 85.0166 451.667 84.2676 cv
451.062 83.519 450.773 82.5112 450.773 81.2725 cv
450.773 80.0342 451.062 79.0405 451.667 78.2773 cv
452.271 77.5288 453.049 77.1396 453.999 77.1396 cv
454.575 77.1396 455.065 77.2549 455.482 77.4854 cv
455.9 77.7158 456.246 78.0615 456.52 78.5225 cv
ef
465.481 77.5576 mo
465.481 78.7813 li
465.106 78.6084 464.732 78.4648 464.344 78.3638 cv
463.94 78.2773 463.537 78.2197 463.119 78.2197 cv
462.472 78.2197 461.981 78.3208 461.665 78.5225 cv
461.349 78.7236 461.189 79.0117 461.189 79.4004 cv
461.189 79.7031 461.305 79.9336 461.535 80.1064 cv
461.766 80.2793 462.227 80.4517 462.918 80.5957 cv
463.364 80.6968 li
464.286 80.8984 464.934 81.186 465.322 81.5317 cv
465.697 81.8916 465.898 82.396 465.898 83.0293 cv
465.898 83.7637 465.61 84.3398 465.034 84.7573 cv
464.459 85.1895 463.652 85.3911 462.645 85.3911 cv
462.212 85.3911 461.78 85.3477 461.319 85.2759 cv
460.858 85.2036 460.384 85.0889 459.88 84.916 cv
459.88 83.5767 li
460.354 83.8359 460.83 84.0229 461.291 84.1382 cv
461.751 84.2676 462.212 84.3252 462.673 84.3252 cv
463.278 84.3252 463.753 84.2246 464.084 84.0229 cv
464.401 83.8213 464.574 83.519 464.574 83.1304 cv
464.574 82.7847 464.444 82.5112 464.214 82.3237 cv
463.983 82.1367 463.465 81.9492 462.658 81.7769 cv
462.212 81.6758 li
461.406 81.5029 460.815 81.2437 460.47 80.8984 cv
460.109 80.5527 459.938 80.0776 459.938 79.458 cv
459.938 78.7236 460.196 78.1479 460.715 77.7446 cv
461.233 77.3413 461.981 77.1396 462.961 77.1396 cv
463.437 77.1396 463.883 77.1831 464.314 77.2549 cv
464.732 77.3271 465.121 77.4277 465.481 77.5576 cv
465.481 77.5576 li
cp
ef
2 lw
0 lc
0 lj
4 ml
183 304.666 mo
183 341.167 li
@
184.025 343.529 mo
184.524 341.876 184.984 340.801 185.517 339.475 cv
180.472 339.475 li
180.698 339.949 181.465 341.876 181.964 343.529 cv
182.499 345.299 182.864 346.903 182.995 347.943 cv
183.125 346.903 183.491 345.299 184.025 343.529 cv
cp
f
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 70 /F putdup 83 /S putdup 85 /U putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 105 /i putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 113 /q putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 118 /v putdup 121 /y putdup 127 /f_i putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings24 dict dup begin/space <1C60D8A8C9B896187A> |-/F <1C60D8A8C9B7544E530E823999841DA2F8EC66E9CFE2CD6B50437205F942FF37E122B69D17C7AA691A603207160811AFB791> |-/S <1C60D8A8C9B7AED8035FF9728E9C78ACC28F20CC9666D445523C20D6BC6D45C854A0BE693CA04DDB35CE9C6FCC12699F3ECF3D1B67F9F5777A6EECDAF3C0F3F32C0B6BC38F752623DB2A9617BDB514ED25F1A310A0C42BE659A27D8F2C06C4BFA42A6084F73A353D30020A89B386DABBAAA17119B17F011D1BF8067CBFE17C2D6AE10C51C95BF00F09A50ED067AF> |-/U <1C60D8A8C9B67A40D81BFBD664698F172962E5E1FA1185B63F3290B3666C22108B29923B1DC2E04A6BB03297D059A20638E9439889AA598516C5989124B65198F3D60A7398> |-/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A261528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D88393EC5B1BCAE7CEACDFA7D9A043D> |-/b <1C60D8A8C9B7E2CE503F0CE2BC5634A8F8728B9E7DF78E9EB37EA1AAF5A6E14429B2FFC30BA7B2B7F7056F226E2401F24ABDAD5426247AC27BE4FA97CE94C91E5B97490DDD42E9AC1499720E52A641A6B5FD3039B53C33A6C3FB59A9FDC5809A26029808C985DEBED644B28F1427AE3990CDC08FE3F67389E1C6D971D03C58C4203806687562D626FE9888BA19E8E374C457B0F0CAD2096A35C2A25CA9F88F3E7B91EC8C23BC> |-/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624097F1B5D47BF4F384727F53BA1763156DBDB0266> |-/d <1C60D8A8C9B7E7C1D82219353B31AE497773900CFE039E7C34F7CEBE101056958EFFC2C789CCBD8768CC683564B6074DAAAE648B50C88AD4C58AC712C8476BA68C74E592EF7E71792F9E5367AB3C80F9D183D28DD5E961AA14DCB5D9206768FB9E099DA642A8BAA73D52C56C9913DC619FDF3F90996DC8D242E6BF94BEBE752CB2F5D6196384CDD6E5AC10AFB49712810FFD82A2782B9B182DA37A23E6043872EFC1C407DD53136E> |-/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AEDC4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C0492C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E8106797186054DABC39E6B> |-/f <1C60D8A8C9B8469EE0EEFD5AEC6CA97A72064EDB5F8138E6D1529C05D71AD800DE9767801FDF34CB86E1E21FD9D405698D46905E6F519DDB7CBC96570BA09B7E74CE45A9784C89ACE8876894AF309C859106C75B1212CD> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E21C6C79BBDA40B7772F2DEC85ADAD3476B> |-/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-/m <1C60D8A8C9B6B7700392E60257FC106462D2DFCBC2A10DB5A615FEAAB80AD406B3832324841574E3D3133104747B3854CDADF52623F13A7F1244387949CA519BF305061F6B288B581C60DA40B94376A357459EBA755901A927650F836941E942CE400E1FF6115974FBE2B4AAC56A74FF06B173793CC52E5CDF6F129032B1749CF571CC87D5D8236938E9D26865B5B2E013E76E7BD1DBAB8AA6F040AACF> |-/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A36646DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0318D13C761F9DF> |-/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-/q <1C60D8A8C9B7E897EED043C74253B54ADD4A83B5A401EE275FD05305D443701C0B5FB5FFB629FD564139466A0D21B941D95638CDD0441A0BA219E67025CA58D717F5105065C6C534C87A1E9460A7EB934679C52896D0325C4745FC1FA2E19A833C7512C47FAFC1F455DA264B132201332D7965A6000B61991E83CF8296E65C72578347B3415411104B5B8018A71A688EDD6AFDB9028F3C25C58A0C2F46C8DD14D67E4428A4> |-/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-/s <1C60D8A8C9B70FAD6F31E6985338EEEA1793890FC3B3DC4027B9CC9488D5A6B4D4C4E3E08CED307B2C798C1699A9DD310011666D86920512F1C3EB9CEE4F24B897BB1E950EE111237B9A2BC5BBB8732A07D9407EA3C86D8241785B5209F0AEBA9DE73147EEE82D829B87C7> |-/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E6402088837AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3D16C57> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD7B90AF6DE09B4373C71DC870DE9EFA0B94E7506F75EEE558DF81CD33372DAD0B84FB6B3C173C4DB8D5EA8C4F6D8C721F2FFE6909411B724C264F09293D8D8F89019F8CCCB6FE3AF5C57> |-/v <1C60D8A8C9B75A17982D11DC3FC677436DFDC6EA949B3A8A476902498B78CD729866CE567C88B5C4105F11006EA75E6774682E91A2E1F257423C8BD0B940F1B9F1BCB8B413DFC78AF75D4027> |-/y <1C60D8A8C9B74451438745C9BFBA6ADBF77C623A74806E5154FE3B1D23AD89884413882DCD456BA075554715051F4B509904A44C98E8994424C1B156D65DBD9989905EF3DE501EC4A81DE7294F3DD868FBAE7BF61D1105CF8B349074D58AEC16A3DDE7732615028813D74148E904C1C87C7D157893B843DFD35C187593AC68163F56BACA6337> |-/f_i <1C60D8A8C9B7B07F53A1558F68652DF6013355F9F1E87F50373E8BD48BCCABB3EC3C45930D0DF90952BCC40A7766C7F4D86466254C59FDE5BEB84264CA9494C8579C506D93908483998E668F169235E3B7355EDBD18D1B600312> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/BWBVGA+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/BWBVGA+MyriadPro-Regular*1 [32{/.notdef}rp /space 37{/.notdef}rp /F 12{/.notdef}rp /S /.notdef /U 11{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o /.notdef /q /r /s /t /u /v 2{/.notdef}rp /y 5{/.notdef}rp /f_i 128{/.notdef}rp]BWBVGA+MyriadPro-Regular nfBWBVGA+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf112.769 255.666 mo(First US clinical)[5.53223 2.80811 3.92383 4.75195 3.97168 2.54395 7.76367 5.91602 2.54395 5.37598 2.83203 2.80811 6.65967 2.80811 5.37598 5.78369 0 ]xsh114.473 270.066 mo(observation of)[6.58789 6.82764 4.75195 6.01221 4.22363 5.72412 5.73584 3.97217 2.80762 6.58789 6.66016 2.54395 6.58789 0 ]xsh140.608 284.466 mo(acquired )[5.78418 5.30371 6.75586 6.61182 2.80811 3.8042 6.01172 6.76807 0 ]xsh93.1611 298.866 mo(immunode\177ciency)[2.80811 10.0078 10.0078 6.6123 6.65967 6.58789 6.76807 6.01172 6.27588 5.37598 2.80811 6.01221 6.65967 5.5918 0 ]xsh197.5 235.2 mo
197.5 281.668 li
@
198.525 284.03 mo
199.024 282.377 199.484 281.302 200.017 279.976 cv
194.972 279.976 li
195.198 280.45 195.965 282.377 196.464 284.03 cv
196.999 285.8 197.364 287.404 197.495 288.444 cv
197.625 287.404 197.991 285.8 198.525 284.03 cv
cp
f
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginBWBVGA+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/A <1C60D8A8C9B7D7E88499B0B4629F6223175CD4E8063229FBCC9F00B932F15865B21E5E7BB034E6AEB00B8493B7416EA5F21E0E31EA4A4AA7B249DD04C2020B54E2FE3571164F33157FAF89CB55ED12EC09CD04764D59017211B80D8BF81FE221E84A40> |-/D <1C60D8A8C9B64FADC8BE4593403BE5D574FAA91D24903C73A9847FBCFF2CCAE7B82F347344B6D75D9DA8CFD564A5192C31CC0F81E85BFE65DA0E98609881F08E27947C3AA06FD0D02C1BFBD8926D8C270B5E2950C4A34E562381A9DCE503FFFA3F4060AB2DBCCA9D5531B6> |-/I <1C60D8A8C9B87DE005AD6F3C5D74814B2BFE06F81F462471EDB11E0EC39F39EA> |-/T <1C60D8A8C9B7AA91799D50BEC147DC15659E7F5EC34F826A01358F7E6EB53E56E1831B0550D2FE4055F5> |-/h <1C60D8A8C9B790A816BA887E1DA4852044FABD5C80CA3A9E2E9C1F200BD200369E1A531F52CE66B5B19C492F0751A1C2858510B2E2690FB789B214E0E0C6537C1C71B0F5B79BE42FC591254AEEEA9BA5BA2F0A43A49AB11B4C> |-/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FDCA5DD8FB0C9C7D76709EB2E3CEF7455DFF330D234D9132A6F52698D79064F174F1D99AEB0CF9139A6469F8D4BE826FAC77DD18B951C7429F3A77A1434C1A624632AE9545E6FD8A1CFF86A978EB2F9D9C8D213E3AEF1293A1DF353A70DA5E24E2AC4CE8D2656D24B8166AAA778D66777269CA00CCD283376A690AE85A4058A8C9155FC3FA3A08F87D3A4F002FFBBE8C69D79181> |-/w <1C60D8A8C9B615D1D39C3ADF830FB08A1A35A87DCFD157E58FABDD21BA80846DED508D58D627D5468CDEA878B4EBB2BC39F9E17357A3B538845D213A53BE481E0D6B92FA11EAB84DAA099CD1E52DEE6734C0A900F3A37F8B6CBD74174B2BAF5100CBE402299FC69ADD471E1494375657D0074EB17A39D5C9C17257D613AB99E3> |-systemdict /gcheck known {setglobal} if end {end} ifendBWBVGA+MyriadPro-Regular /Encoding getdup 65 /A putdup 68 /D putdup 73 /I putdup 84 /T putdup 104 /h putdup 112 /p putdup 119 /w putpop%ADOEndSubsetFont
/BWBVGA+MyriadPro-Regular*1 [32{/.notdef}rp /space 32{/.notdef}rp /A 2{/.notdef}rp /D /.notdef /F 2{/.notdef}rp /I 9{/.notdef}rp /S /T /U 11{/.notdef}rp /a /b /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o /p /q /r /s /t /u /v /w /.notdef /y 5{/.notdef}rp /f_i 128{/.notdef}rp]BWBVGA+MyriadPro-Regular nfBWBVGA+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf141.674 212 mo(The term AIDS)[5.87988 6.66016 6.01172 2.54395 3.8999 6.01221 3.97168 10.0083 2.54346 7.34424 2.86816 7.9917 0 ]xsh139.833 226.4 mo(was developed)[8.78369 5.78418 4.75195 2.54395 6.76807 6.01172 5.65186 6.01172 2.83203 6.58789 6.82813 6.01172 0 ]xsh240 132.333 mo
240 168.834 li
@
241.025 171.196 mo
241.524 169.542 241.984 168.468 242.517 167.142 cv
237.472 167.142 li
237.698 167.616 238.465 169.542 238.964 171.196 cv
239.499 172.965 239.864 174.57 239.995 175.61 cv
240.125 174.57 240.491 172.965 241.025 171.196 cv
cp
f
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginBWBVGA+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12CD842E> |-/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE588EC87D3> |-/H <1C60D8A8C9B6415B1C8023DCDB0FF1D084A484AF3579A723AF8D5247ABB5D292AC378AF267DE95E8DC7174E8DD00326C723C8D6F70CCD88C857300A53452> |-/V <1C60D8A8C9B7EDAFD30F79AA728C73B6F9D7243B3F3111E28F2A88FF9E5531C99B386BBCEA887616E38278755F3D624761739CBCFEBE737FE4F6B41F26A8CE4C75B9203972AF1AD2A0D0E820> |-systemdict /gcheck known {setglobal} if end {end} ifendBWBVGA+MyriadPro-Regular /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 72 /H putdup 86 /V putpop%ADOEndSubsetFont
/BWBVGA+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 23{/.notdef}rp /A 2{/.notdef}rp /D /.notdef /F /.notdef /H /I 9{/.notdef}rp /S /T /U /V 10{/.notdef}rp /a /b /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o /p /q /r /s /t /u /v /w /.notdef /y 5{/.notdef}rp /f_i 128{/.notdef}rp]BWBVGA+MyriadPro-Regular nfBWBVGA+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf188.784 95.333 mo(Human )[7.82373 6.6123 10.0078 5.78369 6.66016 0 ]xsh161.581 109.733 mo(immunode\177ciency)[2.80811 10.0078 10.0078 6.6123 6.65967 6.58789 6.76807 6.01172 6.27637 5.37598 2.80762 6.01172 6.66016 5.5918 0 ]xsh182.862 124.133 mo(virus \(HIV\))[5.77197 2.80762 3.92432 6.61182 4.75195 2.54395 3.40771 7.82422 2.86768 7.35596 0 ]xsh181.308 138.533 mo(discovered)[6.76807 2.80762 4.75195 5.3042 6.50391 5.65186 6.01221 3.8042 6.01172 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/BWBVGA+MyriadPro-Regular*1 uf/BWBVGA+MyriadPro-Regular uf/MyriadPro-Regular ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (Jason Schwarz) ()%%Title: (hiv.eps)%%CreationDate: 8/7/14 11:24 PM%AI9_DataStream%Gb"-6B7'3\dP-"H!<3(_O?dJ3(u+<)o\Op#OG#[u#\ED2p4rCO^GD$hbJlH;4D4-G>\C2)-6UJ]dq>J=U<u;?fWI0fT7tSJCLL))%_HJjfe$Q>'k!IJZ?Lso=pTIK[e:p2Ip>E%(WAXPN@].c@p".("J#_o*EV1!:<5\Hi<ibhqE1p:6I<2Sk3pcrI4oVA2XOcA/e4&D=%fW+YT.[S%j\(,<E]rU;iQ.JX7eYmS95Li&%:CC8O9!<qWZW04-rk(19CZ2@V_d`G,N:4=g"+r>fG?VZ:Y-j#W`Yj`>;;_D)a*i?.%^67rONPPSp!!<d@C_s\eI^3`tJc$U:KJ>@]K3i]Im'NDF[,J(*:Ua=E1^NTVJrj$MP-2\MpRTif8XLVq.6.IiS>su7(76%j2&lPs%:fM5Tp7Tn7U/O*gegN*?]tn:Oh_7,d&AgFnTVWIB<hjlpD@YkMo(tIrmC6)5Zrdoc\'h;94R&(ul]YAZWqJUq"/(KGCP];B^!K7L%l(dN.NLn\:Bt)L(lJ.KKVPL:7c7+'#Qcggd&S<XF\Qi7cUp-e[?;rqd.]bjsoZ7;kc!VbclRJRc%$5M`COS1rCM[hPlY`n/[h,A;%RF2U$r3XKBduAj!S1s'@T[@B3#0JA9>O;EVN\>)O='n3dm:m<n-#$d.L(?X#!7KVulCa#j'6?KbYOQhHnBV(@8:^_N)*`1&r7#le%//F4C=iS4^N)+"&T?8p;>,gH7oW;@.CB<@6pkcD!3NSLh<@UJ-\rLoT*UDqY+24lC=A.8N(4O.sXApf\X^Vn"//IbIZ&!NP'ms2a%jDt$=V1R#D(&AC\0c_nf&+,KC`A`e>Z5eb]-e?-pi@!3n3>jWLcYuAKM03c,pkeT#+@4o(3T2@b_AV;[[RB(B>K.Q>-dE\2@O]S/%qkVT7rF7FL(Ofha8d3BHr8>XFN%#GiPjjmN8S:dg:WH5N7XN1<)`TTfd/U<cc4<.E-&OuLC\j!!%0'cgS=b@@$5NCic4</0(XA'#%+$]#2Ylm:r(=!FT.2F@t:q4sQYt'ENE9%6%(c\;NUJT!7'Q++[kfi;TETD4HZsVOmJM13Ep^c]KljV%Tg#:\-f(:E:%mR<7V/MkG%KaE/D5Ht^D/eg/kgYa(Z3SFS3DM*ZQ=turb7ntLedXo:O##6W&l0'PFBtk@"3-#*G`n]e1Z'Nd!D4SC:T@<i(a=1b"C8NtgYb<XJ%aFBG'/T.KTKVA[[>+B0>aeF2Uh$2\>oS7?h1h:R:Kk1A/(*7E_"si_U$Q@#eNU[qcdWXlEU*u-'n1U&a,5Y0!kS*88r@aY:^TG9C%^JIm,BSlDKrhldg\+Q*eVePe4VAXetm([q>5-b+8rsAr+g\OSC$Um]7>%7H,s-:e"\+Q*e-^ap2H&fDP:Pr6Mg\=5;_Yg3G0rn8G%'ndt3/AorL2Z=f^W;s?Y^QP>N?aWi^8Lj]C]Ts8I)jUbTlrV8;4Y]au$[Lc<r4c.PWq8BPM+3G!kFe+T8WiKUhUU;kj=g4Z:F&pl%W?p7.rl)V92uKHtc@90^r7dG5bH%CVe+)H\i#g17NBN12Z-U?*;]\U4r$:_7LV54X-nImgH+/g(#lFk$<Qf-2emiW_,_fmH.M5fT%Jc5h1/6Bp)"D\`5@kq+hK=(pF,AkO+loVBi39S$'d?^K7MQIb@_uJuU#1P+;7A<TA?P<en+ZFT*7Fih_*Z;SlDbYt9fmK3R.MC/K%dN-V0O[;qC9ts?$6*'bkIo5L-FR#67*d^4+&TZH]kqbpH49c7@[`sci)o'duoIk0@"2;cK7>7?oko7@9AMS<b$A4rs`Ircp(5uEO%W0q+R@?Vd[_3,+J.`ZO+r(o$9)Ag9md%G,N"7$2kMi8W)2,F4<Mg7rn)#m.-Wn"^I'o3==@hqQqHS8Oo>*M%Y<@Gj88#mu=Z_nLd%N5&aoN+-ch`[B3'3@[u,=Y^QI7;L?ART-%iMZn@[R&e>)\q.J&Ku"XHW4Ht5_VAKVq#+\>1\"/ZMH#W.O.RhoER"P?K.9Kf7/7.'%9e8&K/36toY\q_:_Q/6+eSLAnR_EFB5eb>uWm)E">;IVP)"k*sBkpj0iZb-heu$80<dPPjk=TBGT4I(fKp<U,61YkJ?'_lP#4uAb%OJ?Oqj]cf#0IJ*OCE'-@%#I6GU8$t!2D:s+g!"J9*ZK&6WE-0(qN9gfXAR8a$$$'jK0H,KW_CF5K^pT.IS?.#F&=@c>N<0%O5Ns3%:dfQfGEf'Ac&f2`Rj_'0-rs#FZ1EQ:a$Z\t+]J!D"`G4eiEQ4q^taNtV+[b/F_SU"UEWpQTta<nc'k)kacX5*k<XEt\@"]ggoEr1%88@0,58#0V/!S=.4q*r@q*S&*BH#Nf#h2g#`t>nQroL[`2=*&ta-ia*=EI;B763B8X@apo_O][R2'aJ`S'ec=,mr2,Pa@IAW.[Hq%(pm#18Z5A+;`^hHUf%[Ya(o]q_&[lJAi&soA*])nSU/,+7iBO-[\U%PkB_^D8lI'>nfr),+S9NWGD!ZK;&b5T;l5k@@J*_B-"ZV'%2$QdKXW$dB9,>PkIoAt9HA9;lT_]eb^n"*"J(Sp!T/WC[]ZL4WgY;]ZN9f6e+-UFJ<_e$@Hmq+/Pp+[+rK^uNQV<@hF-\^l\04bn%_OJ^E?na7GiK)Bs0e/b9Z5ifs9uJ;q8S5=0[K@H\[;)73/oi_0k[7jg).dJCOHDOPbE]q@%\*<t,isiKDK:PE.hd.64M7'RZVe:W%OkI6<GakO/gKTto#Lk:u)W%9cn@V+FK8B]0`2LZ)0g*-*Mp.NF/=AQu+4.Sj(O<]-b&a_?4F]D9co\!5qR5Kc17T1<alIuF3p8.k%nKX;mb<n$9=BaHmKh>tb9uC/232%7\l7iW3K5+3b=?;.<XEj0WZoh$PS+`:$#9*1fCebh:B),VD3uAP3P<p/3U?+sZ//^A&#fYNr%&qQ5c`f."pE*b\U=u#Yn0h^G.*6W&Z3@E@1\_XQ2=N0'#TT1@'Hpo;Z_4$^I2]LPN5,D*iC8k,0MV>kQA]N"/I:4^C@TU!`24jZe%3>05EV(a:26^CUaV6%=<Hff1OcB8)<-Y6J681(-9SX4q_YA*dN49e<`!Q>`XD.[5'\JquA-F9:$qOL1_poZ]l1)F/)[+n<0dbdfK%[es3!Y5n/V:H^UPZ14!e8WJ8;RQ,a?JT\kJ&W=rKbYb#JW6oj\jb6UD0^VgXV^Q?E*u#,$5pI].-c(^n&kKZ(29W)PF*:e5Po2]_%a\8EZ]OZ'1KISQ2iW)q%=E$XbT=n6ur]$;Zf<5OGD>>N3/oW-]0:BiE:0sMgT:FV:eDdcC!Ck"``/e_2THhgJ4S'@d[kPE_p6&Yr%1u79tII!CS+Ynr%YSl-ai`q/:-'8@CgDR7S6cU#u2u:`^)j=GTfH9rnW!W'cO2,2Q7XG3q:o\A/2H?]G:lIB'%<?"7*<!s](s>fj%C3`Go;N&VUhhW(apo@H.L1jC&^+)f/<i?g5b\OKr:EAOP6bYSYiNe#3.KshKVInqp.Pg;1g9^s;4d='^W$VbC<JtW@,u>%YBES/X%0X&i#S*dO",>Fm20!Ya3_/IG[/X@Ku,b3-NGKu)f4d^FRcdAa`4<!KjZ8mtJ%-ELBIuN!J]Sq".oqX0D`2$'ha?57.r+JdFHs\\.%P![Ef;^3c&`&.r2$><3kW'sW9.3ZjHKoM8,1+"niBh1jq"rCBBT:J>D4^hINRLqn3[Y(8rb16oZe*jd<$j-su;^_,uk8:1978>Ed%j?=C,@g]&[T)O^5>r2X])N3(<CuP77oV^F1!%M(*XSl#^hPl@&^13;s6.@Y3Xmp/Bo62'BcBf)jl%i8_[:$r!;3k*_8_.$$2_C1G%ZY2h]ML"4&;*LG2!S<,6OgTq7cM@eFTPG<$-sI`4m;YPf\8WiT>/g&6.;i!9E"N\89nc1@2K'OG;OtUE%t.'GLb[2f8M.:kfsD,=%q<,V%*#2@Ee!ad4`Qhur65G7fCTC-!D0Q(HkI+EJLJ@cSBU`+k5R"SnR;4[YV\%"p2DsY`XLn&E*/qBTmG!.LmEsi0[]2dYTee7`%L)^c+[mt9";-rhi4mL!a)/*ENaPqg>/bhblI"11#&Rul0'T1"5_KX(:9SSsWCl@)C>Vjs2Grc]IIC#1@l>mj/;!*W:o4j'bCQ+0j%X#42g^CdOY=]qG]M:Ai5&NJd4-LJ%/D(qke6"XlNrD@%h->i!(Z@jGLj2TK+:o`b_:nP%,BiOu^b]ot%kcqd6NGM!u;7Qj:EaE=E%TVK:N<Pab&nB>--P4Q\>+4l\/"9"-5Q,j;4/HV5+*((cW5&+CH^NKD!Yi_MJ(r%E^=KeI-Udk-mCrNpB(\q]70DMH.*<Kfl>r\H3%h[A*h@BMlBIi>T<dGj-KAOJUV3G3>g[4VH,l<\h5bcpLug\3;oO&?j:jO[b<$rP2a[AAhnPl8MJ14;K=qu&qm9Y[8imT^pEoV205%-s,Y?i,?[$O0Q-%g.URCR(;C17TJ,&&[a+pSK]Xb/GVTt+f3ptU/00;1g73PBG`0Sk`4Q*6:PjoSh[cN]j,n'#/lN#%BkulTuNH.%0:D74Z/.?II!h?'p"WYd2_A:;7:XXRh]dK<m,VS*(D`:o]+e>jel:;ZSABVq:D*1,%@`L!JIQ93(q72J20k-2Tla*[ALj'Y`8>=$%l8i\';s:1aA"AF9Q0tCs0M*9:\*LP8Q[UH.IW/qBhq6/"f'B\(TCeQISNOH!%#3Tb@n>0,^Ve?id;QHX>E,kYbC'#`Il21LE$eq1%2L=kgT?6icEMciRe=3R@2,g[/L4_tXAC,/C)jsX"=t"H/^/:_,Whd$r[FX]pL-Hc^`o!2a<JS:q-&pN8`Z+!`:o6NcD/c[:bZC:@%q'N5mjQ\SH3c3;m.+=l441&m\X4oApG3DbW[-E`R*ElH1RA!cm?N'e<oJ1P+@&&j`!PC5e6)3&K=nEXjge=;b+1>@46)IlR+U#A`%)0k2>g9/3"!(oD[\K4qTB54"*5J?4Bf,um5<U5X:C@=5Oa'a(WDKc<X`^_@_cCFT4ec&Xk/F'ZurL[\KBN6hermPOnIYQ/-cq$=[%Dl6\:BL#M@Fp#MZ<;X(3$\'!.W_gueruF#o36?L0?gUPImoldg6bWVE2/C_X]O8JHdHU^P7u-Up"B7=/3eLJn@po80OD)")bq@;S%hlYHJR63o-Se2q=;pKKH7bVu%;PrtOrX_C#&<fSC+1+c5b:9EDp#]UU,S1W&-Htr'D]cYB`FsPLl]@5A:,0d`IZ`bZR?&[gR#qXG%SEW@)SN7Ah_6q6pn'um)*$G%X<<lm%@38#cPf[tl>3<Q^.:nag_3HH_p1a=d:TjS,V0uP3PZBj,g,%l>8o%\\)V9?mfCVo\1"G_O%1Yg_!&O4fL&*^dZT[g&"_@Vs..7].K?c2SM[5\"t<JL\7_bRi6SZ,WJ^!KcIA4@sPY?1\]:Lbu(!Y9"6#SC"sG--B'4)<g,Ob=U=%'Um(dBXQ(JM_m<Ol@F*]ZI.k_S?I.n)d!&])kfbV-Sc_RMlN9J=>bP_eJA)(AX_usi0D,C*![[88-KQtN@JBWItU3a6q.;F0PFKk%p#a:b"t'16&o08Y?DfugJXC+;MZXZ<d(H5g:4F1SeSn(/Pmg1eA?)l4X-m]=?ML"L6J!uh7Vbg094F2a12u0d)sts@=NUtQ\HTA=%HMPn5H`-P*Tmp3'%%Xsr@JgHd56HRIRRlY<Mbg_3Zdo[/mIiTYmXG&.'8dCCK[6ZNYAg0=I+OF7=W./UVJe`a;=gsq/PB07h7.BM%=$=e+q$`n0rrL4J0=(`GgZ>Y"BT-lnZA+c#]l9Z(m!j_m3h;Qs55QRGR&l[>@f?=e50h4WmF*tIoOq%%K!VA&Dt%,c$e4n<!?V5!%[pH.f(*]cj=``oEjgj%XI5XB('bEtHl[A?Qp`"`7$"l3o58H+s-"eWOC9>M;5@AO0N,PiJpuq@!33\OnEr3%0X4-/7BpO:l$K"m2%?,*6K9cu1V^`eB'/MM?s\sS[!^AP!S)e?I2Y6q7S)1[ZMeM`5);JnCLiWnZ`jI':!d5&%*"m%p$qGJblRAeR^R$9T*#GcbrF4^]'%L\qF]_3!@kkULXOrFpqKW5JqfWUVfT9XN5aTq$Z0`@i'(Qr]lVE?^l.X@gq.V+XXhhu58DWr6OhJ"tWkDYUpiOmfF$*if[.Pa]PU%WV6;tYJH_iK8W2.m(u44+4=n?C=(Bt84]da?')oi3i?^q=X7>W73a7=JuIj#VKhP"+X7d:If':4%cGO&YS@(<3#b$k5<]J63gAK,%KWs#J=@5?8iUq.<*94Vi__BZZA<c'G:cO(qmP=M\(o]c<*n0h.&]*E:ANp/\`<,OW3-O+rPlGL*:[<-C0EJH_2&@ZsUJMMl:bWjY%J:Z%JQtWSQ5s4j%s8$J0;2^@@M*[t!GtJnWRNa;9=ilW,A'Xg)=%t@Ya2(/p:+dGm\A\5OcB,k0aZ_Cm%,6'0@Z+?WAYk#oZXoC+%5W1>WVFOgE]K[ik/A,)gHQjf$.KA5&O_eOuJ@t1^,EGZ)*OZ0uS1M3erdZ_9<"[!F+i-if`rGM-Tt,-9b61E.5^ub+>,*DG&L=;$%%`c`A1Vc(S'kHZDn%hN[bXNu/^AE+f,YS*;(-3t5j"S'67&V1nF$'e!VF`72UHM"r5,,%pS,%P90f7r>oOsbSeOZ=1;4lI!nJ`kY%IrQ`o^[I2D:-/'&lbiC7m-c%cfB\D1R!ZO/41KcgUgBu,*+&SnVhmF@cdf%DJQpiDZtUP;#nu>JILQ5?2X&WBEkDAJ=1-Xe#@7N"%JrYYhl<i)md&;laI?/\ki)<g=NMLLiotM2%mnIh'L)9nM!6!(#i.QVh4G<L`aoC]I_.N9W1-`NSVtSrF#FV&YF&(qkEV?-qliZ4S%=ab3GJe7o`9`As>oX2F8ZT;.c%oY2XY;Y_X3^<XI8bPA=LMQi<RR!hC5]d,Ta8^.nJ?f"g%H[Tt>h]5Qf71%`rXZ>$^X]FaDjSG;%i>d2=o"?gZ6$CcQ(slcTJm`lrSc>cZ<n*YumWqV!?d8H*/'-LJ`W,:XZEc<)6=11,"Ud(1UZR&L8pE8IQmqtS8Ab;&-_b1mc/YE=%oD%L`6IQS[GM*l-C(52chg\n]K0oE1&)jE@W7JfUR<9MGN8n$AZVX"#EoJPrh%Ys1Q7a,Y^$;9?WU8_Lq0o;=T"7di=nARjX1$B1%jQl@OY0\Z8?6+=sK.c*nH;IqC([gu8rC67Z7_&%kUY!J8$_qm]j+YctJ3,!mK>ueYR]a&eh/KKKL?m`*h"9!.#Ah"J6J\`K-lA(E%8*sUtGEJ^#C=EHY?MM4fWjZ]&d14+!JVnEQhn]sG_s\GD,g39b""Q@#hq,cdNW*#SK!aA32i4YjX^_ulS,[AYpBu$JJ'o&LX==Ud%`_VAB/l_=Y5,Tg7@a8*e=*oSo::4..@('I?,)kD%8r9T,kZ-C9DADBKp(%S*=V(7rs)%sU&f:CIpPP3#2"/!gfDX@%P;M#M!XE3?%CXs2:Lc@2(q$Ldk>cp!jeb<[V3V^Y5RR'DPfF/^^SRCEOCAW'SrG7/53aDi1:7d_FUS_7tf,^+F;sf&r`mjI##*)m;<g-CgC1+4$%D5N_`_+J+$4d2N0qr.HlcnQt]Pecs2\(V"/kVn!GXf=fYU*g)34F92.e=4>tNr1TpIbenm5aWDjc4*kjP6D92#N6=knn#=""U>I,%CCW9#l/?g+&jkPhRu!)"T.H?*N0bK^'F&7H%$%5$;R_GpWlQI8"YZQKMuIBi$NJ<Z'fH5%f\#6iXhBYi<Y/ZK3_T^7K?)$Y7LYX0%0)_YW'.pTK,F"e0plG@d/o^N"k8<R%)[N3]:RQaIj97@N.p=MYY\<_"d'?H4^,:AB@u*q.:!58$fm9'(\!M!l=i'?oAZ)SdjBn7b%@!4iRfDO*C:Y-Qak%D;@dj(W)f!*Q*cGrGi0c4!Z?]Jm(h%GHgB@c.rMOff?WtD"2[K#)'r)C<-<GA#\W;[d9?#0,][8%YD^]4P9%cVUmD.4F'C,\is_]m@9=6fP,+koM='!%3/:HN.URb+f`78RkSQ]tt%ZeSb46@(j=fa4C4eq+cQf$"aQD40_XK4n8Z6Lg&F>nd_=/%JBQV^/87[qV0]4HDg\3+i7rD"Tm)&RRdH0]Qted%3HIkoU;l&j]tP"r8OWV^UCKt\`Z;+2.h=\s^i_X\&YM$8-?>^.E?B;[53`-5%bu"_EbDePJm;^#1UHM0">M\.+VsVO7h0p8bH4RL5qP(Kl#,-d+IN,;-)ITB'hq`D#.9q[`ENAmQ6ju@E-A?7GN__h'XE_5,X7uI6%mM4P#:9#2W9u$/QF6t>l3,Q'qJ,EiL<O"@TC@llR%]Y2>$h%u<:7Z82@!!W>W^KT1W4HUn4q8>Y2*O9oeALbTKM0#@?T;4rBa*s0%rjIl>[#$.`A_XHZn0fEa'(N++8Q+&b[^!AXYTJ+:S8.89N`R<!k:b+XG-==m*>r^RXllI:BVfUIp5]`8Oug!oh[cMZB@(I_5.IMd%mi,JgI-M:-3_j2W%-ct6A1GB2-ulB<+2/]#P2-:CX798djhjN80T".!op(!n`b-$q:Q?$`@'$d7la0%o\5d%[mYFAQqc0b.^4_Pp%l;HkWaX5Q_5Q\3($cI:Hc;rE7E.eRhDU$4,+;O`:;^W=F_athRa6W^59SN/D>mhnh8F:0(D1i!B2fGMC3%57kh4i?MFo!j6^2:N8%qc4_fn9g+!hO^<%`P[0srZ`VeJ[=tppT?2#UM5B8D-QW0g?u=O1_%[kH&o>i+1)H167dCL6&bml^;fGB3"#4O[uQPc[0$r>)pHsS%=")eH2akpJ=gZDaEA^I[DV^7k@<<c5e.#Uo?GY)p^Da@fX=B7/mmr8Qe`.IYC0<]Zn\*a]J2ilLD,@X45"NP*rU4>7I)!+NrI`WS%0<<]C@)kJ)&(X.SXUZ7ecp$[+j0nih/XgR8%QVA85!!1hc_u6s,PFKK2BqXLB;#a"o-F[]r+0kt?W0Q+Ud])WZ),+4M=$f,N0$UN%Y9p]m"u:XkZ5_tBZMEG6r'ha/bM-*N6KpkprSCbkfW:B&K_m@mWKc&JaF-M:o%mt(Q!(X'73dYkmu9m9j?\hP^RFZUm3<WC%+d*V%alC!2,UFF'6>#gQ7_2YF`V=_e0D1B7E2E$ip?C=t>gR"5pQ58tfLW\U3pNgue?,XchJ8l'MY;@#S+$/`pZ,`F;"&=:HQ0HY9'7@E%;sle3#c3=!rDdDb^KD4Oo4jcf+toK7MQ,,6kjKq_2-i8:[!\Z&!Q7GW*VFcmp&5\JP2$j/fh4@8CLhjq1:WHQ3oA+II9@gYT3BM5%Sq[.J[&jcN>J$#/13%o4dW[b$f64LSn+n.$\_D_Fmn<@LT6ei(:Zq/:m]%q_gAXb![F:J=PG:t(dB1r5Y'IMrFmjDs''o50B[=B@%1[up++K_bLSVEk>\,DTQEQY%TjXXA;\M(R=R_?HL.`1JUCSqQ*H7fn;;D7#WDK?OB=19K::32?@ZcdaQX4'"9GOaYGl4iBtFh=-s%=kS:#hmig`kta1W3^$\MEI_+s+11=/;kV,(Z5ok;5fq@#_$P9(+2r!k0tV^99L,N/c3Pl4CfEMY<Ec:."05@YP%hDUhTKs3`hV!T%/_==Naf_3.o?X^DVgAEKcJs>nIBFLsZ2TWlgiMeg2gc:6n_!QqZWj=o75&R^SO+uQX=df8o[_h[c/(YmQ05ggf9n6jqWlPtbfutg%VkL&nRiJ#EbVcl>deMTXopBG=e*D5(QE\ig&b)An<k$VMa>%e:G!f-i>`[CO4mV`('m"Jc]0,r(Tq.LA^+6X[53rPFO(H;4dnmEd%YkQmR^DG4;Ug%K0a/cnNB;[iKYJn.EViPiVEim_:SKa%R!.:/[3ik9'"4p:$?anWM4$@lC4".U]MNU4$=;5XRmPIuF0,uPR00e@[%RVSf[7q0NFe*Gi6DMrTTMRq%):q5c44!'r1a)>:%ht!q@hJU*3\oe?8)7t<Fbn"\T!;r&rSklQLm[]r>If?l.D61<lqE.<@P>4ui%N6_+Z/?sTceS.Hs4oa>Wn+:]LhL!K@MiLQ+(Xd0r:FbN.?u7Q;HQjHW:9+bT>s$MOpP-/<=mRt"_DJ0Klg^>#cRWsGI<i0^SEnqp%`=hM/>@2MdRUtIQ6m8*n.pK8AH`-+7s79V14&&kK68)"t*2OlUMn'1:]$h`5Khi_[G.J\E-QV-)j=@,Y[+"3Sg49^Gna"-ihW=k2%!o7HX7H(YA;NI.D5c9m@ZdW6%43flm4&=UD\p%G9/oQhHjmDB/,LS%76KbrTfN6oOc`g>V"McD]o"s5@HlkD77\k)Ys5(Ib7-+mP%VZdN?o)87/dt-iV@5Y>6loud#*`#kG`+o<gdHrAjTTY7%$VMdnl6]s5hV1&uZ6\H$&[GQlqs#*"bjB,VVk-*@.?:;Qp@ean:#(%k%h;@'rNpN:mQHq^c%b;0b%i5'1:Ci0B;"Q/u:kg%;F0?rQ>Jh2:VhZ@,C[+X:or3-*+<$\J9"I:S86@WeR2ULB>J@7(QFAuJDT$FM%)n.nhV^B?B$ELX/]k5+@mChRr0mE<Orq&0Wq6Ls*j6f]=/jLZ]l+`Mt*ma<Sr5ehqjRMm*\!-Z+B^S[bT?hNoeJ*G`"_,fYO!]"1%^A[nTA&q$(Vq!kCF!7M`]HGe84/iW(:)iV>IgFA-.t@7/>b=K(cg*NpaN:mFdp?taofNqRGKs\QI%DC-/f"(UcO2u4F@6E-nuk:V%aR`$Gp$(s_/[cSRLqJkJ,7oLjS+5%"gXW=sp/X,dd5=)$/eLucqVKXB,/&ZC\$MgnR]12-)=L]r<Y*g$8@!>W)bJo!J7&+U^P]rN%j$W`fLAkg?Oudso>NkKZV6=`QG.qBAQTM!-X67^3em8B$oPR3i*TAAnCma$2At#4XENnpJb2D\uluKGA+K]IOV3nTqeDXEsetS,_%s58Yn47>fYhn7h/]?S?f]K9Dt]VIYO'e4pmWCNks7IZJoo(oE;Xf^(L(S=HH,Dp]C]=Yb'ZVqaD$a*]NDt,bFHnmb=D:nsfb]fMh%>iNSH^2q,5>$kTBZoWnIem$`R<jrP=,IM[M43cX>H[!%tq%RXMC%%A_%N_0m2[R49]2tn1cVDk+h\F^)k=R9<cVDk/\b6)Cdd!'#%(\YE-00?Bf-Ge7Uh32ac&LYJBTR*Mo%0u?Ke6FuhN!-*2)npbk3GF%c2PoNi_7"u=iU(/,;<[XJ..tKe,2.PD">C$j9oe*o]`8lk%-eZPK^kH\tHjK\nD"<2@VmBqGO"68[2X]j!!=$-dg$6TB=3d`VFC3+:2+gaD=>W*AFbI;-Zj4VB=;"[CIk"PlVG10%DelBnjZYpb%>4si^A9!m\Q@FlDCq=6F!er6G.+'I=5[prX)Jir^jpXk=X`o&O"!@jCh<Qll\Vutm\4ZTBr8Kl<^11!"+_@+#CJ"(_iCW&eU_See%TJH:OX8/OLGbC7]$f37TRGYGtGiUct:m@Rqq5E/8gb<F#:Yrgr3Za'kj>!DGoS8OJ7V<"%?!m70<cJ!(?FF8p'*6:SYo@Uj%n-S^%]*0bEA**G;-tQP'AO;?RXH$Cg>1oANnm6:]=Hkp(jPTk6E"DaFb9;3"PAR5].6eQZHjAg#m@ksB*K,oDZ<2SDn!ZtlmJu$*>\6Hn%.p&%/:'\Mn+gO7f+-1frFTcl!oUl`N`3qU+`]^4H0<H<;9f+`>(8IOO=r\(<A]dAH!tcI%f5#/&4H8$+'ji;oEYkMFaf\oDN1#c_%KIK-NdP_DAZD!9'KuR8Afl!k^B\M0gqB]N(j2oaNk$p":i2*9r9qk4"Paq5WXI+GFd$T/Y^id(&m+/euEUmCXiTN3#ht_=6U#]t-%XQ4rUA3!4G(p:fc4'B5>$Z>/r9?E2jr*WEa"L26GUUkCqHI>:FX-;1XN/LO'g98Q<UgL+jTHC[>10KFD=CFshf[c4o^9t*G-1LVN%cWA[%'g90BO.ECP4;?7(S'a]`oj,1/jj[0V3[&se[Gg2tP<86Ni85dY^r#nY`XYRInBmNPGQO7Sd,3HLf8t.mmg$h)Vb+p^m-AW0%fB0PNE1BK9*.L+M<QPFkcdGpDV-<R7=""uoZ#P5JhmdK<ihS:^R\+tjQ;ojKLtO*AN"E<g[##sG,$U#QUr(r9b3le-+fghT[uRSq%OuP[dB<X6_Ec;5b],^_'o/*X<d1HK8h,`0LHK$`"jl`6-4=hIIi$d()geg`T[\FUSQmY'XFFq,Q!#oNSN^.7OlmHH`_.,*%I7ku5%nOij=q71a1JP]"]FXZ:G5`gOVD9Jnd161a]JJ^R+=Aj-?'ihbjbtdDbdj7^E`,46ro!V"'aY3G9G-!NfX94NV`]d\eh46fYGVBE5%@1/Yo$:Q<\e<C$MUbRnkrp7s&!5SMu-h[3skI8-JId@U9:dC\?#*uA&.%XkRjS;oMo\BHZk<i4aOS<"iJa+'O=JqK]rb#U5&/Xa:%ct@#S#"sTA/FMcr0J<``V9Aq@/h]!:2?s]r7l_n;$j1b1j.f6P:'UHMOSHd-^eS5,+-!2s4q]$$Qe!ie0[;*W&<]2\m!")F-P)D+%'="4h%@$eY9'BYN/Pcu8pc/m(rU8K;e0?:PF@$5M!&;(3QmeN<V#P%Z!lbm)UmK]i,V]k6GRZpY.pc_`A57$r+q8]o)Rh%$G#S7a%BhI-2+,U7VVATlpc53C3SRIT,nT_6/NO+:TYj3@aeY$aQ`?nK9CZfcsQU@Y\S:]&<c6MC!?*BbV)D,l78*'^a$MdWsTgS'=,lkN3%d#19K9a;O8?t!_JeTofQ#T\%C4_39Pe/krs\p,c7hnK2u]"@Ut4+FE>;_eX;RF`f?pmuNMH"9o3BY4Zkb66c?8n7kj<btHs<@/N=%*8;@V8?2l/4t;Utiu?m9h3"481tJ*TBkM#f,cs0hA+lEdStqn`ocE;b]/4,,+e2)[g=?Lc7_W\#>tQZ;f*VU_7s6;NW<4e5<j+q6%mkm9^,NA,@+=K8A1DG!'cV98)l6=WY-^SLQ&JF#]3CpOV[r\r<\-;?LR.m>9Tdp5J+CSd.m$:N]>_L:S=aC&$9qk@uqq%$)1q2*@%BkMUGG!2J*=45BpkL/%Dckp###l0-9,?q'(KWPWR*jfeKd+q/GD+cdO'l\]4<ZR[@Jo5rAYik<>`m^%[^*F6QF;(rl"F`*\$]Rk)%A-q^OMV7mpjLZM(bl"a:Rghf!2GeA95pD\L);C2#OIKo?0GgLTRC>GC<a75md?XI2m<E]4Vb-<fRQqd\0^@i!$^3,b@Fp7CZe5"1%,(9;6\o9Qg%m@!K$I"`Ej0^$e(;tXne:fg,!ZIOgk#)<j23qk+@^hPVZs:#km4@tEXVI]@B@:7uDYCbJ/"u1ZFolAFIpH_YR-MPn%1lF86kX+&;T!WS_lXaVqb>d5YE;"Kn]$Sljr8oGD)ht7B!98CqF@U2@,[BRUYs;r1N("W"dPYPj1_tlj"'E.]PVOkki%&U1&8Odg%@Zj>V:QO]l+J8P5ScUEMI'!?rlQPB1Dl7Xdadl!P,mRg2LLNlfW24i:[H&3$p/F`SI30i]A*9;i^OP_-9CE&,!6bV<GiA)Fh_tnR%jfJe_rAmpdLR3iuDm6K4?m6X"YorRIYE],M-BXI.gM_KZo.VnVl&<sN>G)8WTuq$m'4=Xc@::8?1,UhF!EfU/h%];*++H1Als`PG%,es=`@V4Cm,c.>Dh(n1\dJ;kMq.J'6A.22#6g((-8%mO-F6NNXkkq^i-cr(Rc_.UW$Vm<]kFY$VMU!T)c9Hs,OY&P8%\8(R>pqb+%*'4*.3jQA-%QSY1ognf**-19@1[+T^gakI-rY]h%*ZL_=BA\g;SRL)lZaP;V^jB\qmJK^9,d0c-flD#d`pM%F=FbcJcK^m=BC4CC%QlVm:,J=)TZUskRH`ut1Xa':kRg;ca=Z3$:buOonK-^R%;=&(G5)gk$Sfb4Fa(N[$T3lma^B=bP@khWoOM!@ka+V9VL,>>SLXFKU%PNIJ=RenANf!`7TP9j%"YSDi^^=QtYQh#OTk31Z!f4:VtVWM[*S%ERX-G.rT6;A:52"\tm&S!'=c$e9bkp;<`G+34sLg=0c@!pOJ%H.R/>)hLePfaLjK:Y;%_$PrN=]*\@l9uZ(T]4=)0PZcOj49$lBSC8F_SRFL0d#)J!ksQtt/<;Gt$KHBg^>cSec.QUPd+S30@:D&e%;VuUi+I[2el<EjTm!$VS,C:.fo=uCProV-EH$oT](BiT-=5W]+@Ee2NZ@Z-6WG,Rhm/rCmq3]TJ&U5.WpE"PmFb0%[09+]g5=$>t%g]+@+`<l,1`ob3a'8%llQSis>Se#C8.j*W9.?cT#f.&RCltMF11(hI;QU3$j,a2oj6HgMG<I5r0SH`;HLHRPl"7`o\2M%!q\nBgH%-XY.J/\E"+"HI-Wj-</"`c1Z[HRXIY'+3acNJ)J'S3;oh,,E*S_X]6P?lG?3f>;m<(8a6&_PbONM4r=^&T=;^42l&!muI^/pCa6R%lofp9SZ=FS*.F3sT)Xp#k%Q3Zlq$BOs.6[ROo+1E@VNiDDm#.`l-l4LCbap!)4$G(Jt.bKn]lr2_n]7F(^qi31i-USA"IWX`.G:q%J"#1cB[!-$_TB?G@j_:%__)K,N6@1O*0MNg):R7cMTGQ$8Y/V6q.81^Mo^k3SK8n&c=]\nZTGV7K>&QS,;8<;0g8m)Ls3;P\1me4%[=\Gk)0:dUN8*iC0M=gRIb0*p\2*s2>TtrSmZ-4>BTkqs>d=P+he>"To=,^\8=_@tDj#p88":Y%1N'+=^uQJc9eHu'#MUQ01E8tC%?TX=-h_uUp=RI6U,:@L.>4g],&B)th;7OO>"Ehf8gigus20+d8[*AC,S)bRcV0a%mlb_<H0uqiKYAD$pH$,><ATZb%H5Lb=Spt(;%V;lqZKu\*C+j"l`LK*f.*,MYsoXq]nfX;9$1&i7s<7-E>T'n\#HoS\ZAkZ<Sk'X[Qc6&N<+3o9NoXseSB%ips3$3%^%b3T$_\&;!%1C&r`LN>Tje8p,t[/"[dh,),^hgG%S>g=A/`o`d%(Z:O.3TS(tGi?.(brHlk`>A,Jf"jo"ZjUu9I'JPn!<q<nkr</)gU7Nr-ZWaa%`,rYA4aVK<$DDu3+ih%O[kg#5$88jJE1SEpNG4H9G%T"(VlbpSc0fr:a%NdThgh)8^GFnu?T*"/b/4oOs$RhG':QE1\7^-4,pV\s%&=VFJ2]B<ujr=mlk/iA>Vu%pk8KHAA^j?Q-Gi,(8Bu$Mb5;ir4]omPN?phXC@)<f-\tSM9YG]")VWGA5)B6")0f/5S1qorOdi*4\%#tGC3bJp"!IL\6%Oa9*MN7=c_3G,'RA+Rl7IJTL%7]NtkbTe@?\o=23D^ALT.^V!qguS%F!hCerFu6Aie"dk\_2j00?"3PVI=sn6%%S`L9P7aCbZPH2oYi/c%$mL;B[9+oKV];1A.NI/P@s@Rt-TOUFS/5MoRgM)QgbNguggklq[&J#)1Pf@as!+L^Y#0n`Vo!_u`rc*M%TKe'b!lt,Y5)E)/%2+kq#k,.@mcSbd)CCsliFDno#6P*jYqc,Aj>5FBmsY'V_ilZ)fX&t`ktI`r*1s>@R,p7>UZ6\-OPK1>;F$,t%U8'@+JOP+7l)es.jD:34jFU(uj7,Jg4]H;OG;=ff;7ZG,q7:iOqA)HG@Nff3>?Yh_>aDf3QWKZI[mU_?m@HVgQ"&kCWD]'`[MDKb%-7%PV/tRINP3d@tc0&PE_@B^?1m6Z1DsksHn<GR/Chp0JGjgpaG3>99L,\^\4rJP)>&B<qF,P:Bp9Ri+gR&D]Y3asn?E<JH.:0%Q%l'7/A[qF>RP24CtM<iZ_!_0>]2EQ%.]AWp]/[#SpCtpDUDP9s&HZgl<%QDZq3lV!kU=kaYRocoMX'`0e;U2o'h=JSjX4*4.pnF\2%j/Q1Y(I$b?3P=nK']`B,HsO!eFbq/A@!lInfaV"A1P+i57DVi^nr'iOn@#oo&("cpXYVA0WY=NBT62'HQC"u<U/6bsHg\pl\TM)[%!*1C`?R%$(f\dGp[:ds.Wl?TVIeb'35-j@oHVh[9qapb\H'mISghr9r]1:0>9U2#`P++-42fe-8eCfqS:fJ9QNjsLETC4(HA+oT?%kn6#&q0Ccm(3$JFfHH6fCEP=X")Og@SY\7CrGf[LV).PPI(/LG_(MB"([7JQRr6q>b[fCKDLR*NKpu.%SQd_;qtVqPACJ*."C:e6%`b[]F>e1e.+"(11p=s@HFZ,cm/C*&93G$[M2)Y)\OGU=.gmn4K)L7K^3k'5M:05^iS'EUPcET,[LMT#\3/d`?\9VW6\]*8Smr_si%F?\kmbqY^5/XObsGB=nZFDa^?@"5?4FDaHdSnpN92Otfd6ICY6dfA'CDYS;/%5h'Bh.T_smhD?;S'KcsS7ab96kGhKRr5S^4A0PJ%flY\0CpIk<2\.DqpM;n"#"WY)>dN\M)@4SNS'GlYA7Q5Kbh7)U\TCU8FnTW4\+DEPb/c]Nl.g=DSGHgjCcXL_fP\m$9/^(+9WgBd%e%+Sgq:s"L]*#P`/+n]#kdY!dF,Yqf0L78LJ@j"\*5N8[!_Wo9?-N2[3k$:.=r1,n=6F@)"G>1URr*"1C-p%1-b^\<YR!]"V1Fo)%i0j9)5,cjP"VLuiDO6iKT%o&gGB`BYaJTOU-b#'LIM0X*:5tq%CWkeEHUKK%cT_YXQ/Jsmg*\YrBef(7mO$"XF2-k_Ia1qIPC2q:%m^sji6%JXeT\%upA9%iHU^M8k\GuP=G1#-)'06s3`+D_]$#n-pOGMo4jOa?T7ML8'\dO\%<:mfbcH(F'A08$g<(Pl[:+X!$H(oA_%\qb@MZe/SG&!ZuQIZ"h4D(RYe/l23qcs@-R:NQ!'HQq:5lO(Y\k98U+5DMY<Z$UsfJMIYI2fSuF8jgDTk-Bj1cnk=WUuWXWC_7OF%RSS&!j/M7tc\D!on%j+RoFr)k3-R_qc>PYkjZI`S>mB'n2.g@ifhYH,)jC(7T6Vl=[,Q?NGUPUU44C/kS!QOsR?[kG.h:8"PpnhE%B,>8uHt'5(%IDBY>4[PZNcXL/S,QSPpo/er=E-$WL$*=E@q/E0S`-+,nc\'H`i9-*!Ub=-0d=tJM`Z,Z6^dP/VD4[Pk8rpSM+i,c%S+>]bK-BO&\RfU6F?C3S-K4q&GG'kK`b.K<YKglX'LtqJSnb[%ZnkiKVoLr$,=`GD4"KJWM%a46j'WGu7"u"LGgZ4g*D'dDq&Prm%&s*Q8]&CrWYB7P>DCROa\`%H&H`JO)iQfI^-[4@j,P/1)R+"cTA(W0u9mLg%9Cf[SDW4g0*pl+RQPAMTabarG)fsnPE\rM.reA%X%VjcWmQ+8/`Z0`IdhJ;W!g?QQ@QsA9?nAO&G_RjU)+Fk,?bC#gI@dVXJ>B]n>k?QDX-B2WJSIknibTX5,>;8#sq>4X]g[RHDNo+$X%SI+PK`cO:>I_,tXGO;H*Dt0&")rAgZfAc4Ho0-9rAd/B/@X@E%HnDrG)k4i(OqAJRD<LEJl+#Wq]GZXfb.BoIl6&YlY<@[05.t<[%M4R"sR*7XG7g0\ooYt)h:Lk<jN7;sr1o<Nm@54<n(l$[90g/!m">gPU4Ujcampa]bf>?@1k=H,cB@bNFg-%7/`jeH'=)9;'S9Heb%)*l3=>_A6hfJ"QI2o[I&ptdS^qfRtgIA696ANc*@B_T4g9KBDMrGl-pmM.LBf9BKh7[dJTf^!C4;4=5'[B8;@U8<XfrDi*UgtTs>%jfT)NKljG!/7]61)s:ea:d!-kI<[<SjLC!4]%_OQbD-Ho0feXKkG#T[[54D=D#&%,p"HBH&t\[%)Vp3kGaWADf^d>dlRu6&):)'3%b#REUXj^+2hS[?GM)dYGo=O-;V/r3]Zc%1g[7$XF>rXLKbMIXfXaB../]9bMdsAnjd5;4@+@Z@DZ2VYs3TirNF53p2TBW+Xk2251%MnqGqs#O4_St.JU288?^SMo7a2=>nA:<r;j!A'I2*d9b.eb3gG(HOW@-_58rH',<X)Z]]ROtbKWYjYn:h6S0WCMi_BF;1[mD#B7C%@qtQ_k@/NON*@1.7db`rN>(cjBfj(HP6lQHSDtBkj\F2$@t)#bZ".3CO9.g@]MjuBK+<`M5kkb&U9-+UM+oD=k-VP]Z/iI#arZ0E%&4noeEGe&MJ3(0/=WU5"D6<A#!-=_o3IOr^\/h#S+)E'Gl8XT@g:]YG8[`Gq)j6aK?2,^"d"Cf8,4T3Y<']n3nV$i"ZVP@lNb<HP%XBf)-4!T[8pIXee9_V5`@,gIJ*-D#)-O*5hNLS+jEFm)fS?e8`b&^\HJZ1fW*Zo_Xcf*YK^q&3_on;L3:Dm;YmN!n*it,D<!=YDM%2V)Z[`k6M0"c8:#2N>@B*G<r>FlCDkc9Wc#]/6%ENuT8^*&&47n_>oj<tg0j?Y9JlZ1h[.DBV(C0u%L8aN5"%%0X<':L.qn,G(KO%IFgtL:6nGJ%E@:n&ic$?`Hfa[L#%T,XMu,r[V2`sUs]+,Q-G'H3<oSdEILG'qik\`"glI"f2PMc3EP(:J2?01Q=mJ.H'=[91#/QF%H@Mg31',C+c`ZqTD!^8uP<`sNrBA%F.ErN8niS(]ok\Fi?$Oj[[.n4$/ARo=JBf1k;^@/&E'91Z28#@pRs#c"#8".)I28IhIpP-c%g^_j`Z2jiE3(DK<VT]*`OG]rk3P#aP$U_8UW(/!hD&/cR,sF>>,<8eri0`Uq4jHQh+q)bE8G6/BA%e%cB4P$QlY5?Oq'N\8D<adi%m'gR):L2-+(0-b%V0q<AA=LW9I+1YmR1GfM0BFE/M3HbG2oVV@DGdq>?cqPY5P!S^jU6BajU@LHfqJg5W2&^Ca.Q22"/Q3Kh!-hZ%Z_?kp^U[lqc0]>Gg$\O>:X,<[1rX?:f6dJoUI$Rn<`@i?kFbGfXa\`j%HY7ScT`o?l%r2\YFc&SfWBU/B1#C>Y?rDET(u\Ws.(<<%jD(Q=r;pMMc/DtnR`XY+c8G:<N;*2E:Mob'b3A?eo=rgoWZ+3.me-1DOS]O<am\nD7?dbNk#:($kJ-'$j"+k*FFpA3GpXVQ<o6UF%qY;X&ZH=tYHi<k\opbFR.aNJ?r*<Th?-j8BlfY]lb.?,Ak54r9ORjOk?9eHj#kmG#YFkiH$FcdWVL/:>'5(T+;Q%+Xc[A*u\CJoF%42]SBqMfBFj)=THp*i_,T#0pgo+u!^L[LW)?9d%a)UjA4?IJ37qY>'>[V)C2J$5IrIr"+G^QET?VS(O,++V@jCpW!akK@Ym8BLJ5%f?\qhG_5hfAiRcIINRJ6Gn9>PqG!R+iI7u&rt;U2DVN;$p%,ZRC!QVBp\O^Cl8P?:ZuPt!6IGValfZ%>m+b#`mCduJ\,+?g+5[3j%2#Qe%S,"`Yo2`W:grDA)QO[t\_s"d_P?c)iO>+#slSjuC@Ct(9bSZf=?9aXd>]9;)-7`qR1WP^!-G7sVccg\2"b2"Sp\N,ZmreQA%I_kS]B>)pCCaJ#qkgSAR2qacQQ[A\.:PLfHos<J8bc`KjSFbfcX.R]eB+s+ek97m5)).f(VS(O,J"tI`9PMXrrOgS=ZK!&C4QgE1%(5sbV^=R9Y^N/%TrG7($jAs#uFq=0<qY=&X-t&-\gqA19L7u/@39.]$rX#iq7\9!R5Q=sd>jS_pme-0-JuB,7O*ghWg+]khlY"86%o2\*5m+Md6p%)5pA$S&rhs9I/*13RU99n`Rol-/g))B_MUH:XZk=WihqKI\ZI4hm"<\Zbjfmi%q4`/Ria0Nepqs)G3NU:4?I)q3O%B(J>#OsXS45\YVMgUVqB1Vt?@a7q?Ob,cS\jWf2qW-$PXoq[%#ZMN69c_R:NbOY&*P#l[\rmuUr1T[bG2)K`(qf1k/+gO=g8+Mq'%bej<ODJeY/G-Mb[DI4He1qpQ#:c*BAo_YY;f8i+>^>D]"%NCbGIe'l?HZLWZ%mM\]cC:s%h9>EYk&iU(H[RImid^B]5Gp_YM=lpI%iaHKHMdFD(H9HO&ZI!<-1/VKECH_Z9<4b`cM<!7>n']Monp[rOlLhU;c6B=8]>kM_E8!pcf<RJ)7G-H0.Ta(o@<\tt,4(nmI._g1%m8S$![C+Fi8Y3TT`$6h^EpL3)f[NY;&LA$Pp*Q#BeCS%,o3`0@o!I@*O;M:pId'm_:jT)$O"-Xpc'ibY,eZ]eV=8ij%]kt`^&5HJ%!^!s%e'=LPDGL`UDKDX1*PSA:<gTS*B1ps)Wt7G+gc\bb]A2;flH@5YKUEeeBR2/+e>)+i5Sf2KJ"a0?MY*@`5foD/Glar,ZtJR"%,0rGkd?ZAmMWP&"[hc'E=k\Xd_m[,h!lF1mg%'"=pLYd/==kikm!GU+QM,Kpm.auOj8/$d^R':/8a+=ZG"#cLW#)':(AGmDV8@YT%9\Gl9Wbh(Z`pd1`;+a<5Q.Xsm^0#hegB^6+c"]^9jL!+<mpBAAgjQ)rf=cK.aAdXfW8j4`7mm^A#)0V@q3JLn(Xf*^6aeYN&8+PT%.+pTU#nYkU^sBCkq+4=u](gu2*R`4?[+Ip4Dt;>r``qO^rcfi=]^1%6X<0lW0^_;WTLkjUAj0>Y*u(L=joaC!bWWNQlfOs!s57ti%_gESG%oQ't?cI_^316bUHaHU,b7^Uk-q^Q/^8,Q,UD2>*DKegjZ4'Y<b)(WT90_EBmRY3e&oIOE-#0l:StK*?]-<ipELu1^b7Y@Z%%.As3:X_qD>S5^N(W`lO@VtRur++('*Zdc0V?iUe8g8>(q(9M5X!Ds?`H,fA=K^(A01(%X';X2j[%,Y+00AL:bn<g8+>To],p)3I%pW=aG[$YiK0,0tN7=f5ObUiHH'%cH_gt$WA,d0D`A!EJB&!rDTPgSsuUQkfC*;/oY\$p8kGtIO7rS*_9D:1b<<8-(p9CS6F[o@\+%(Fe%(C8VF9f".0g2k]6[nF;2d]2Xel?Ulppl8(%oG-`.Lf\Y[]:UVWE%s-^^?HI*#[uH$29Y\26GeZ):St3Hu^#R[K7Y(e/e0+k/%*%028fl[iR0r;jB;<d3ZQoLL'Pf2MC;]hWD''5Up4Tsj[gW-CO0ljfO\H`dsWiMBEWsb7sdPgqY^C1pon*KIGZm6\XTAT8hEAl+l%%4X+tY1F_#6R!W`Sf!$G+8A)pY'afBHfGkSdBD%))!O1WQpZ=W61)Q,[u*T=`5%kVhIc=rCHj$lmt]Xs$>c\#Hc<J_HlXcXDLkg@%?&KqJNld!q!#nY.COAe7mWD2*r-k4uf$`?t%Vi!d4>"Hb1ns^8+I16%2A=hC>_0HPMEBlMj_NH"k5FBIX,rrd*O&5pes/pMpNfn#%\9l!\;6dVI@6(W5N0?fk)%l<R>Kjfof<o4IAS)GbPL/`L'`4tDUplQY^3bZmT?AJ;ZsJEr/;'cE-GJ#q5]^'j6045k1<nn6Q>gg>%FR?A5M6f6@7dVqZfQ?n1j=9H5k%2*KbacqHboA!V[rFsP78d8<?G0u'fT@pOa5GUWPW%Enc6e;7B>7g^BgZVP/jDl3SFS%=Oj/4e%H5?[j%^0_Pq.MKpn'=N,L2FK&F=PQ_jS_TLM+`34^-]g=C0ka%T<CfUT7VrH4U.qO;aA#;B4]WN<MV?IqRr!+IE.5e1j,;[l?jO/%e!as<7]SV[X&WUDTeV6>l`;mgf/)h;'$-3@k!9Tf>G(QlAiR6%:N2s7pu("X>X?TNb?^p-.FU(%HA-^)*Z_^]VkIejIHf_tQp&(I%4Ka:tjq<IZ,F5_Uan?gC%7?CcnuXQKUDZWY";$*#3IKSD'=PeGh@(N;1DUO@1uHTS3!t78s3_%d'+]]Rj!b!0Soul0l$+r`&EKDR%=H%g(\p\;q_-3I^J9;dhcgD&?"M+i'd!d-eBS'X\3PFqFg63$AQkDP]T+\DTqTXO5%7M<D[F8V=3aeG0kbt?(F,Q.$Xl[Bfi+UNh%7">Ko^")aYl04Y0%@!Kn<^$8p^l':)XO(0%B,H8@e+X8F8;4\QPWrBi>^WG8ZQ3WpK+V+NJZ+/u-1tSMjV(FVA%C?J[pp1R_H`sR%Ju?cU,YX/p9>67UfSK&s#n8#q-Col[Q/:0G?MeUZ%BN#*n(X;hk].T9MRcS1Kim7[#[NGmjX=b\2GD>h94>#Gq/2cKe@'Q9[tp(b%3G$cgG1P\eN+kH[gIT+_`OuO&3/tmi'jPa6f]$QqGS;'J"QM?eNQ!I^R83%ch$A[#/1@R#:+:<F)I&b'BXj%QVhjRonu>+j5rmf$%O]SG\A]2K&r+T\D'Ua1#,g56QIYmIbQSHSY'M7D_\&djW_B?-`dS;%/j1D'Wo!NoZ8XqH8_p@(X,l.+G09Xa]Vte8I,dI"O<MTt$%I]Ycke"auN^:T,<*(Eg2qDHhcJR/s".qeXU&4t`kSDthlr?.9%V$kpD&O4Fj+*>jn]<I!Z7j?G@c_AoWlX)OCp!HU3FL9&^'/\.C%gHn\`CW'pD*':OnIM;XiIPd.H8Y(o*b;CNVD-qY&of*:ZqqtNm%][98e)S=J`MC#5LM<p[KAY4?4Kk!ZTEj-_77%l=DeDKP[34$*%CBp0+A2T)UQt3qWSZleA_4Rad%->!jAnW`(`2l_qV7#<VIJ0rQI)U]#rB<DL'5STD9f*(*U'PnD\H(F<_EB),5p1d4*7QEddh5kF%.4Jel1bl%tGq+uC(#lLAbH(K2[Af(;Kh4A7<c0b4g9&mSi'htXliL8Foc9(rC%X0@],KZqj#rkFCT3p5['L"oc2DL<\a=M+Yt*BX%Fn,FlO$k0nAjGFKJ=JrB*S'3SD1])$&a57'(FRAQVO/o@Q[r20'':5X+Pd9JO49@$R]NK<<q`uGp$Dnq+Ya24*D[#3'+NuHgq3$E%`7DicU@]59>Jm"P3<5_X"D#"GhXYk0S>PC1Pf8n9<mg$rCNVeF23^WGEK+5m8_9(H8[bg-aRkLh[uH/Q4S:cd^3:Yl;Z&8WCWFVl%Z#fAVJ4YLao((PlTiBn$42CVg(@#1iV:&+,P*[E(_bB\$!`&q^3.2EmO0q2t2L%ZL<Q`apL&d/[[MCfrRBM[iVJmq1;Ij,Zp*,uW%(N/W1!))4]*u;u_m[7\\.7OkaK,B['d>ZiknS!i=?'mn?)^(gtCk+oX9jECHA,trA5Hb;3mshFXn9iES/ADV)G`p3+[u(@Rm5C^0%jD62<nKPA,eo'\XMrVuf)'S^%]a^,LWgZY`)3DW"P+WiR1:&5ZQ`=g$M(N+DBmgjr]+,8=V8CRB!+44=\(=f;/uHcalfA4nd(I9[%W,bj*k[e0,56Z'$GNfs*/l45ER$Ysrk8/qS'h4M7j2=0,`:pF-SVU)cJOA[En#%G57aBU;`"TN<3P@rU9lY)an(Q9=5=USi)^c;2%dfnb9./=uO71[?KT-ch5%QS?DKnLP)2$;p.O,%t_bp]&Q_R2!Fe15RH/gs1s1cX6RmP4HQPjR^K*Gg5\g"Cm9$[Z:IBIcC%SkrfC%b%U9mQnb&NYOZKo9J/qKl#RO4WN.Eg(?FTM7i_f.jm\)M[Y8G2`_&8?gb"],r3JWn?!uuVm8LC436!QjAX[9)'=udkLnu3_W?B/D%lT7XIl[Zq"/a6!d4/2pVNX5MK@o-;ultbVXd0iR.<!-PBZNBm^FOSHk%6<]'JaLO9\m8DsWiq5saspQ:F&31)pf#>`+8/XYhHNR7%3QG+0NO+Qja9l<%`dm@$(!Y\YEjT_O/<,3:1PJ;EOo,?jN,L8RfV6b`G;+Z],-]3DcZWhr\oXf*-,io\fP->X4B/F09Tm%5&f]0j%=p+,,bOY5KcN[^-#`T:YAa/kr7hBIjq^Pof$<:Pf5)OqdpmK[R-6ohbii,^5=XqT6-)n9'/J)/ZV:8.E.UAjUaN;%>?nZo?k4Z`(%XLM"SC]!8T&6c/@B>-Fl-;&)WppaHUTo:W,Ek\l55fd*TPXKUR^Ug^<<s]043j$HO7Zn1:Xe2:QA?K[rrP2BWNiJ+9&EQ2$D\FSF%m2R`JkMH()o2<m&a^<ur<V49!1U9!+d'HLsD/VR[^](I@-?k_`oX*D#gj%'k]>@=>o+8M^4s/i=9#Kr^;*Of^r4s>UUPgg,0L$7o%R$Dc?]Sfq7G*e2r]PW!iR,&dg=l//T)FqQXG?HHo/?Ta1+)h\\_0TU5)Uo\o3hACXlnYjN\5)GR^6,uqbjUd5!UJ[a`\2!!"J."A%P+8(:e3fY'LWZj_=QP^4D[X'1'Gj">X@Ph8QX+]'e+Qhf*DD@g67bl5;m[hG$E9;`-3f*i]88fsjtJLs?if(jQZ.LY$#3q&Cnbk[%c%12NaJ/tegJ!Pek^[n?K$ko3CeO\l_[I%r_:o,#]E(t&^)+V^rJXJ6a<foiNk.Zd"_`YF"2gLb91%[?Z3*>7CS5oM"_5Ru0e@bp%V"iBo3liC/JTeKJ^db;fKS07H$aSi29.E)Bm"68k250Q"HV!:6;sZ]s\,`c_/>\'s`Q+iX#5*22RaS(;/.,^u;!rM\'H`e`+BK(L%J?ge/-aG007j91@e[IaJ*9F;=YO9QVc)".Q'gZ[YSHY9^P^mfY:SpGP+u[B3=\L<+R%D1r!4iNKl(q]QHN^Q7fE%H`N/YUk5r[$a%U*RFS*[81L>p.caVf[-Y@;!ZsOHH9)]`&V,,)T4YAQR1O,$WFHbDo]Z0;"tbe"Ooo8M95s!o'Iue70<hF:1m>s1Mlc!ESG1",MH]%"6\Z$oCmUFXc"O:Hse<X!391fRO<fuj5FulZ12pCg.kmZ&b2KsSY&l)5-Euk\X3B2eLmVKG]m8843:_m"8f8.?+K:\%_h,IWXt5h%KpBYp-jjm2Pfg]&VrQ2mjnFVuYC_hj:,I;q3qq=9jW,[>ZlNQfZ7^lIfWfI;JoJn(48'MA1Y?/)'h6(m0s>Oh_DC!,(2P-t0becZ%Mc@el*,a_f/VZRSbXhC8\"lM!DqB/&fhGgjQ`t*3\243f::7GcfXLO:`URa:L[BGsc-7F-pK,pCV6@0^EIKjdC2+hZ08QM"rA@?=%\Ah;uY[SD)l\17dA$RW/nK8MlrjbCNne0HVFmYJIZ.i`B$?E)tH_!!$/M#<J(Pf\P#$,?=,/rjq)aWk.q\V_7+GC%2G82l6)Bg9t%Fp5+TRj7VbM4bD/a:?60`9pK_BctGo8)jDY+)U1@ctr1DIB'nC@eIC$'^p3B7Z-2C\%ZREdbn2)<HhL"6TqLW#PU<KS8US5U+rd+%[AE/CR/@R,ai5+cat?_O!1ZUXR:gV?6F8;1oEl%a^cRC8@*BPIMeoL68]%7MQQ%Q5mH2/WK%5+cZ%Ic`*oRk7ZK97BgXP8io^FcK%4+2Y8lcKOKOUhn-S#3<4.VLhlX7(snC>m<5NT<KueQj(X"'94F^op2SQ.i+L2L8D5o&rS5GC0K51(XudobID8AY(!\eE!=uZ73bB%oR3H/7@7SV-qWETa)cd]QYeb_G+o$m#iL^jNt1Mk1'`Q_-J39i\dVS:HVe:O5h.+dYp>6OH/a4.[7?p,WC_\&1FJ=%p8imIYI+W.%NnZrkPFsAfnBQC]=5LTRCW)WJ-%VB_c91R<P8MXBiK;$C&'a%VhfN,a`]45aMUL7*4_n3J87Q-sFiG7&fh?I,Vhk5(;t`I^eI9g+%0`u2M&cq0qnV^Uh-*ecT-=s"P&>'qiQ2HKO#=e3?7#YiA%!NHYo"ion?NAoel95[7m#'DA7c8t<cu/<HKV<>a!K)/L]0]pQ8>V)*%d`HNYEbXM[98K./?9rQgYr%TkRHDB>Ps_"Mac]IWTJVM3`pA:$q=t>5<^,%32$D0OF;ooBk5IdUppVp1,;OU&`kF#r1d$P5=XkZk%n=0s6J<tXD<=fYll?RtX+N3Rd(4B?1JV(n2$C6%>44&&`j9WSpepo5AE<kk5;)jNbGK^VWJr\>=d-&A#NV2DoBW]$dL0u?<li76s%&QKtNA68@uq8E%JJB9SIaSB<ZjoA)H!FXg2+"RY)ndGM&0*-+o-I2ZWaZjJL^uQ@5fZU'N!5UDjkT+OW`]YQ,<-,76s8MDqZm+.'%&q0NOcY'^OmcX?!n*e!F?TM)q?/ELYT_n%6mpgHpGkidaG\u!<a"UO`.fiSbc[4FQT8fQ#RO3?uN2Wo;J\o/M9bK"m$96)!C4aS!%qbETbe5#(mEDA6ZAGc5!kMZUNUq8p]mbVh.f+LKZOLUBVH8:Um`jU9g6$@(N/cT$igk>2R=\Z[p``no=A&sFiZB41r0&2aA*Gfg#%GiM=KpY:Zh^D)-<F?;X)`[[AubtX!m&SCD3n,/f[OK.ST=NeQOk$ltXoM0bXcXo8/%'>:?q0c,QDV$t8?DDMjpj5j&e:p2Ip)q!`%cK$X:qtlg[C=G<;7[VseTY+EP>dZ(3GpGAp*Y9!n;#8O_^\8Ks2QNYbiI8tT]ce#TpGR#(`s(ntf_XH\`(qHH8FiefO5<(KOi25+%').HO+t;JQ,';kUDkHfG\VJtd_a`pndSXpoTfs*ome+"Hht+tXahc8rhVZcT2K%!/c9q<&gj=>Ya?>M.ViK\Q1^WeFpYJJ.-FEVS%)8]XA?[qK_K1[#*]A,haWTjQ1mf5T',H8>'#.%WbM8YmcX[oI?re0$-F::B%SIEsalt@ZECm*A-/\e<so^bIRH"HT=Z";n^Q0=/@%P94D"$BqfCB#Y3l<YBfb)etX@::QYh6X3/#EB[Q&9I%OEV9KgeN#+YqA1JV*GQ<]0fUD><D:NsJldMsVkf%iN?Hgf_nYhW5*]ss?%G)QYrK(ZpAMaA84ms0+)5q55T#X,ojh+Gfk.ff&W\9R`r_Z\?SWIU"!6=/)i#4V4f,,,E\pOUU.3%H>[8s8`@fm_)&>@@"ZAX0Ts%1o\Ef'k\<aq@Y!"eFD]BD&2oCSYl1?0;[]`?J6coKO0Pq3pZG;1i8/b2dYJc`NNP.[*[5:23&pgC5EHd)KUcm.l[8&,3.6\-oud7%f)j!Xf:-Qpr:TXW>Ob?Lm,kMBm9@G%;W2Wg"Xoe=U=ro%e@2_T?>hrThiEpI_Q%!7V150)Jr'4J?3h:Dhl7&C`-b1_kVH@g+e]tj%d3bUFR4mssk.)$cHKO8@ShN=u^<-'kb[N!V%T&1V+n+kgP4@oi(Ud]Is7PH&6;RG(,^4)k?i)!(L-nLA5%_=TfO_fsISn>eU[sT^%-E3WsF.d:%iCFI.+P&Ij3--oAp;!j!VR(XF+!]77ZT=PVQ(fX_d:BAHIP9H=[;q1fBORn$RI,^A'J`o,@c_K/j;))Oo:\XnjI/b`%lafc!2'ac5d&0`ao4sTHpG1"BG/COLd6dtEZ'i:Q#0pcT2cMic4KM7+@AY0$U:*`H6<*B@=OqBIaYtg#3+"d&4pf=a%nl8X+F)j2%5W8!2#j;c^#9F/2X.-l3XoX3To!!*!pXjj*YO0=8Js6QCeg\3RR@o3<!P.gH%1&GUR?Gt+f?OS$*`a\X#agIfSH79>^91.odMIe$%2"@IURjBQrNO$'h!HL!i"AOE2?ZkB7It$<3db(781JEEBV`!1YK.DA>.&Kq,:W);DQ<C))]pA1^m_deU!]9GQ,>=[NaQJCh:3ULi%m`#6(gqNlQ_<K^-5$4@m%)lnsa:`YQ&J,mjngKV/0F!,WY>JP_WH$RhDOaf<aH%oMiu<5?doOc[1djd6R@mO$G^lNGDG_5Y8jAT-%>1sca"9!r0]n.O^F,R)[4o(GF$&2HMeZAZ\Xa7M@s2NYP>$*X)9Cs9X/6.KQNVNTepE^g_^Y[W!rQM,i)Oh'o]A9k;,(ldJB+oVb%4.2M6Z'VHr#)u>)1bb4F"s!f@1$9tA?_XlHr-MN+d)g"_i(_^eeC8:Q=feGXdkbuk/Q[&"CI!kQ(+^1T-5GsfIIa*qe/KX%S'dgV%0mqp>[co*O!lRc^)#UiYoluJcc946?`:X"qB8EVMm$gNZBUQ'CSOS29IjgdXj8:(U2$4$$[..TO@lfeN.6sP]?HpH?3<)5cR%a@D%IMi,22I-M0fK\F5!^Mi*b]bi?K5T(?k]"%V(p?!Z=#bB,A*+-=M>`Y`&-c_ps!1>:"Ct6<^5"h*1jpQGYB+XZ!e6g5D81QI&@1KC%0a1`c1H[i`H];ob!V/RG37"hZL[BKmgGs&XG(*/SQ#VLqOT]gJZ9AZlUp<NJ<ub><q"Duo^R)^^8q4#+cY=OlV8N8QV2H;X30M4"%D+$[Imo;9ISU?IkLlXZ<Ms!U"<k)3KS1QUAT-(Gdr8hms=am<Ai<mnrBMgG0(`19*Iut32]#sTE&)4+pAosMO#7d:@;*<WG%'mX%%[bm_)iOTb`\E#5E3UI@r]9UK^oDC\(5HSEUZV222fSdde7e*C9<JhDFF@>>H/FCi5#kW)>gN&QJY0^;odErd?Xao5&U8M$G2'\Aa%NsW[:-9%b,jUbb91Ht9O[@T@iIg&s#EGE454bL$ni$jcN!^3U;33\g(?dX?r4!Lk=VIK@tr^[6P]U5Ee8E28:IsCgSaar#'5>1is%X3b$`=.F&Tkj20P#Ap)Fo@r(mYbQa4YrDX]ZP<Q,`T;j+EkBUM22%]$.(O.&L0^mR]G;EXc1Y$-T11IZL?\^>r/[JM*Yp%R/1Cr(%:pBTU4VT,`_dY`Ue.+oS1\on#e>s+JST_F8:O!>,mZ*@2pIjJQ0Wk3ZFk=Mc(le"l[Gat&f/I#EKWcOBS;2T<rsB4ocRB:]1F01J%5k.).irHgkJYIXJZf0s6j0K<"iu8dX;3\q$2Z+62Bc;G7OY;TZK5^P/qF2NTKKuHNK[d@S#SOiu$gF`8E+LW%/?;BW<S'*E5o]XA%^$u^2L#H9iKX@UJZ6G'X[$oHaP02p;Zan87,aa@Co+8dZc@Ldt2D&^=bVq$Y=_J%DiQFV8/S8k599PH=,Xo2-a\#_Q</Hj]=WO1Y%ATMQWdmRD'-'up=FSi[1YcSX+Z^%M)3\/DIG;V7[M>!Y,=rM!^HW:ig[%aS/=(P6%l\`BEUo.d,\!P3_>*VLt<i-.:;37G2)7l/B%3`)+EN+oR=QGd#h$ff)Z'sNg!Up)Bu0Q!*)e&8VXKs*8=Vdt@eThH9O!+S/CX'/]RZe.cKOOA^\KTm4j[&WBcDH<"MZ7b4T=Xf[Q%`#L4iJ0Ira$"m\>$A&]/A2u4kZ4(=6:s>'-XIN=%(^iOOapNDqOjc?fB,31o.\t[$2D+/I')\I0&rnTFB%&aT-3U)=MfP,jVC@$;%*FG'3H&11UY,&C,$#!;\!oA'9:4[Zm2+"3m$8[pO#f%Ykd(QOFBcYS-AM>,n"6u"k3Lphf2+>feoc/o1M^3ub"J>p?Uue6X5cdN;%<CKW_!+%'P&.Vg,!s0%-Z`G99)_u[R!1VMI+>OL%%]VmYVPQ.-$RL<_RG_)mFm'4R!OW&--CcLJl("8BTe&]a"\"RS:Nbl"")*Oe%"-[."$?7]#cm:HBRYA9ZJ8uN`"XQcEP]T/9Z6V\;e8m$LJ27XHK^n8LB%.]O/RAReMD?>0P8@eXVW;R+LbKMLQn2RfMWUrd0*2l$%7:!Cm,*]pFmC\8Dk![V:Ma2Dg/na35GZ>?`S;e=n-plM)M)'Tgb1Sa/#LcQbfuAk6LT76(3=uPFab[`4\kK><0d70T:*`al),Yu=%ZE@hc7[-m1!\GekN!MNTF3kYn&LA\&6'cdcP^m5K)J'S7&L@mr:QQ<_&LA1MYDOgUL_<MpY_g@S,(a!-r+^2FPQOrb#q_U9-n/:A%EDbjY;$%)$1a5^h<^a=<6<<2N;%d<YZDR-(#Tj%17H&Mh&oq\<987(7USpgVaV)pYJ8&[bkBRZETk.5hB1>`cAl*_Y'EKUI*AYZo%,2aZ7j&o7'aT-danOust!QCL$VJ>[rW+Z/aS*guAQiZ.QAOTuc>mGNr9ZU2F_0/t+6NRVUfac.-R$!s.J?h%,\+-"a.?!@N!0*k>%\T3'&E`,s*HjBSfY\inNe5IbmE-s%2JKaB-LV0RC3mW"0@bo.M^fjkB@Z0j9<DCRb4Qi\(5UMo#`H`kB"X:9Ic3*o7B2q8[-L5+7%,->Hr*mb)KK&Fl6]I]3n'rdK+KPiZ4#Ui=Ljo?#TjX>cQJ6P9b&34NHSd\^:73XricBCQc.'b,O3"Mm[$&XB,:q.*_A9&_&-'L,)%kJ9-W68]W6$Tsp-m>NCnKdrNc#9rbq<;)]<-\<\oZ\hH`,4c)?+S1O>WlRYMf#Dq7.5E6AnN\d!\npOl'UQ*TgGf_jU1CSg22J?-%l#Mes4TMc7'BsBhT7Y]?aL.BG&YI;s2Wb+)cK5BY>MPQFd^^n`H'.uIW<o+r^jpk:e;&k]mBf.G-8*$q1qEWVN9@CkD5\I9&*`%T%4FD?G>QB>b!#K20BJIu0]@tO);\kA4$MMctX8j3@mfG^(BGt.^YcMBB,=N.oOpno-hGVbj5t3]R>$RHuqG,B_;MJ@XO@WMTdq!eC%Lm&fE!dU-"`=f+2<\4^-,j/@LG7)21#CX.L!OH;?@j#S#DIqV8ULbO@eKI$T8gL,9)B]7+%poOhQ+X5O\3ZGm$=kH<3^ZDiRuIqk%#R)^ONs21eZu@UMl3F9k98'B5e<+RS.j0ML,R5Zk<J#,i8-RR$X+`<#V=2Nh+Hqti80LHe*khi[,\?L'!0`:$&juj4<<QH]m#39C%SAP[P))?P/c]K]qBZ#Fl5UNL/7`#cEFU8am5od-1lB86219+=#EhPXIhP.bRM+ihm:gci"W,o?HA0>\VX)0C":mR7FTp8e+aA=-;%H2N9Z%naXG_3R>sA4]E`#m^d+.t*BlM,^C9L9fmLW\P7q3TB3pPW!7Zd3)aE%;UXJ&8)&r'dTqQW"^VWj$\h=$:r$j>V.4>dZ0cm%^fLdKObl=^OI&58PPIk1O0M)"DBBFM8dlP;!-?HmN'*%C1tr_u[&t#qK)Ct@UqidK=\t(Y&t+bZXs8U.(91,T8MDPie'-\`@Buc`%WsBUeN\!ON'"u;pc[\)2"s$F(N=VF)QXqHkN^e;s(92m].YTG+_Lr69rK&d7&gXLd-R2NldHC]>5G3'e!0o?R)pg,J.M9H[VC9:;%Y_8rkX2L_O^5)d1C^75@.lu9"P^rWUZe+E&!9!um]!+&.8Ko(DUDmB%6(B0m1$]+(U<R:LoN3-)6!95`h]*7q*PG3he9h:P),b!?%he^=9OkCZY7q5(*Y`2La#]ZT@k(62LEN_Y?+eHM<c,uPc5V!\)Laq,D"^_JnM!,PW*FrH]MgVl:'h,HoklQb[M.hRkC1aqmAQH8m%AQ2mlfL[2.B-@_>NaeC+-[::Gaub@'`"E%k/MWVjcPiS_=<k"\/VId?elIVR!N\&ABaV0i&-5bSR,*T+*C)2e%Eab?f!nT-d.`L@%)(#'LaonP@$[`RYf(kWI+-75nhOeC.*-5*/?fD9-'QCB7MG+Quc'V<_qVjeTN5u(1C5I.l'*mAjkQl?b1?&1!g8"N#'^.LbQ*DtS%ktn#[bQ]gj3Z>7kka<Wc3:!)&B>=6KZP"Bh)+iY#"2H5h3%)$[_g#V*-,W"dRU\ls-4,mf(+r=LNkU)pnTBA&7)h3fR4K:;hjFnq%+Y3+N_LS4'o#!@Y\>^?Wf(=rf/-$RdnR+1CA]!.<[tP;>dV:CjA0U3g_l2^f!YSMB7?<k1D3k,Rn.C&gDt=`6B>r3Hf5Eq+e$Mo=%hgf,@e$<QI[8gi7%JVOfc^`n.Q'm('H'amPQ2m5t<u#ctAUM8NDeAC>"'9+"#AtT#A_anmAOID,17Cmg`4HLa)0Ht(5gL=V41Yn7%iZVsE,!apcTP2OU@'0TtJZ5JMc3&ee7&+>Q(6H<;k=jf<bh]S)a<9CM;\2(sN7^udgN"==N%&l63adLk0FJu)#?!gh3l?0W,#qZ#%bB^l9#%ZjY@#6:h)XfiIOI31[h?0(bFKWhD^mQpdKR")1,,hRh<_&s'NmT[MRKRdnk5ibnbK-1YaU$jmc@],+RS$fsEumk>A;l9?%5S-T0_K$`;9SRIY]Ea$F@Y6@cKQEt2N[;+F8qO0?2Q_h+o0=M""H/S%`%he"DobeK9JD#ch3,0HM'\:p1?Lc^L."?>e:#+6i\+Kl%!t"Qs#F)b0,gK-&5#W^d;s'qpap*cSn[L(42_p+4rWAJI,f?Cu)2'ZliFIoKMG31Mrkg/E)?,6l?H[i61*n;ejsl\\RUshYShR7-%S3bpjijpq`Qr#jRN%j;F.cJI'.mbcACrW^.c(6IrhAD2[n6<eAAdV$`L>DEMX*`Hh>E\#=lj:s!S3I-)^sfBb]R,+40ggHn_)<PJ%XFEQ`ZcOB[*E&P$C\7>''pfY4[B#d5g'3uY#kYT$mEEXUADC*1>Gd)2*."/G/%^&'/fj=5F!k.7f5.#3"JjT#9Sp&`CF_+oekqkt%UEuehWQbfi?)H5kdNs>#..cfN#&O.Q;9piHp3!nV11pC"!COKB4O3-5H2,Q_?T9ODX,/1#*2J%UYitf^qm@9s\''bR;Ve!.fkooe%%P2q*Vtdk"G@6Ml+h&tF\=1%<HEP>G<#+[o"F;PZY&*l$7[#'F@UnV.Pn1ZK_)[0?<`eW-_%09uIbXSoeM8)c^6DEaj'^3R.?EJ$%m6&(j4iW'i#s2l?QgWJ?\#NXUY]Bl4I2*MOiN269Q2-VJ,2>IUS4+7*5X>B8efcRM"0G-aeqn(?.E+5\T-Bacf23E+YULE]`FN,f%j-kA%2.MGRLJ(BYd8cSKg`cHX6VY,SLHr/X^hV]*ZrGP@dHm[#Lg@D_RD"csD^,Vq(s$;]RGRo[m8:#1_R[$giJOh)X(`p<!)Wh!%KUC;Ec0[9Ej+<5L"Y^l;VP:JWUnpbPaolP%R6gI'<@5)tk-dmE;A.g2H"(lMkcAa$o..4G_X/UMf/]=bAX;0o^hD0#rjkb0;[p?Y%RNY?!XP?VHa!:<D^K^rQ#FBf]oXCKDHoL_"p#A631s58g5"5oLi6')"(UTR2lp<e=UjS,9B#g]p";],bIXB9hM]U=n_?VXb.jk;$%^&s;:-H>S/V/a.XWdIL]>8Pi-&Q:f"gYZ9.(WAaN"IqC>lOtrn)N)RlRC1T@$I%"f?\e`/?+C=?P&k0jF!>?pG/XPi7qXreGg,S,%b7p!N(i!kD`FF(X:8rKr8'8&AnX/b"-Biu]Y8t`mTJWZBkBb/T*'.'N.F+X/hTM>mbj5/2kHBa^BO(4\NHdC]g/X2JAg_=7E1<dd%`\e8N+`IVGRKqP,9K5knA"$7?.39U']cF8$JF$F%QNDe<r@"WdZ^I7"?hKLVjALbIF^?%(JB#RN"[m8`.N_'Ane%6>+,Gl-GY7'"%5u>5X:&C=6e/rEIo4H"*4k[%53jrlIl0cU;mPEbdf`-A)mWG$3--4UIS0Jb`>lD/Q4XqPDi1tajPb)\>bJ'A7rM"b2j&6UpaNu;&%8P8G+XNP4Q@?ncfUtq4W&a@sYV1*TR1]rn/ompYcJe=K-8dOQA)nfh+*Tb^CZ0OAn<m1pc,Sa7@S`oi1X\,^@m+t:WO*?j9dHQLU%G*6>mmVDNB=@^h.^in?"<L;naZjAbTMdTdS_%$U69EeCi3e>^p;$I&0l0RQNN#hSCK>%mdlY]^b.0JgL!622T-3dkddj1M?Fk+u9%V-Q);hA]4&ODOYa)Aiq`a%GJ>rTKb^p$&]Sl9\?Hmh1(M_\b@Z)=j'G%nLe/3&G*7!4Kg;_I[98E$EV\]p\A%e'0QNY/l%Ih"m)B%Z!JfJiD!@;-AQ.oq4)VLN*DYV&A&,_mZhCB@lg]l?Lq,fQFR[P\0KH>*$Mi(A6QH]-OO3Ks&Be]3<?^i46Aq!'%%[o`6PW/Et1;%%r'^\i^T-78[$E2F(j=NJ9WKErF!V(A6o_O^l1gSaZT(JE<HVegSB5MX"\s8ak7s>Zpdq]De"<$7ElQ\"b78TW^?k8GiD"$&^8FH*%U"O<$#R&F<g9*#&N9UfgCiR]om_uMV<H_afC-3O)<nI3OVonHJ\Z'&Enhs_A-J(D/Z[K7PV0)]RhVIB&dE]+PlTMrL1^=X<$d=?d%%I2r;c-W=#j(08DMW^*?8te>"Cb>'FNE7J;gi+?B+5II$A#`D0h*`a\S5YMV-;nhd&@u``&_RQ/m*o:M<+&<3]I6*tB5H2'8uS92%'"?Z=>g"+,UoKji1C-d4%+"X`DI1QIY[_>f7NNuHmmJG2a,[?YW6"l>jaIf^WTRj;3T)h[:!nnqB(!lT4=Jq$NGVYPQgXONS8j1I%D,\&0^#t2a2E/.p[`na2ar=e_Qdb)+iJEsQ;>n?3RL0A\39K*AJ3%0-k@h^qeBq.gZ%F$_8V:Ke)*+_,4TVZFB)ZIfWQlC`1>:8q%?4_\AZJ-A?iTc+.Se)Aa@5\/6P0HgF(Xj3hq.'`h[N>/ho;aZdqT[EV\LJ"$,1[gl$il5m0o_oD`U>S2."E#H-:O[8,`e@\\Y5cE%G?%._iQr(/h!H,8)hX+b%3E/+n3hQk<2kPQ8.>-mY@A$j4,k?_V.JP06IK1_N%1)O7'2B\-/FM:\c,'u@mt:Yp3L)f+6Y\6:K[H+%f\_58l?hd1=K^LNPt1\a[OWV1d7@`T.n%,7=Gm\6@CI^VpQ.5cXV++8Q2G[/F)*Z`M-0MQi!i>m_GPS`m8aOgN@KqH#tq%<a2Djq%`$MkZT9J@d@;<CU0H$hmgJrf'dPMf>,l#!":3J,fB"B_/<Iq2lbH\H?N*FYL<Q^uDdln[f-8<VC.FViK>-<C`WJ;AsVatE^H*u%k%!)(SlC:=7R@\28TJ=+m(lrH@g!,Ha.&7h,l)6SK0(Gcdq2D6\)SWU.bkZ?nC@-a3D@0'MC[fSsM\JVK"BUl(AXob;SSffgo8OKZE%Mr@9oeY>0!liKnX-'pWH,%8Z*=3*mF=1]2Z@.jGW)<lFg^qnX+/os%Mb9\dOA<=L!iIua&&4r3^?tQj1QAQ!nd"MI=]DKQnd_pA]%d=FQ*CWU:NU"-2*8p5&GAh-R%XP%D9HbWn"k-D;bB.AbgN?>S;mjHGXn!N&f>_1Ip$mk[qqX(>hb;m:u6+UuSM[MAJN,3g,]g\+n%,jh-*@66q?DBk%a_NGTY\\6+AG.AoBNXIHpj%$Y/ZahUB)JNgEaBc1Zs"K%nH]+HW"Jf$pV2^-%G%-'9[ks"<;G=Js*QrG0ZIcuL%-E4UDT/JdBfr]dE!<k!=-;q1G!&9V$p(h&pdt=`!lCgeQ[+lp[C?5U4745L=`iIT0NE:rb1HHi!?*]LLL&>4\KYcDEc&<!G./>.4%H3K7&&Q)b`1d0Wi4!>Ra1!Tf(i]MAX^nfY"Y-2lk>IY_k?1+a`&KL%Hg+0:,^bc&//1$[.2?.s%EBX4DUr<Mic6*-]IB!*F(<dtg%S+O0.G6jRV==RSkC*E_P<f=1,J\&a/42ohT`6PWoF,i2aI.<b?ZP@)Y*2YYu90FmEp,C2j8"taYP`ou/0sh):kRh,_7\672BaADg%]3@lefA2u+>`Rt0J7]AG4eCcP?+5PK:muK<G;fs`^mM5KAsji?*Ho=BEhE]6SN>c7LccoWh2c(pP2;PE%\#I-NPr"7m+mg5<GA6!%6Gr)'#a'U8gt]q^cIJprgD)CuoTH$KNU6UPE;P%fFuMd.Oq&"R9N)6Pg<NPo)Y`:5bAfa[]KN=-N5Ba\_8HI%gO<b@VmJG-]L;&2%a\q04R@Jr^H/P*pZS]]Z?=>";EW,/b0#L@fee5IJb"V,77j\QeEmJh4@+Lm!bQPjbi]qcj@7glYgu&l7qct2^T(b*tcYn2cU)BTD%gmQK3OMhkWeb=354fi3%67[jsadJ(M3k&jt]1K[CN0.<JnOn6/%P4?bJF1f2#)VID;LD!u&tMRgP<ktSJ6=MA-6JURf-7UZQh_QG%<Ef4@6n\A6GV5=PF($'TfqQ$-=f@%nF.JYb"aPtnT)Z//TR\S\9,^Z&C;F0'Pp_5f0UL/8;D8mk6&AVZ$-%75q?!ZIV*)hP*]48M%D=]ka$I:(F.Yu,ca[3UdfhT@4_"C>O=$V`+P2GY=s-Hh?1jtb0Tjf65rDX)6.$n`QB6C5c@MkHI/K&?;L2p]h)#S8Y'fR/%ed\F$%0UW(r!K12'"<1bJbsE_=>l6Z8+q[gSUCEP\UF1e9-$h,D.adSaE/]`a>aI%fY<87?c4;8MokOrp!n8dje2l@$%4I.[,9.k3Dl<Hl%$2VgI\6)]QS!"cg>;1bZ+8o8>f\<@q8AF$r2Pu7]LFEYN3ncHM/$NOo6e)=c7sB#V?ssP_DsK99U`bl4o^BS9^Ep0DhQ\b_`AjHn%q!A0\jtHpO'FSDnF')g^%RX4F@;Z1PL*90D_@_#MMG(J&h(<)lXmt1eALiSO.G=]#jtruR@OlLg#`a>@>g@GT(`_AWHJBbMpYTDA%$"=QPbS)k'fEmqT8>@#NZn)GeNFF90-f%o7S<'8niARqS1IHfL`(n7(EOU+^@iLd(/tEZ8&EZL#h$%[/6OZ[DCQI5g&2\I<F==W[%[.F`p`#K'MIn#0I)T9up28MNe@M3K70D7(2j9AgGLgegZ)2F([7^ap0,T+7a5P`^\68Xi%*:X*9MTI,uj*LC1S;?$11l2f9-F(AA%,USqjk-YgZ$gqBZnno)Xg@cN."hH?N("n^*q-eA;b`V&F%-FSUV2js35'<Lri<c`+&]6'_2*'ON%j,A/TAa;l"/R'JV)R7AaTo<(%i)m?Z&/(Z-]Vk'i(+(!=m-iRd!Jk0@/^X40DN]^2`6aN5JmEK\[\7f&aj-JZ3?L,6Dun@e3;59S,Z-#-D"e4ob($>^kUD08)WAW=%X-c&u_^QqSYme+LHG(t=(rA\&LKf2^Qu6<OFB=GY-t0^11M!'@8rUoPkouF)?C:/Taj8Wh!_;C4l)l(!MtY\W87H)?,BC-4FGDB*%c?(H19g!VhTSE'n@6tN./m)tnq>nNm9K:4$4k]U`jf\#sMp>$m6qb<@QA^QgO]a<R]KCXE=Y><;`f9(PPgY9ISqps43R9"7c;'4p%$K\j4BO82$<d)(jrW#EsWNofd;nB3hF*(U%,k9]3U+@dO?d5d[,=4^,mTat4+:@5AlfROC,]hcVNaq+\bO8m&\hiX6OR!D$RjZZR%H)d#Y1+6Y"'(p@o0"L$CkR1@]]A/ef4;TN[kLq"HP.Pf&O8#tNT$-@m9QtVT]CXLcL'R=3kme(U92'Q>c&#+q*CdkeRIRZU-Z8'K%qX<-)0\m?"DU&MZ%+up5G)dK1L0PPD]qq_NE^Ub&UWlce5]^QqZG_]tl=kcDFTU![GUT<rh:me.WF9Q6)0D$NRTi0_g/?]Bm.IT=%_0Sn2fIHDFoVZRqokB1XISJmD$N*05DT%nW?tu.7^m6IT02%;2')Rh'StC[=*)/9NYr:!87-"JJI].j9pFX>A_?0h?]5Lh:C1`H5%4&%U#95cMap'XSB^Xk/+dS2!HNYprp>N.JbGBkg#VO6jFTi@B>[VYAY8H6L#+1.o1A/l7,:ajXM@blA*KoI;YRsRr9/L]JU(TDJo%5k:;!=X["OjP`#E?c;".;'*7]KH%s)$gLt/X0,GRps$?tG..in1OFcuYd<03&kUfpc#7.]Oo<G=3>PQO/]BPlIsEf?.aGQQ*K+rF%]%=i?rkKX!Q9%^*K;\eJj0sD`0Du^1a8;h+8AEdI;9Ss)^kR`gikJ+:J\].n;,Q<1QGAe?>!D#V@UKWq8!Qs\f*&OtEkhQ)JLt<;%Ehm\;@Hk8iQrlO%4Sj+L=U7fj$K1tq:mAhJ9GRiNjt<Rk5M!nR33\:X5Ud\on<QMWY))A13BZO'?/8Ja:1*B3Q\uPaV37eqISC0Q%n0l+GjAIr;]6.*^(LUL*mf=oW4B3S\"5,;I3'(PYR0hlgQqJWT365De>a)FD[!"$pJLTe-(Z<29M?AF3"0![dS0[VSYr9,m*tTq@%A<M0['Kd"=P.3=oA@a$=bNfaU-Ad@KRcn:YAaM<;_:dF#4LNQ^p/PPDa?`+ZcK[-)_?U[':q\?F0hXnSa;g;<<c^BblT1,01EdFM%V&?gj<=VN#i]g%U33Z[/o-T9Gk+e;j@^Ad#1#'9+Z/6cD7&8tVhc(eW"$)ChOshqUCP`9g+C].`+I\JgqZ1e14Jk%_nQNW;Vdhu\%ho@4ki+Pq:l+Y86!AIq\[_:;D&:l["fK:%'A/jpGn/IpPL`@\N+<>")1_X*6V&>\CR2Z)0-Y8_K5ascr19OXPA>;'WK*k2;oZb?Q%:n<0E0Um@<FSK[-;oIO%*_B7'[Sn1SEaQ9,_bsf8+]UY4(EVq!EFAQbCGLMBBY5JK<1OY'pH#4lJ.W^IEu$Klg,!4ZY1Y,p4+1c5%X'BmLfe88<-MG'Yi&'+?WX_]YE<uFV:XCDI(m%d#%/,T5hU++U>oIU%@D>J$67;Ig?(iJ>V-,t60B,g^hXaf3!^`1N,!MqGjhcJ[%UiEVG`!7Fe+kSH1FFjcYqaElT5:ZP!GGpRofe7)7m+M@h.sGMk#_j^Ed0ohW<go=]@=m+r_1(A?4KbQC$ND[5o"ok7q^d(ir0Kr`%^k"KNL)4u8i4lL(WCCncKuanQCk0N-b`_?EGZ`e<@)5`D,8m/TPR'hbB[#2a/d>uL-d2,e]-FoQ!R?:8V_8mk:N0p]/=O`Q^/C8l%nq<je%[d@$86JjYd]=q'o,mik[S?hFH<2@8)=-s51@&3XW*ucOL1I<cQeNihmt`M?rFWQOcXt1dZ!0,#c))&?m?rfk^XIMQbI-Ai%`76^4k51f!k'0;,SuonY[9a@oQi]iUs1McMnT0!GP^q)PbNFF2C8A::4(!/=hQVe]!QIYS\Su;!cF>Eg":-f</<U.'7CmC-JVoR2%,m$J[A42U%9.jG/-)k`LbaT[P)1>^?$*Ygp$4.c0SK]f.?2h8tKS3JfM6sV"NZ];L]h+(U#U^4IMFg2[G(XU'6uo;3MQ:nYe(f9;%hjc99AYc*YC(ql_"2o_8M^X]&De;"kI0%:/l8#.\@>lW9es9l^92(2T*cS(h<*OK>JjC]ueEH370SZ=>oue*14ffWc?btp$m&T;"%(opk'@Kld_WFYS078X&#HCJ)3$':k#2N'%V86X;ll(&bFq>#pI(g3$#Z=&_]3>ijXa2jFeQFF&ZCGOC9-jL(bFZ#(/!G35kq^\hV%>B!.Rl\I0=5O'>OfO#\,_WMuGQ%I=)r=)k3^5r8oQ/uj^H)0>9AO4.gR@b0QIl`@kjKMA^(06C9SBN?3rRPbuj0UGcKMiuI>#u(O%kciMt<;/J`K[_J+(S0nT+L@Jd,P%_Go?kd.%6!g@[m+X#U4cO\)6R0-P0N.O$V#@BZRhcGS#sj)+-mYA!c1>:kMpbLHrOR/Pa45V%SuWI&GO2JcBQ)KA9?-*l^b,k>edqodH-(B#[>SB,M[B)::K^VW<=fr;Ou9K0aC7AF<STtl4;;R$gToTFY>5H4Wu6As/G`=F'5?9N%l?\4X+VGZ60s[:<9L\_M"*$&?H9P=AQ=k9TRpWS%-E9/C*Q"acfPO($20,'%)(p#>8lu\%O3"3bo_%I#fm4m_jNsGCe,l<Rg.d5d%Iie)cE9@8d6FJ[>+I6LLX;TQUe>Qfi8/^3#;55<><2hN\ik$&MoN]b./Y6Ps`q[/<LMt60ol/DZXnG]3^Eo@NjLskqR)HPZ'bUuf%7'>=.c%29S^g&;odR_LBr&[jl8).ap-Ks&i8'1WqEp+_l`H3@#W042q,o;hpP[%2=:jG\lYDZ]s&likljp=V3X1)X2BSeNEhNH-9%W0lorG."KnnX+,6GW;2Nlkb,k@g!urZ?^#`r1nDNQ[K0dP$;KRSO[ft,'hDNghXfnkh1gHr38U\'YQm[gr2mg-m_[U"1R4Q-eg6+%*6::r]Lo,/Bo+$e!P.#PW=C2n7Z9.=Q=?/m^H@k;2;LCYN\ribl/ln\(o;1dgU=dUMGYZ!i[@9iL9%'dRI>>iZ%PJT7kn<d\2oKL%8LlsmNaam\k@D:gMFgd;\TMs-a5GtL!kUFLgU:H0`;o=d@UN8-0p&H23$B8I_JB^V-(Cdq0'8<Rq1OrH>EZI,o:qfSJS,e$>ogmN%7!98'\Ee(I9jh$mEJ&?(i[>9^O1F$c`R0j@PisdG;\8&g/dSq=R2.Uhn%(N:Z$id8@KbfJ*Q8:2\iP]\"Eno%#ElO]\3#T$;B4Q`%mO0D^4M:"B."5O7f>DXcO72SojMr'umN(17*r*mkeEp\H]]$F>%CdpnpU?SM/s3Nj`-;R#Tf=IW>s;#SLX=?%i$#I+3C4JCd@JS*%q:0R#!?55$B4Z">%O33T[QBYCXa*)i@[mL8Lm,3?G!0Kd8W*=eZFM0g7>o(,In5?=Wc92jampgAr9UTUp%d:s[jWr+BD4er0O<!W%OYl49r9U_c34n$S5.aQhSDD:X3'FiX:d;PD"eKn5T<q.BZpn4YQe>Aue7Kr(L?I,)%[",gNWo$SOZI+`cMPe$d&H#P)qhJ?pLS\7%/EID$n;(^"6['pO2dh"-?MZ=`L\F[-OaaM$TcraZj`RmmZpI7qQ'?sLcHlpIWh-HegDYVU@XA)aQb(ik5R78dAp\2hE$F$XjL*<s%D%Ea&-%`R\-I43Gk-bNm*C\O;6`;T*m@g5BM)-ZEMh!Lr;KU:o@^_&FRI*:DGA46!OnNf6N=Wha_3lT693$"#Df8MTB(+FJ!)1YV%n^TXBG$Tsl6.XP<)9hds1[^-qfH,R1ZtZrR=ZcApRI)/+ZouJ`:$E6j-]P/gbtJX7!c5tnH4U]^2EdjE3"IG:?tSC!W#a?nm%*9>%9b4A9)qI^ofW+c\V4/N:o6SrkWq6msl/@6IEj)[,Z*uDM!85QGoH=*Lk!'F+")+ub$8XgFZ"J>qH2pF<Mi>;OmXSRB(b)4abj$<T%Uh6Y0&6!GrlL97q?OqoS=WL\JpD;g-d["sZ>Q@4:cFf=&F+/HZY"9I%$)JQUonBo/`3g5Fb7\WIncl^!64&LCkX)j0hJdF*#cdl%%Bmc1n$eA4&HQfQ.!F=E5Wd]@>/q>c>LH#Io$tlQQ]atto`It_Qe[d+#q1Z?N%j;&*B([9kOD;PE&-q.m66%V?lO.\tm!a-rJ4L_<%0pa9?&nMRHQSp=MUAR?p?,VR7V%b1P;1&<)\@iR-C,1:FZTUue7T/g+)qj]:r4lbK]VUuB5-^P'o=2LJ(Nd]lgm@I%YadWUVB&N:%f?Q$)P)l(*$Gm8KbhEGljYqNfP8Js`IfR:$e[g#.M>7G$Nr^3Z8RZi-4HV%`3mu9:ahahFgT7,sHrN4EM[bs4i:HA/W6ie=\"(>S%iC),`LiF'?--h]uQRC7=MCFTYppql_L#W2oIu"3^MM:)1YCMM=8&S#PA(Aadq4<5Rd'%QIRII<O/ZIWYj?^8rNRF$+Q?ZTc?TM+2%MC4I<qr*J[jT1[WRUgubG-R\`*oIbND`kfcbZo=AQbDT(#FJ%C^lHA7?6K^0!VZN`A3*_\EMkl6jh>i?LZPlFN&U"c_m.:?o:UkW%akX!)@h_@Idq#\,.,l]V2+CH!i7!d#>kBOdbQFPic/L4uPNpPIgLpFm=^r4%!CWcPLoY3[DpJ/[-e[d6ZFC5Am+^ML>!EWe6!OR)%QDQ]7\GU3(pk2dTKsWYL&>BG/h5cK&>_S9HHXm6H>`d2a-f'*l,hKCdV[$)r2cJW"@U''J%3K(b7;F,#+__NZnJ@f?ppJ\J8;Mt"%,`H.HZ;FR226SKkmSOG!LP,_AGnsF(42N9hM5ua"T3_o8qfnZW>$M68kq3qNW,I(">n.s,l0`8D*g"M:BFIa"J=$kaU+-e=(,KAC%Ml2jlWZq*PnhZ-.+GV)oU*\7?(fPG-me.C5p+</98LTc+?s65-B&#dmFuMaR(!gY8k_Q3_5NEoIfO#[ud?YO5b'!g+rYFi=had^s%Y44EM4OW]-CVX`P!CUhW=:ARJgVc]Mm;Bh/X@Dl9`G_U"K"88<Y(<[&D9_Gd8/'lT`c/Q0A1Y@I237mB#Me\bPM$FSf7;VV7na*c%mcG?fZNekC]:Ap\CJ:&iEO,k2AbAl"ccq982$.j*`q7o42f#(h`Fd[c2eu)_E1pEEVJ7JnYe^%WOl@`pZ<eH9*FB8*']/3qiqL4-%<+*^'i0\ZsGk>;2;S0qZAms=L!XlUEIRsQG$lf"j+h^+:1&tf6KLehYE5P-R`+8uY2qssAQEJY@9Wm&+Q9PRH]>dH]\>m&k+rRP-%W*LX0Y\RcCf6d$+FM#P%;GPk%eeS9IC=ePk7@[;6>lur>l6Y'lO9ouGf"fp#(g(Vo;XNF>rQoC#P?3t&2GV17>g9_IG,SaY#<gg"%OPoG`eoW.9B2HHV&&:k=/u\Y/(eL0OVd02D-LsfXKqoCWh]ZPlijo;_T`2e%2F9tY0iV^T0@_'Q.d9?Z+l3'RZ+t0i]_R)/)4MdH%e&,9Ypl("u%ZVAR^g#e,NAhAl&/B9B@oM]6gm3n&;>`dp7I/2^Lk5iJDd>iA<tpf7&&2Pr&J[P^*P`Bk,'hDN>e+68<'^B+L=i+D%LoLl?G&]8QPThL?3I%KpIT%hC/"3I:OqPAVY!/&>idrCH-B\Sq=:Drtq8oMTSpaA_kS/$6gF^h4IE>e+b@oU+hf_d9iJi8WQ[!?%%%X2<CCPq#tlX[Q'#pY4lhmsD:q01@@+V.]CQgnT^(aXkmN[HCVp)PC<lMGIJ;Wh84hqT`^&--d/g,o@D<HC6AI9WRifs(Zf;ed[=%+l!\:1G04J3N%]$JtE0Cc?4_Vk=ck"Yckb_*i?`6%Tfpfcs[+*F*AqYBT/m!2+!jO!\lZ$4p,W@-]*8JR3Y3UhbH%qjLT*O\cO8B%_Jd\nDA\2^98WoU&.^AYU$GN.7lJG3;&s^7=<Mn12-akD9=3d(,5M\5&k"b7$,VZX`H"$2_NH^%5sEt&#h7Q8r;QH)[ZfL8mBJnn%Gc=XIP4kncS,p(:=^lkp/kHd*h!'hV\LlV&I4^G,7DYhFgeV9@YuH]M.+C*@8UEG>nbpM+;g-dPSFIIH-)aVtqGRjm4h6b>(S7j*%0;f>[o:gs9+0kIm42oO5-GXPUkJclHMAE`!ElEoInn`b%DO<D%cMqR@"XCiV$>9ppq&a@Qfdnl3$<YBK6m2k6q+a=\-Gl34njGBc%9%+A(%3ZUAl)SD/n7I8*&A8@Xh6X^OIt\VulUV.5ibjF;D=WWJr`8Cr6sB"l?refNj&>g1VRKE;HaCXi&0R:Lbm[ELgdDR)^u3_+%Tnl1D+YsPKP8LP!E?3G`&q1T<*L6i=ffNuTTB'n8o43VDL82N<XL:,-OF[*kMIs0.4sd:F-#p;f&`VHmP#&E0(bh\P&5Hu*5"#k4%/8MS0c<X6a7B;eh1m%^=;kgH'p_V3LM2%*_]bI"\Uk_^Kc_>,7kLX"+Rle$XD=i6@1S%AeZ65ooR`RlNC,D*eFm,.>lYs1s#,PRa%.,%eW[Cfb(^9iG\X4OD7BS"F.1s2I;dF8b6;0?Wo=2h0k6q`<W*^32c@aQAcQ"8-WLT,Tm>k5(;k-+qI^=U8i59;Np8(r1!+)rK5%SN,frjIR:(i#!"?Qn]T%^f:H.S7CKLd.d)u?$,ajW8n/c!(4j3&Tb5VcELT<&0S<8%2ShDpZ4/K"HN-(o]t<hd5O_,#?(NYMnTKc%P=Q^>acQ2lO0<^7INj9Yh'b/[2gN8>2WK7RrjGrq"X'6p+OutTQ'%e1FT!47REgkKC&d[Io=^N6&p82u\mI54HQ]`mK^EN];QT2m%0r"g^2:R9+l12Di!aMVfH/602_.M5VJaCAuPrYD!X/X+,K.Sm*#7EVYX_C>R'C4W"-R.mZ^RLOoKLM;L:8V/N:IP12+c#@6qE&/,%+&+9+Oa!g1n%p0RK"gSNjj-pa38*8:rJ7b?_.mAhrd@p=5sDH-BCc8WeF=^j+=;'3's+-GY$q6>=B=^9,d)[R.1;e)igaNQk@#$R%fkh2I='g:n$l^]FCSGl\D<hTe75PfsEs"L;dOTX4h[Eb/)E/n<=j8&:d,F`:OJL?5"5Ru5TjL?Hd+4W<L^@-Pgb!)1i[oFeaEH$l%lW4AS8:4S>Kblg:f90PFI@qEQ(>\U/LM-D'7"7eKM/.2tFK^IPBO%l1g!C[?/+%ct8Bf)iduj(#Zs(NrOD<h3oSjDILI?CiP@=j1%8'uAI@%`^:/4]3ABo0=heZeU47M>cc8h>o75I9n]EgKf%AoggI_X%n5<:\IED)WWF6?*Z7qBORVkC2LL5%.0HMIM@EUbS@t@U7TB%"JV$--8=XGW2jmDBIY,O`7Yprnc5qOQFcMD"'q1#H+@$:Z19lK^G/2:X?&TtpookUfG0s.me<:CnHAgPrh@0CkOW2+(#<Pb2t`oM%Y9/Q]#sJ,(TjPE;jipT._]^M5GSIK-Ih>@,+_#f)U82A,UjKUl`BS7$(;E$6;Nq)8koZL%.G0#AbDm!A=CIO!H.as]e'*6c^8c@Z%I<eAq*cmKl\;J4U3J*kTX#qD0/W]PqQ9*7aU(p1Bn?cp9P1+LsqLC`N%YS="a<r)Knk"`,dS)]!1#5TLXN5hGgt7eh`?#Kf+tZFN%NC-$g,T7J_%/7J/-/>f:]+'Q3mlB0Qd945'=sSJ<0ks$][P8]#As]aINaaY$"[.Wrb;dTt:5GVV$YkLb""TOO*t:.0ZCUtp]6)Tu%L7D2kRYBc`_$"5:3oU7&<d\qhUGRNIL6LurEZO!Plh.K4G(o@tp`%AQoq*bhWs;?<p5uUI"cn`BgF"QNp)To.Fs!3e&<`DL?hOaF%[q;75!M8&T1YFE>H(SCkSO[+7TlM1j,-e`cn_gYq*_pmFNj'03#Mf\61Z7a8b8?g/a,`?fcJ'3BLV0pjZ.m_6,\cW=YW^)<KOYD2%-Qj>u8RcTmP>2^fgM,f-]WE-@7Joe4Mr?>EE0lSjTAnlp*j,pJh*-ppfCFb89_S'V'1`P#OIs7#a:B]2Mc8sfnXPeXnq'uh?l4=f%)l!<H[a4C@(hos*q(C;51\Ac)R)MQJ7jKuC+nA8a7%W\WA^9Tu"a>.$@nlAApNfrdCT-S`L2Ei1I`LC7Z-C_-HYbcdHh9143@=WC%?T*BLOF*<bX>M/m!]Iu\ik;2Ke9M8ca:4_,4-Vq5Hu`j^DJifU0,)WcR!tBJo+X>c[/>&4;GAEk7Yp+!FuVqW/5;q('XR1;a+E)J%/P[u!-(SAcRZ!0bM03faf2oEj2js$qgN#(&caRd7*-=Gp#biK6?0s26>\5)Kk^%h):G.ti:@@VA3I\oJ3k!N06.tIZl$9(Z.=C27%6t._SO`.KJni#kco09-#k1N:cV7<_\lX:6P@%*_O#i/1W=\j&(8$:\Ol([#;eR(P"-*'!#bO8JMr5jZ,A9CnaWU`B:6+]NCR^ce[%"JSQ$,"5:tBH^j>"N.[?l#Qp>LR)IA$^H?HFX;hQPu+?Z]-D)i7b$D^'^9e9<t+Nd?rCB9[ZOqi:%]qne2PpU;K'o]j;fJnKRcu]%V5-27(gUN5#LS]/'75Y:,Xn5A'(&>4>II@Gr#`r@c3[l.g,XltL:h<K]n0ePc(]cI'Lj$?<(,%"?3!se9Lr5(RfAo_Ce1rrSS4eN%72A$,l@R@`)a1g`VBjFBKXVf'!icL(oY>AV#2LoVp]D;2Zdu62*D(!P<Jk;lP'/<0++CTX',:Da1^6rDfd*'qo!WA<LS^f8;b`VI%LHj/n3qWqma$)8eCHUiOrp:AbIf#.2e/["?K5#Edd/+<,p)oB)DW2=,9g8%<Bpq.[__hC!*#Kl6QP$9l$!BVXT^49O@hQbe::cu:%`8H5]5_H!OVD6#CPStJ*ABMSO.c2mQA%7AeF9`GR$d@cV>-_jOD_[NQBSPBOf??)>bEeD5rJ/<JL*%T,;%V-8[#K(MNSA&0[2"\X%ifP&`WIk,d@hVBO1GM+Gd?5U#kV!E%M'BM0+3kR0e79PI=g3O.,GF*5`W>Z!I:;]Y>ti8]r2&Z9G=9ks,t>VjQH34^?fJhrMHnjA%O%$T4h<SK0ST0U#04XgN<4u.aS7<WYZb?#$alU'Ng!g=2)JEWqlZS"@s(Y`5g_6"MS=@6EpB1Z#M@hsZBa!nW%l9"`>Kp%frqpcZ%M+THi7&BSB/+H1boRHnI1?#K@^.f4IM,=6T;I$jJ1$sKA`QWo\b5n?B>3*A,CQpF\W$.rK4$n%rLA%)F$7*`d7aks).*;2RfeGHR%P"Z^"R0:NQ9M!?T\KD\&\ZclL#81MSbU+GNl<ug,hDgRlLN?1Q7p,&[X7dkR*q4p=Egh77&1'"1&gft+%II:]Db>)DXLjEB>H4*<%bPt>t2<:u>5LIJg8\ia&k$_13&[#^8hinDuZIiXo8<.5K0YVSt.p=\O/beG&>YsPA?;M\6g8W#<#,3E9UZa@Cd]&-"G07?@pLS]b%YN/t54="NMAqA=&/.\n[WK^Q2Hbf2Jhk51-0XD-'X($FekS7=S"gkqe9o;S6_'H]R/HjK;,BeaeBFX>fl18qK8Wt6;P3n2N"rHXC%"fq9\b$Jo)`3\6cMf:tEMg7U2+>L=?C]^?)*k$.WNUo\e7S'FHnd&J!Fk,?E_8Is2W8cYjYq("$b@Z$\]*&ot_54e(/V0]@'D%D(%/c"Xiro+?u/BEH==cgjXU/>A;'WUpC"Y[=Fin9#SR1P]%R0e1rfb$ffPo,o9>9[9_Iu3t><Ja-`jfpAGV0fnZ-=t#rnLGU,(D41H%OsZk56CBuq((Bkrje%R103/J,O=3kkY)<?.'1*h-!?>NS*pS5:,Qps9N9Nj*-o!(l=bni6D07WKbEZ3^k\hS<]B[BkMr[ckh'$46%bAF@d$S<S)A9C<dn0fGc__g_(NbO=[=Da+uLaIblS8F%#YI,71ECqL>*+NbW&#Ns?O(!r#4?a*KmFP/'qQKs_dL?G31:Nql#h0n(%IK;taWSh%6Wj]!_XA2.bIY?k.9Z"`FAm4CjMSfaf7Kee?=8'"i8EPO)@'P/IVCp>>Ku=2TgD,d5bj0FP;g3W+Bq8;b&GC.Z80n1.%mHhibL)i]bhPVAC2%4#+Z\].8(E:FJEfe$U1%"(B+I<$[<d^/gX$,T&optheo5a$s0a^i<XTTL*Xr5)6Mq-Ouk_ebM%3?P`J.#,j%dYr\/,I?S_OXs7$>]77F_sUj)lZ%A:*:Y,P"Q@V1mA:1Mp*3XoJooCsK'KN]`fda)r8jQ1$9G2t]M_]?0os13C844&jSIRmXkA>P%c>1I;h%oI#</0<B3C74![Sr+4G.(5eUp%(e/gf)@7%$OF.D]TPJnBh7R%X):L#59k*i,!Go15IGaJ4/SEr[r!^jPq):^tmcp6Omh%C#WAZfs)Ii21(5e_S8VeCIA:;@Kat":[aY[!nSC6F(qR6"*oER/^?\20H*Zk%j[.&fOhCKCo;NRPP%rBXmHf7KQY\$%jtM;(RCJU%du]@k8fq1I:239#F`Lh1bS0VN]MFV_+Dk#3I.1slVT1_i'1cRla\FM@iGGi+%h"aKJlJD`1P=M*'.[?Vlm$"=UFe\#DkF9+gNW"Y%*3&"f(^2I&o>2oee<Gg7g\&7t]YP2dZXlUG!k:n`SCl_5?Q$.JF4(i4LaS?ld\/NZia=jI4T$0q@M-Lu!7Fr\`Z.E?_c!4,DpV_.%Kggqf,t66%5R]0I'QR^nq;ech1kVUGB:3:O*SsgI.n0@PB+\d/8"Y.^Rfgua?$O;<@!gSdM!%&4MB@HAn$6;F6m-3j`;IEU*M,jg%/"Knm_m<(+H2_;>K1U/6^Q:X2fiL9,LADUj:1d%p1jWDo"G1ngAeG6p-?Y+ad[P4tWZ>Y'lbioR2L8jVm`Y9L=@0#Sb:G<sZ?j82%!PeI=l>ujF`Il(haWbmjH0<bS_QErj^$S:C$L`.a,786bRH5/E(QLqj^_1q?9r<);1sN&?L_rfo[7Ch-/h=g:e4LTmAVVV&jcpiR%Q]9n4jrj-PWaJ&M%r+.V8H1:BkfXKOq8_Bi%5\O.P2/unLGBaU4J>_r$^4.-]5q(P8E(7fZX7;5RTK`pq#r'E?%?l\9[b(]g5LPS%bu/p:I5IL_=lZgYE**+&eADuL"&,9R-_b[88!YIu+sXOV!UZ2ULPD$DH$HLt3!#.F1p?D&?lPM\CoV>@Sm`ZYmF,q<$".g0'D.E[%i`-.K9uttoX/<CVDJG=P&ECV5"YGU."^QS%]XB!Hl"%B6!u#.oXV,7$DJ=J?rjEpl'J_]`Z-"ggPF/CilFX1S^32q%bDW]9J8T84%R`%^XPHB1+Yf/GUE=#@#jmdDl,W+,rRd'(edn-MSU[W$)Yn?;j$ti$?rMA]Ui^AWC&hhG.4ek)Wl'`rq,hT:;_.VPW/8^bdRTUQ3%o^22a9(CQ)UecY2&ToR]-F+!InuGUI[\g`M$:M4""0%keGJQ*\$C\3f'cii\_C/a%N.WZgKjpm_a)XIKWu8VBi7A'<rk\F][!=52%(-8't5B?][8=-Fr<.Fj#QE7j`0>C;4ebPgQM"!j(B-PCA'T&[[EBIMqn""F.=X)J9/1ej6#KcoN9d#p@[>&Lk=?8?@BY)n1R%jH^%V)o[sd$U(HGai!`<l2m2A_9L3,!TM(!M&$uAKT=B;JA+5L"_T79Ctaa95J.%9I(&uYS:QD%E0#aDg<C`U6obp3>U\iCfuJ"Iq`XK%;AE67@ZCa8\6@1M.t<5A:"U3;FjljXEQ8BdT>bPs5TLT2H'5?GHicmWG&6r+heWUcNWr+$J&CQGfdqb(0j!V^.+p9j+#OS`&`!Y+%qi7kkfuMcB\*G/Z#+\^em3E#,C5RsDZAIYe9$F2`/TI63?^aY$`@31n>a;e+HTeIn4i[_Y&j'dLE?Y%<Z*"l4O8R`[/H,8_Hd?]R%XM[t*@]+N58aL%b3ltU_;cD[\Gkt#n4%.LtF"GV1\&>',h<"7p7.JWfE+]Ou?*Fg^(5YgDBIFe(P`smdkG=7[:L+9aM55+pQK$,q%+jQ2DQDW%Yi`nRe>`Q9^HV8>"N5JR_@Z+DJ8aKp436?O'o2=R9Gj\1oRR#<"*TIH:90B';0:cZ%b0N/k-;00F%*%7o,4Uq2PHZ3+%3Os)X92%pib`Z$?^N1Z=<FY$[hGWiEmk8`j-RsAK'-=2p?b=q-HJVS*VO:Af=dE#a'7EWZe.pA:rnS7M^]!(C_Ubp=WK^4U%9fcI%')P4%C(t_8rk:nHl;M&=qh,,?$c8O?o\8Z_bS.Fl.*'C*clSl&S<6X06@P+QM>aqQdmQ5bdmWl\%qA2*l/g)Q)gtbKL^=SqMEW9)%81u+;,_:"&3CuJr33_DWPK:%MCa%jhZ7cQCKP#ILZlp,%]68tPEY5aW7-uSSY*JM4!tmUV7pZdW(114W=#=G2@C\=X)[i)sZn1DN%KS(LkUgQ,uLpQ0UV5\Qo@_SDs=HiX)]g\TZUZ@YT\VuA"jpQuWF*hF7>"i)N@d=8=Q6@X\3/kmu#kdXCA-7R`7'_Le[=N,YAoB-U%>%s,AkcQ!5^&+c>+#T,2O]TJnV6;Gu/%&pX@&Z3u)C%fp=%8ndLi)Dg8'Y^+2s`'>+=Z;4PA78>gPWZc<q5Th!VO[K2NJ3MO,VVZ%@r8u/_KsM>^16V<QHV/?FV4N"]Gn,0blMk<k3=3`7mWXnl*0C/Blb.G6XK/gg\+8nq</_CEP.iEEW?RunHjDAUp&"?&M:QV,Br>M%OeBgE-p`#!*#YFp`OT\MS/uj?k)_uNU.I>ribcZk4=ut&\CVquVgC=2&$,FLmrS5b`+a0D8t6_BC"S+*kcl-mSCU[[?W+ct:5[-u%@R5WNR,9)OEn<c;V!a;fRERl.ge0dY_;>+YfV4*'L\*KVLMAc9cT3MkNK)XoK_nZ\*gSH*+,C>[IuoRU"3u)B08Y*fm-sa$kQ6"K%bQR_R&MLr,:=69Q6%Z',_?pGIl$N.E;pcrrX.)R.8Z]!9&g6M^%7J_Fg1pW,XKOm*="`e\'meU)W$>dqZHjfYW9RM"CMj,>&g/`%%WTp2.Eh4>'<2:;p:g\s!J?=tCYIYIKSm)e[CWVn[#!1pefp8#"bJbfGU08;q>DW>6@GBQ/"CLLmJ\#F&f4C;B=l11[Ra![#8(@'>%GpVS!]21""^o4t@X=EM2g6K]9h7i"`W?suH8="UZ"PInYaXkIjD#ks>+MP,-69fF2:C)NJ\Vg_BpqgKKa;8nU9OCmVX^mk4>Jl!(%^(f><F+>%jBUp_.`KhoU=tDKB]eo1B#,Zo&@G>Gk7d?r:h]@_ZGMS!?QMEg?EjD:\Rj!,YU>^?S_-MFLmO.nl&c6"FqZ6eFPKK#]%<&jRr=-/#U;36CpY91cI'r:chT=*LA^,'?T/Dq#c87#%OQK^/68dA8d_POrZGV('taVR'kUG=up&aB_.*d+NbTbc@LG1UK[`fql6%$q;gDk\`80Zug7=j]Ilj4FO''o$ibidrTGFEt=_p/g#0?&u,iYk9*r3N%L7Mnl-Mr1#G__QfPSkDl3D1Rlo6H\nBJT0t3>+f9QeX%VY$UV@EEI!+tTeA9_+i]!j*-!7SKmRf!`$:RV+[-Ds%OendpQQK%KBPBj7RVRr1a@X'(gsD<C<^`[p2M)7-+$^>.E`'Y-XrW"(*?%<FS,oCl,L:r]$+;M6fp^\KGh6p3Ki`]@@ri&ltX+p;B-M<['\r^O<uIDr7gDX*nFqDYrQ+Fn9io@Q1%ESaMeeSd%-nVZT:3D),Q`%1b!4=Kg)Bij^[XFnZ7plZ3(Rh0b#piViT=u*po=<4a6&>p)qI/nj.FA0t>#H$DO@c#CuH4B$r-fF?@a]+SS<O1YQK-iR[JMTk5C-%:$b@Af][3dO2Knqpc'sYU]D/#_oJ'f5hT@&`_I/m3iR:G&8PEH]!`Hiq2O.KUD^P6?eCRqfb5#T>C9n%7++gV7],E%"_76)K)%H%%_4[@c=HNEc]cNL1]d/l17Bj1C;k#m/KG``S0Fen]7?I]!4;tGnG1-;j>n=E]KU=rn&C6LFXBB,/BW:jZAUcRHL.IOkE;2H@bsTV#%V3>[j@Ag<+`g0"[\6SL9=enoh$$YsMcqPdF/n$XCCl.c%rmGVG.%bP.buM<X*=jiUAAl.5m2^s8)7-ek59b+PQrXE4Q\Xoi=8\.[%-,=&5i22=E,lo[[iQ+tU7s-?b<+?Ki2nkDN6/bQI("Ai*3ijh_8QIf#<;@e_%*7#-k0t"r48glMfh]<Hp+<];m]!poqdpf$%eS92%U_K7;Lg2Tk!Gd-`[C;ieV?<0-no'g35J1\:m8PES?;b']9K`dtbH%&P&m-A`BB2:[fgIGMaUFmQh8`O;?"U=[PJP:]'jY-R!+mP[%M[0`WaDF>2#d]6mWW%l?UQ@HNP=Itmh"P?43cafTC?FL5j$XNh-ap+2TPNpc`@)K7.U"ba1ZLF;2OTlCn,U/?&hUTW_@eFEna_t1%`B_)QS?_-BbseL;$W2\7)GW7H\ig8mIct)K#P#"fj]r7PPokEKZ,1Njj^(N[>`4E'^U/Gl5r*+!6E/GWZ#GZ\M)<i^e:"df]iKeK%JO:_]r,?G!Ff?*qP4_j+!`.:l2eWYcYHG8WJ5B`#9ujYB"Ft9i#U7r'a048Sk3]\M/G2FBgIbJ1eI+mI",X8d2QjG3@ZK*qr9@H9%,0_u:??[cm,B'/7H#r1Q/&EJ+`W5@3TLJXn>&U5]5a\!>bmV!_%EJHC__n7H8k!.AWi&-c:WH\=LpH_YW<aW`lI17maf`5MarP!>%P.T%<IrquY.QZQ[Gp$gr'(ZusQ@+^e^\(VWK%'+?F$]5Pp3L)d2cng,HrPu"YFIo3;7H$ia`_gB4_!s12sA(PQ^@q>?eh1>*97$@%#?oj@k$s<JTM@Hf'DjS&/OO9OW7jQE<ED7RVq)1EK2#7)#ck63V+_p(Fi@GM&+bP>1eXCe[76&;IO!6k`4uG4n2+q%-RZKp.J:hS%njs=sfA-Q)`[(Ih&sI9a(\a`;`40U-BpLY8rG(-eFM74#"HnL5X@@UDCWVX5pNGW_&F-%NiMMZr$m:9ECr3klr.p@f2It+>b`ghu%(7`QqE5C<L8=S,&<%uOb+VV8d<\=b'j9.DBJn$*EX7^dG^uV9FjgDKjZgLgDJ]:IKK+Nj#UMc@37/Ta&_$Uoa+Nmq$qOrCdYg3P&%p\><t0R#i8<?6BWllu/`QIZ]5=PlO>f+2@__V=1q5F]f%bBuro-g&P2[>[a.49")(&<liq9#%4.f>?Gn,5&!`.XNc/P0/5kL6*.X%YPjd0%V0dmJJ#Q*&BJ9s*aldRnFW!B.Rm(&>b695%.p46Zd_Qf!&:^n;H/u?eA#b-hU4NLVK#=A:TJJBZaWnWr/2u_OigFTWT-6a%.Q_shVm6EJWU(JH23n+qAn$O1CoO!(P0/g"n#>YU(U5KQjC@"DfnmA/b+:f&m.&ScA=2Po49n%5Yr)+rR6]K%%^fLj]2+K31u;-`%A!3BhY/B"']cIsY0"HOP#t.=Y)mPH_D/X.ScWL&248/)/aGduQnZat-?I.Hn7fC!=h=R<LK"2-7@3LfB(U6:mcPei2=L@Mi,V9p+%W?S@)]gY&H%5-:eRH)adC9WbBbc%01Ek?f4jLtZC*'ao`YS>c%%J=M*6(URZ1ml[n'[N7]jIK0/IrRs:`q\2[B!77Ylpgrde(sZb%B>L,@EEWE86RLsY0&#ij)83ui-:r[+8N$;Da-N*H>N=`o\(F2DDUlMk-F<Xural([`8cZLX\,Z`@_9$)]ScEm:M%m0,ILhAN]"AN%h!8B+^Z/`1:al#iHe:YkQZUG]6i^='937;_p?llEU-B-3@TA&<RWFI_l-p"O0jIG66oL=sfoEg<(qo="+0M.`7@Via%\e4s3OEmK%/]&i_29f_F/M3SM4Qfr)(b9#I^q>Pg*54ga6CMP9)oCR?),?;?RU7C^Wl[(lp[mju'tLMPSDWbJ<rM+&-U&:ICc9OJmeTfXC=>_M%VY.rZe6Aq:0R8'QY;rOPf(GTm$f]:DJQ\NE&^mT!&Xl`/!i?9eSp]nP>JMdY\SLD4g>a/sg>`qiQbHXPU1PZ4l][=-5F?\NSMMTS%2a*WTP+<'H3SBhQi@fSG+D);KZ&4n$Pc+<IPZnI#=I&,`_3WC%!.%.8mQC%;L_0#.Np&"!k8k7g[aF=99%?N^B0(+QW\jq=4#W1+%.kDp6E#^2Q=m+$4.>`""$4dfAGLb9B)C#pUojpdT(Io=^s7B=kC:gk%ZuX-^[i0J!:fM?Y#JbC_mit%/?G4T6hMF`UcQTkaD!Hqn%?*]4TF'Xb%@IqO4AM_N!`9/HZcde@4B)X`k`>8c\]27:QpoY>TJ66dK#`36`H#a?J5$'Dp9JppiB"6Mtn1/oLSCD3h@Nm`2):RnM%5_DfgCP7J8*K;$\CZGmso-_A=:sqq5JVQVU=.C=MW/#]9hL(V\&f8Ea^9?,R@0Mi"keI$,$\RdC?QRGn5ACQnO=h<'B`%*#!j[M'%J,/7Z%&6=t!E[nY@gGf,a*KH&$>TTS3Pe<]"/A>^!PO*i6N`/bU%]5T_]bicD-(c_.cs6.6;Ls+c>\sB#`FbE7nSfBlKOuX<T_sC%<W:Ja%0K?9D$QjrO;M&,55JrkL82l%9@N)m`EYL\YoNL,HT*ZMkVu3ELq`:RW:X!?A/;3D&i.7I76SO$nSJf%W(;<!%i]*^d\r#i%;.mZ_g,q;q46oq!-efL7A=3HA)'ZOk)6i4m\]TH$m.$3Rok[)4s3q]V"/Nr=#:,[%g7o/2aJ0KB*:#%J+Go&&42"mS\&EYV/E!"S%Ts(CHi8t0_ZAATgQ&F8W$!FgA^`@bU0-i/94aj-!6'VhfFfFl.%8O5p*!<Yi`).\@[MH,2X:Wt2Fu*dlj6K+P+a:fPgFG=ri"`Dr%o+P'bfn_0VW@(jQS/`FW89#b,Y/!plUbu,TFTq=m3^oQS-^i0J[V5.'Ku>:9WH3Et1=$D'NB_9$g')^8BKP_4&jR?lZ2I^(+AO8q%9BXo@ne4cuaTQ'-k?D)?pklYq2ai?aZR%O;"RC*G6*N9lBr;Sb:<A739YJ'^Eh0(8b>*8_aaN8W&$),b$]q?gEJ*+*00HJ8#tl@3%cL/m)At"Hdab4oP0$st.ffd>K`WM$nVM@*J-6R_Zh>^Lf;UU`V2\qu4h07=T\/eI(TL?-fPO't-BOO'hAoWNJh&K%qrD#IinAi*O%/HKebh=SK8M/*/*q+%_n!(l\_M-tC-`E\hk/%[pB@Tk$`qF77H]Og5%JK1QO<"1l%ThWG0Wq3Nj.<Glq3`u>$)6CQn7*QgBghnG]%8aWHS?>XqoRCr9M4gQrCDl\6ACZ[Rglo!Ddj"%U:"IlX4r-<3JM)>L7#Jb,#o8Ee`#:Zn5SfWZQ5EtQ$?HoEf,jqhYXnJ9&FsRp&%93briY0'uN1EcCJpo9hChlRO(=/1t[e<`Fad0+2Bh[&WPcnri7H3?T"jTHZ!c1];9`%6tS%d*(PNB73YHA]llp7cGG=dFL#p<c92%!bqB?C]<N<)er[qOkhl$g!`[Bo]A1+V#\rfX+qqc@8g2i07BXAMl@_FJfsf`eqbFQ,mVVI?m>9L,)Z3KXVjloGEc^dM;^9Q\Qjpe%C:tZh0X9Jl#_\p@2FUe3<u2TiQ^?(S1bY.s2(A<Pm1p+f&rg'5EEAI8U\*HjHBeSN#b9u*l371t&DuOn/b>$4Pc.op="@!5"MZHj%/=YN:;E6NjF*KR]e<uRf8eh)WK5)SLo3U>:KnX8<MRHV]<2jC'-"2(BLo$]N6o9Vu*a<iSjV/2FTsn.b3//lC4/!Xg4?XOF@u*kE%D?U[?.kdM5/X_mjdN>doa%S=4Y<bsiM59BU/8pZI;&[cJ:"IA&"?p>#7D";g*t>[,.]%]r(S,^8,@Oo`)42^Y$\isp5ciD?Q`7(c%J4;"">g9R7P*\(P;sm/TMCCD_#n1/!$(?*+"+V0$73<J?cp5KAJW:OKoN/K:b?i_t;bK=O>EdT>4cn>rW2X+;f.ih5/MS'V>f&0m%dn?gl6@`4PWgUMN.?CO2pc7t2/kECj.-eJuW"@n;lSX$\;h>D7.%br^cV##ENA]+X8RM[G\e&X+Ru`AC<IOap+'%\r)Nq,$-ipIC%\>pt$/)+IFf\5FL/R:kllGroE>)lRCTHI1nii>+Gnb6!tMjWZ^Vo<,\6%H,E5@0?JG1iPWgR'p9ouBq68r$FOYK_sk+po!;YH(+=%$QUFre`qL.Wgc9\Oechsb"[/8K_],."4%fj&CVj+l;h(@g?E>fNY+05oMR9M?Y3=k92N;>E_,TO(gH%dP&KCZGf579.*J_rSIQDF%[/)'XoYdPGXrtU;OK0T:pg?$O;6nb^V2?":7Y\mfp!kgQ8841_3tNo0@)$d,cA3-6/-c=4nW:LslfnUEM,$XI(j\DU/%*9pR9.R\%+nA5Ve$7+d)q8ggm);R_5@Wld-_9@Z("Iee13j-4f7lBm!qJcFp3hDl?AYh2_0AYj2L0Pm5J,E`p:nqa*G_IgF<Wha;QAE:jFU@o%&;QO3QJC5,LDH=D>&KT0HqV-/GKIl=oP5=u^>dX:?J"Qie\<-Qhb"Vm,VrGe;BUr@LoL+^W*?ECE<:Q`8C"]d14$MWko92=7_2U)%#gD/o&`TWD1Qn9HM+!)RbQFmq=O#(o9V(+?Jh7M++Br0B!S,ub6samib4+C8HSm;,RJ%h+m`j1q&l$C(K5:e@fE/>bR$rr!-HS+/%b>apBPU>1d<QCh9)B)[P:QSgYQdn3:-BX&BQ[YgC4]#2(claV/S[5E#,)kG05PV'&-?,1kcNkft@THDlY/Y'R\7J]/A4->fd=U<,%r:`_QR%:5f?8\dLP1J%m],A"8IW^O#H=#6!d2VW(>L?@I+R(:o2`?#WQ[e%\\CL1r?7t43_9CY>/)jnHKc"CL8f"faaEgBCn$cg&%H8qpBmcA#;B,V:4nO33!Yq-R^U9$K#KJ4aj'1e5sDc@M,qC3-OC+`9hKZL>MXi3Kmbo*A\>u"GSpV!%BM"2[IDt6_tbCb4>0r-qa%eJ.K3@/!1g-k8RfLK'VZ6-$8j(r%nIO=e($fY_r#C%.p%NdYa+'9UH1(W6^4#1h"Dc7OOkR6Db6#q:1/A8+l3`(mT\SrK(1C!)$f%,ZufbEn6%Y%_KJT(.;dbDhT_jYAKaA.IC*LOmVU,kIr0(mG+^?enRa.#ckG7rfiZnYTBu2:`Au.q7_F;V*TC+>r2(X)?cjFPtQb&%_KBPHeO-Ln/.>u6j_7%f1++:D+X'R6V0j$:\Q?$c6q^P;)b=J?at'b[-uZfE,S&h08c!N;%]c@ce%H4cit4rDTK`f5eV5o-K\Y@f%/2^#MWn)m+ra<e^e)u6$_apm$F*0ZJ]fL8cQW`nW_Q'rCq>lckrnd:;3)H"7:$=8u,fL*-Fi7Gdk,i"3Q(pLah$cZThR_#&iNu`7%BWE-78/<Kl]1gAe-RU<#5%<cc/kT`WkS%5m)No:X+\Bhg'/1Da56<3%2X?3qPGkqnk!?J2Shm2)kRdR!(^/hDU;X4+WabF++DS"1%Hu#GC(,n3eDS"k=1?BZ)h^\(6lLhC'<-I%sqNm)afGIud9Gs./DskdE'jFl=p]8RQ'l3aOR:]K@9Z.u\DBmg?XIB+927-"l;b17g%Xo<Vpo$ql<-:FGg[@\n6#k`'+LtQ]"gM<dh6>cgLN<pBhA[dF_r^^aE/,Dbm&5F#&`-sGV_]eKfpr(hBY<75f?)D`-A%\/Qr.Lp(%Ed=:]Zlng>\=q#.Vps#`4^o6\pKj#)5:rO"XtZui4Ygs*kI9U#Qf1?DQV-X`_Yq+QpUc4m1J@K5WXBa9Ps=p6JYDpM(@UG9]%"Bt%62)qPm,`jm@a:c;m*2U`b[0#VM0(9H5a'^\JqfK&.&?au*76d/OKeABcVh.2F.)ps)%Waq8f?ab[A,\7Qqq$e7Fjq$M[7e)6#*^3%XclL787^KL3ir#Z34T<9-R,if)RCSJ=8\V;2</o3P(h4fqK!6"W,aVPF?>RcPaFP#fF[b;PZ21;F7>kT&iI9aKMB>HRfYCL$B5!;%'H$k@[D\n5rRm\G;79(BqmpOG[rq>YQ+GYt,AX6?qhptbgr#/""9OGPqR;2dj..fb6<@+!&VrVJF!?hfG)>2^U`,Ii+3PafY5/Kt%s8>R&b-B1*OLDchf]9^6&PKl]0)^T+IDtOCgF'(5Snk\q@Hk7V3YsI%D@b,U#"1m_A@ef:B@l=HOiQh^mnI&e(kLp0>X<jr3=pOH%qt72=+-0O8l;(HS)JZkKM1&p9M%(n.d3Fm).JML!Z&>1j07"a=\B+,a!$7bMpH5)qc?-h;JVY;:O=EaI?1XIVgB3L5p%#*`'fE_p%N\B.\!U>-Q(O;>&XJ'gV"4Q$.^Z'gs!O=.7Qou)rB@pcNGNFRGAU))?Dn2rF=B^T+bY/O`[&Ys3fba/]:<_-"B#":hBFg\(m`A*T%`);N*Wcl]jlK-mZ1M4kXa1h!\m$!4g==/GLH9:2qH,S-LFepnRS):L'r'2M-L:_rm04r'q+an!e)gf%\"pm;3a6)c]$2*t:`"&Z2%#NhFE496h(!A-D8qkc(uq$?>V(,h$pY]"7fj2>aB]8>c.luE4[:@PQQ*jGQH0(0I>(??M5FkS]Z[lNp$]uBF!*'Ia(gQ.-`T!>?P%0:-j+)dfT]*nYA<]9:uGY`\:$W'n;#D"j-V`nB]+`OAp)^JW@L_!WWd$#(VgrM7=/1p<jBUHTkm_l\C'7\eKEK@7h4Q`YdWl[(Jl%a-+t+rDKbHdBZpRV#+?/-*d:QN?oJ@A/N%SM<pQ)&/Z,(,706*hH;=Xqg>%rq&XRNmeRe:5:Jh3AW%XmYkY&Ubi/k<c"uo;:Q5^U%(AZ[drgq5]pj88[4+R=<-O[E5[GOB*<-t6"76ko9-<H4Q1AAm7*+A2l.edknp<D5;CU7<*I8[%nm44-D6Gd/.2-*r\:aVC-;*qfK%99Y`oB[Bg')p?95X;pBDAE@aSIH1t6jPhk/+"N?"gkY\a?]Yd/8$64DI2qgu,F6Q%cGGTPlR0+t:.Oa`;5?k4>,Rec+iS6a2lnE%%Q_-05MCtO;k^?^>C8;9k,6DCiP,3L?R?7>Hh/Xh[U?E;LHhhEC/TlX6pqW`H,Pa1QZ$54qJW`ljCjRSUc`%5;]"+8=qD&V.Y>)&%%`W_+aTp-iV4hE%RIj_i1^G$C0RW&dn(]pM.(,rMJQ39558iN%ZO1<dlJ5IUFMq><pA&Qs@U$J0D1.,J*3WRWB4jja3jsHYp\/\(0%L\)=ZLFmKY;h(<P;T7`?jgR+Zfc9Q\)K8fdJ(&n$K\T>1pV^?q"sQ@@e?jeNR`u:0P.;`a2</o3P3N"G2eW(YNo(:3/s07*6C[g!%;_+Hqae&!np3sD+'RA_$)&c,8C>M\>du\*R8720,Yp#aYgmcX]G.g=rkfZT3mRp'd\lo:%:"%Kh*"*l@TBSWF5g504JpjWA"&;"8%"d%U)(3BOA"6218K@:bt>q7aX0Ujq/=Rc'.>[gf1c!7Se21u-_R^9j=\2ofN%`C,@X&c2WF0\:erRPf[(X,3JJ4Uf?8$E9hmdc[5%]1*XE8$E!"4_Y:8dX(bZ^.';SdgT@Kosb"Fj!,'f@_90_CQ@tmck=1SHf=Y+4$F\sPCfj$PsuKh:Dp%NlrY$u>F3=PbO>Y2?b/(_%Z/l-uRm#k1/ZN-W_,:a-<`W?+B+lk.V,0+!A^M,ZCfPLK8@'5LJK65CL5sdo/!E5HWpQ&G/8>?MW0>(9UjhfVB+0e;A'f8+>;-8H%0;B\W02ldA?Ns*5>CpPc3t7,S`E(Q]0CIGlo/_Z@\RVLp^;^eDEShHRA9,=4gODd2F`VPPkceV@Qgc(>2;A:3-aV4f4uI^iWX(76%=:lE-1`97Uk_fmM/%ZA+2*Lt_="@":NtGpW(t7+sC'Hr"Y?Ggs$_+^_-Yt!*fOIH<1m&VXJp)A(=@;i(KKP;IcSMQnV78,/l[8qT%iiuN^n&\=-<KnkC]L6L1p;?@k.TTOL`lkV5j_kZ;nK!\E`Z!h%,PI)L$Y"h*"55<&O>ds@hoBnGWeKagfWuUAA#/`\63*2&pM7E#%e#ZMo[5&Wa.k=m*`(WMs,*\E3fAGi!818]:m<;UlI']oQC<o79Q2]LsTc>fGW3noO,>(OOdpTSXq@P3Z<k"Fj'Y@P\h8^mT>AS!O%#Tsm@2O%MlHCjE`RjecB(DV.J/aJEV_S<\K@>I8cO^PBU3:o5/5W5lBA0-[9ED*Ju>Hjr[Eb4^_hl2JPAOUN8=;t+h.e>9*BJYFi%X)R3g?:7M;B7^mPVPR(Vd$B:Oqp!=h,2IL</1:^c&.sXPUVbaM,qq2J7gb?)*e4lRU>UqFaQ="G*:@KAG)#g!`k&O[]HbSWK]L<X%qSpQ!(VW:OZJ;u*.0gNN7mFY2./$LsZF*e2[:0q-33,_P/a&6pTGtB9dEu%K,a<dmomKP%io\87q->G/9!/'&WQBc'(Jkq-HR=>L%NqWt=&N0DZOL89cMoFJP78M)6mk.9+bY.<k>qaX9@jPs<XZXdu:9jjN^NEK.GflVG,Dmfq9XF!>I-%f?#7bQjRb,_B56&+<W0ngZ%1B-iZ+7I02^?`tWTF/cp8%0*Rs+pR5:K$Ifs88?^%IU*A6a]<-E%TipI@^i\)3YPY">m5Sb=DEj',Ef\_Z$`7d&2oq2Z:9S4R^>c%]\3>RTE"`MTA"bnBPCr=H+jjcePIEim71Pf.E+rGr3t!#-c/b*%H4L=aOaX_fWfr:G@%_4FNJt2%SVI5f,YgjgpfVhINTRDh!D[C%JQ/TuUXbC/AUp<i%JiI2ke^Ea/=`0%+@kaTm)N@^i-4?lV>`c.F_G6^4P4Wd$K._+89]5G2N^b\.0d5Q]'oIFY4kPRLmWHROPqJD%h?cj(Y\AXP,;tHDJ+8YMqh,E(Iq&h/T"hPp0^GuuN1cH<#Vq_DI538<W(epR9S9568k#e_I0MG3Z9'B,FtK,r\rQi5f#rdl/b'Ef%AE^5*o3)s'p0FXXM9ngapnTL@:`VW0CA@,LY'Rd"1h-k%XL96-'rA[r!TgG7F-XEAp5uRAci2ZH/:RJSN8!W*HAN@C$uoQo>[)Tm%dV?L+,*k,@91^JV6UV?eXTsW;g3g;$c>,KF%DfjTHb4YacL'0ImC.?(n7\/fkiZZ]m<XrQBR.UHXk`d.6mjedN/QefQ15alH(O/E%ns9eCO1$(<a9GuCcIL%-Us=kebhu6V$*4$RpG")7?m8ku_UC,s5jI7CAISFVO;?[Ia?P'&r.i$X+Jb#@"eVPMa)W!e4G"SSrq6Xk%^O=.=CEV:3-a(8s]1q%HVj)0R-'Cm?aT+`<&@*J6eLJY/H^0/PJd-UD=N,TV]2Jn=I2p>n?mX/&c9I4B5lL:#Ha(^Xq!SL_h4"6j%`ZH='b*+Zo]3_eBem<O96qq>-oT&<kG8892V?uLa"!rc(J`(5F\3*+Q]\OaaV*N%$FO'0nN<H3d[ZsuX`$j7`Ug41cBR__FF8V3$%)Y4=!__qea,`6a`hk3Z>I3YeE\aRS4h4$>5fMP8k.;66c^dort=#A#B]HD.n[pd$-/G:K.Qqm]p,QOAGaXh0Ybm/DWQ%b4n^ePd/%8FqC$4YM[0/,htpGf>''a\r78ht1$"SW@@pBmDm-/0^0c5+4X4*qKt7bXZ%qHqU>`K];q$LC_bB;<QGMfJTcGR,ePZorIETY*7&N%h6hgcTrG`UimY-dd@+'R]X@Fl7n5DCUW1]uCq&*nn$kOHOj5<'r%doKq%\aQB;"\83JT?p6lqeZl%__(SRK/PQjC2pP;f?kN!8bL%]uTt-GuM6?M6TTNpl2POn3XOf..Qj4GVBoS9JLVpH=o27a/P2e_,V$l4Di63X.[IF.>b#h!pQO-V@j0&8jM/NLnWBerW)HoAOm=D%K[HQj1PB3/)c+:3d;,69%,m2T3>/N]-e5Y51-0ngmj:d+.Mn[#-)-FC&OI%Y.jZ2Z'T)'&)oEm780">=@KMVqYgtTEF-7Z8'0,Jc%c'&4NVYBDP5aT,;(1_:k]<?=lLF/2F8\oa&4b'eX#M>P__:1Io(8mf"X;S5TT-]Zq/?u^"/2?K'+qoeT5!Zqc:f+6!p^1Q=^%]HH%n/b7PrPDVi$`1&F=HLsOoRj%H:=6uTN6V'`NW0K6Wp]\!_Upj5Ks;$lS$q:?YombV?5UkF?+f#2LbP)#H=W[^5cT5XN,pi7'gD>(%#VSl/P+=9P<C8d:`C*`hc+C3qZ`8m`U%[hG`cGV^J5ua%W)ik32W4e:JCU;=c0!d$&H%R?'#-JObo6H/3HaLKS>`P8#Ip.EKkT`\%qMqAW6ckk9PZ']C3VIJ^AmN%IcEN[hV>A^E_He!CH[q,tPIG/V.<+QSAFBQ(M[L+2ciPr5?$Pg5h%t.:MIOH\0N2I'at\pV;eMhg%!]oA)Z5DJ`3'Q^hRNSMQXAc)i6eE:4kIVOu-gh^BMgF8XYD6C1HZ,U4_]]!ZOq>pgl>Lu65\,!T;HC9r9UMn9"J0]$9nM)-VSN2g%-0l;u5'lAk#d1=RK*iQ%;E$S&4apCLr-rFTD6UU*5ilK\=<1`Fd^=-s\#f'rYe!)OeHH^EY\OTq,K-,i5CA!5eLe7/J^mbfC-_aM%PkhEj(5i?grLn%%!X*<Tp1:=CCgFbYqaOVAf_agRLe`,mMfQa&7CkX=&PJ.\8eGphobh?ZEI),M$oQr!2ppr.>G^PWNc8teV^F,8%8kF88C8u<U,GogVfX@,f;LtdpNoC(;e`N*1:<m)9MVet<%]%cmQL4U:!0CeB%^gi:GU'?_WQaV>K=Z4P-1Ki5.q23dK(T%*oZ[I]%qCl4]Prt&M&H&VEQ=0QH![AY97_$IG3uIogV@!&?23U`W%?9!hP>CL=gYiRGZ^A`X_V/7YC9GU*eNA@1r<p'`(E)dAEs)K:TGW18%D'Z%IflC$S4mIE4+Jl8j##_Kms6%3\-/+<R!>De4,ILKMN_THq'X_n+Md6pCS*P-i>+'@KQSWIEJ\I*9lSg6_4'$62\$C"aZd!<G%5nXMB#koOr7+1"LE=1>2VhtAKaWskMj.om\jK`6uq[uA$XH(Y@=.]-aA@#VU(1roI]+"1^O[5l,*h\_:?#i/[[GLP/lu6S>OhqY(%TfcZ:pQO\*)#4pO-Lr3riKG4Q=&Eb<?os<jX5l]<i-A[VqI['3G$*6]Q4#?gG!"uX%g/n,q$LqGhrUnUM,7bQon9,0-&+bSrGu]Z%78[+3h*G>01ttFJdf#a#Q:6dqfqQL=p"qbi-5EF-V!OTug*H$l(_Gc+0#i$4GRt.:XQAY#hCfa&^9qnEV&%Y5V[VW#L!r`LU+AC4%,!l?6[FlH`jM1aE#ROsE@!@`5^S:5@QE%%XV7V%32+F<s@s"^W`)6e_hDRGTH*f@a<'<:K`Dmh9+qmrhePkr.1q)XE.&Im?=.CSF%`48S?EPb9]f7\h7=75acR_]honK1;PYPR^99jnMLgNljhJ9\1nmoY?R*Cj\2r#:/GhaN8_=]%\b\GXE)"oqRR-AUaGGKCcU8%Moe%CbX:KMk;.>f'[DPka_$@m46g_J;?$39j;Q*,MOe%HjRkJF[8.=(oohQiGAJc.:EM)>S+4$LV%Gae2D^=k;D!?B#!XjAJHL2b$*Do%`:ehWN5W>=Zs1s#n>"fSXn*K"-^8^=m1QqV06;eO"r/(R+(\p]cZDJ'ULcjYlW3m'0;peK/ml`S">`E&L<K/5b>/%;boWap$u<Hb%(J?J:1TMEI6^gT7KE$DCqBKeSR*np;<h:S']ro>gVAXo]9H\Olf1keLLWR`D85e@]m^jX9d=S@1HtkR;j=1%r:k!/>FXoeJ=Vli^%E61_<AS)cm33n]b,ZjdK6_7mOn9b)cp"ZCI&2gfWL,L:jeJP&UmpSng_#,FTXm8fZY+>Wn#MJ$A%g2fU`#'3>n\u#9j-,NO@G%sH%Y1#oB>\=@18qlaia+0](;N[0R*J.8D-8=ZPLD%-sDhDtA*_jB^(T>!:!;<"79nSi>;$lRZG1W81&8\Ik(n&"8-#X>`Qt)M5rWu1]%6ojUDIKr=tihqj!P\/#SS7IG8m`2\%e#afUO?-c%dhg0ga<I6D]\3W_),o_!*Dd>q).gX-qo7FFmu./7Ll%RE%S;9a_S+UlP0r!E%bCgPg]YtC'TPuOgR(&YGQRO1L=(;$n':++ENlg/HaJl+2LE^W;0,^Nn&""eU'27DujH-=Tf9u&BUnPCOF]9f8fhnYJNQl')"CfY)%B*8rPQ$^3KMdgfqi[[,NVB.Qqlj@4AbbsUoJX"&8<3[3%&.#[W&J#/#F?le)0f:h@_HUU6c9fqdP$IknZMfB8_8R-(;in`!BelAE%9d[_UoG3E8GO[>Pjj6=qC%2\@-GT,'mbB,Y9>kF0$h;@I^0cQs[5=?[@d@1..3W)8F`Zs(0'Tr-oB/Q&fAk@aBA_W=WReDq>$ufY%G*As][S%gt1.1AjAa+2u96=N-dVAKOC0#&^a%bD0"JFuIgm=JN-rc2NF9nh6TY#m.JRk'DB&)Ga4!]OTG?`!3L8qV8B$n2kTtR6L%.l!r9\?HCU+3N3Q6$<0[dT\[0KTOq-IgV"U.":pk-2p:dnL$5]GYDM]MrM3A=ShDH7_Kftg8OZgRV0j`E('4;Z5Qe<'h+J627L&K%Cl\.N@`#^6bD=-i<_^Fkp?gN(JV?!XIEdd0V!I(3&M1<W@1_B;=Ud4#=`;ie>Sk[odrn_VV=TFVHcNWekCJ>/*kuge4Bct!*$eK"%`D&I5'&2*'GV2?J66,G,&Qdt^lTC%&,*)X04,+gBC+c@kpHpQS:%GijQ'\*'o0>W+&'X-V1o+.RQd=uT=:?"m&T7!--5Fn4^5XbO%0(YEG%@HfGBja9uK$ruU3>*=cd4XuM<hmnbT#V=`nbd5G;`mQ^Mn87A49sGsM5b_06Fusm<'3ZMT6b`1SqH@4'[m,Vc@!1FGVreS%Y1pC#aDguje%u]r-)@?>r?@h+i4A^a<BSn*\WPro8UB+aMgYL^if?S\jR[7\IGrpP&Gar"4nQ:O-chi?(J(&X5j2Mdk73S@,437X%e,/QWT2,dQY-o7/S),Gc49l8q3fXjPr[p2H4UY#p$=&ZImnQ@Qs"HfqBF-q/n^1R#!.?p0EVrq+EU;!_Y6Y'p*MHsJOPPu[fE's-%Qtdb(SM"pPDMM02%VB+@G-B%G#fInnjG4s=C@CCrKfm,*N>LQ/gLbXV/.u5d2g1)j;;VkfE?$2o:-6Ca4)`m;otIc:lT.Wm>53tJ%`IpQ+L+D+3>q-NJ6(:`8ispl*MaJi26XiQl*?fWg]R/,6EfB28oY->QMF^O(+gA/qs&`ke=.'n*<Ju-b>UDq^dp\q#.MJS'D;DP'%09D9j!ctV+>&pl-q?sPfW,f.&./0bs`YTFYb^t<Z1Z`(cb\)aN1$^G-F(&<'k2M(k9IOF\rldgj+m$ip&E?p!Bc!?K`2E[9nGssJ%%se%3$+kUS'VjKSnn(_0>Z%kN[u_TC32PK:=n,`<mbR=nQ\Q/fkr5N__h"V+CiOMGkD5F/*fg4d*gYfr(@EXBE1\9p2I/\2=)#C!%*j!f\lBsaSM\kr'/=t&&=9Xa4;gJ.e)IMq<<)5(OQ7*ri0I<-8^beYV'!Wq[_Q[Yo:LkR1E&q;3')bT5cfh/JVG5:eaAil3!q-ZA%[?#Db"?QW]gSZ:k>rDMH@ilRm)Q*tERBc.:BcN[R5W"]>([\IH'aG5=O%3p7`N/RNUQ4Q:EkF;iqW[S7Pq;EM7Em^VGMIAIiB]h&%JV\Ue+CND\rZ(K3`NcTr_]qM:(mf#L_YdEWm?cE^HH%MKr3JL+^GcHMQiI#p:ia4Q4Ja$+KT\E/U#c&\mWXDL__*FRJuQ@t4LpEV%"sundaM!]0WXjr,4Z&d!hR$U\%3csJ-aL4p9$2sE-/hSp3j4(t-i,@2jOGFPRC]NCTa*.>6426;TtP_X8?kcLc2"QUi2usKh8oIp%NbE<d#*d).`p\IL6kp9lN!1N@oN09=rD)Qep):*7+g1!1,RYe>#]Q3'a?scWmaq?#qqFumKjT75HgS*U`1VT6e]:pB_KNV.'N7l)%m%T!O^p^+j#"_+l+52m2V<SJgNPCj/;Y"N;[)fO%_o>plM4eoX=)pn)Cj]gj'bE+q,4L)>#ZXR=Hq?)D**Q__GQe3i=>g0%i<3!L%9%%',Zqs0r^e+3jpF)!H?ngbcDKGSr;f*>SQ'\606ri4tE,N7',kWDq\?)H6+'382$cOFs"sd_f.1t'K+t!KArMCVL=Cm4VGX7VF%([?d%6Y$q#]g".F<^=SDj+&2&Z198_I9&cp4`TeLa3Ukn4)lIKi#-SaF>?]+a*T"N;dqL^N@_sf`<i"_c/`DC$D%)q4&dPWpu/&2%7<?X[52:K>Z8EI5AQGHj9+I9kVZVL@4E@qOZ!#dNcX5A=&#?V\22kj`OtuZQd.$qDjLP$$W-pa,>c.DGHT`@h0[h.N]rn4W57,[V%-?J]:oT>eg;#/9^N'I806=E<`P*X2o*D1aq'Y.hj[.fBq:EM9N&CJ7%lL\ra-"4@]AKKJO/<)C<HbrU:EU8FNWotKtX!>)]X,1QL%2%8YtcF"eCop3-(Stck_'DW5.6ePAR[#j>NZV:4oRe7&JcVc&B7c[Y?-[eYod+3EQ+s[]X5_>n?#A8B>,H-8R4=A7TVT.*7d)d?_%C8n\9$D-DJ(eIX(r:lf'p63:s`Gp_@i('<5WH"A@.]9jVFXh7FV[BD;:%3DoCnKU/LRWK5d:b0Z`r.2nW/]2AQK@Ml@LmJZ3Q9mC%;HoYGFXr:7%7H/8]Y$\A^KpAScU&iFj/ZUNqpEc02A*WRXc8c@iZLfNOgM(*:?%!R8[5+pNsMWNCmfF7N@724G0L[V_M9MOE-R-$%XQUYn,>Jmki`rAK39)9AX$X\lC\N-WcX`t@HAC5/YVW>m]p>mr0'Eh^9G/;EE$5TW%[.G5l!O$sMV^\DK5$W'j/51@6d"'1n<"S4%QF\nCG]Em4S^UZZ;?YB..RIg#a(5JX;O,2(Afs0J&k+0#LtNb#QpcBo9CNVt&M&NFO%@irM[TAC\[Y)05ZE<1-6-<R<i;fA8G$"M%&HtgkBVpiTVQmEKP#ZQo*6O-*S'A/eX9C7\<6<*>`@5(a(Jp6u,76T0G(cgs;1ihMLN,(gW'sC07SGSYUnQVSZkW$7ZAEHF"W%^3%r\W`P)NkVr:TW%+^S@7@,&q>@MT"Yq=%1_@&2YLc/m>tr!1Fo`gJ%>Q&:)Ag\3"0V-,W+SNSWXe"+oB.7+B$`-1n,U)R_)S9-C6A%?BPf*'KDFgq?j\pmZ'+<B28$qooTekiBp$EIaotn^K<l(k#/Ju]mH5Td9VZa#QW9I+MXj10Y;1/@e(:NOfpTGK\+mr2^>cMke7Sh%L9+9'ZfkQA/:iDiFdn@cX:5=p]Bn/2XBO%@e#bIV"IjHARpQmS>Ra-qNs%`F*nM^p?(eBD'Nn7,-,_*VaIEq.P#nMRC_0CR]r(s#%*fC5scH@CBT2o/lc"r*0emsNW=T"JMPdBb'(X&<,^#cG*a$/hshh>]b%=I7(X@m&>dNh1gV8oaEU6m=cRIKNn0nX9ApJ:,H:]KkS%5Q@A=J,SG8IeN@tr:.Q"p@ZJ`rr.-!r8Bk(s0!f'l30ELLMss'q#&U5s)NPejd1Jqr?)%6q<Qr<l$'o=\'P*DgY_pi5Q9L%s5j/r%5@orFr9j$grO%'.>5[:Rfg#H7?hLI@%tEb4?iU+dJ,K6]rU-S>$GuiAh<1F/iue<jgY_tlo2!.#qWG'6T>(6@n,N.l`h=LRkOX0C%l(:.BV3Q*oT`^hO@a+GfaFA$n*:O/ZO65iYi:?>OB/r_YINVUri+Bl6Ga]\FT>1+M,(FU=hji]R^OMEe+CGB/Z'g@agO\T6(;h2h%6pf2#qX1p_<8m3F;46pn[n$t3:O(TgNoLE36a6089RSN5#7tf+aH;G$c.>DlckHs1*^tSo'?1?(90ioJG!nKc!\'5=n3jFlAL8HQ%H!]Ho7FF[8Wn,6#h$<k@S[d(ep!<[.8LEY&T/q1o>JHd/odBc[>o*B#(?R"Eo"U_orR7D=%f>5_rb"IqjhCcD\,Z&\k8)r=s6LPO%q"EJBrjuP9rnK!of/I'NrT3Ksp$Me/^]3hb^]23$ptu,Ie%P4bFuQ,WHBX\WXJV$Z@"@G=rR^HaP\>!&g]NlC=QA'i!f=1O%WL]s%56)6@(VTK![9!6\h/nmahnD:Jb.kY%k1I^%]Ge"a2]X*%aC>e.Wq!fo2ni"5Ia9H.;tJcn'>rS+4q]($Z($aUp>n3>#X*@[.FdU?%6SFi@8@FkG(3WV5oJYY-pUf[,D$Y-(rq\4Ss8TR);#,"/ZM6lg6Kt[p<WD@?,V^ImlM>Br8m<cD@Q.s4f$UQSV'&fV[>8+cGHDk>%7#$lAZ<HtOYReR'3CuNiBdGZk3Mk:cj\DW1CeH<[kC,bZi)?Ek;Wpre'.W4;U7<"T'^gXK]1!+dU51#';u5]SmZ\X$&,H6XrH)0Z%qjU7Mf5IMGcYfSos8(2?If@Oa0E:]h^\[hGro;`tr29SekpJ^k5JHs<\,Z)UDgqTRm2nOjk23oK^VBaFc0p+:qsrKk4oaX8DuT7n%^R_KUqt].Ka7'$KaS?MLr$O`)YQ+JQ55d]o%jU3~>%AI9_PrivateDataEnd